{
  source: '/* global __resourceQuery, __webpack_hash__ */\n' +
    '/// <reference types="webpack/module" />\n' +
    'import webpackHotLog from "webpack/hot/log.js";\n' +
    'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
    'import parseURL from "./utils/parseURL.js";\n' +
    'import socket from "./socket.js";\n' +
    'import { formatProblem, show, hide } from "./overlay.js";\n' +
    'import { log, setLogLevel } from "./utils/log.js";\n' +
    'import sendMessage from "./utils/sendMessage.js";\n' +
    'import reloadApp from "./utils/reloadApp.js";\n' +
    'import createSocketURL from "./utils/createSocketURL.js";\n' +
    '/**\n' +
    ' * @typedef {Object} Options\n' +
    ' * @property {boolean} hot\n' +
    ' * @property {boolean} liveReload\n' +
    ' * @property {boolean} progress\n' +
    ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
    ' * @property {string} [logging]\n' +
    ' * @property {number} [reconnect]\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @typedef {Object} Status\n' +
    ' * @property {boolean} isUnloading\n' +
    ' * @property {string} currentHash\n' +
    ' * @property {string} [previousHash]\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @type {Status}\n' +
    ' */\n' +
    '\n' +
    'var status = {\n' +
    '  isUnloading: false,\n' +
    '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
    '  // eslint-disable-next-line camelcase\n' +
    '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
    '};\n' +
    '/** @type {Options} */\n' +
    '\n' +
    'var options = {\n' +
    '  hot: false,\n' +
    '  liveReload: false,\n' +
    '  progress: false,\n' +
    '  overlay: false\n' +
    '};\n' +
    'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
    '\n' +
    'if (parsedResourceQuery.hot === "true") {\n' +
    '  options.hot = true;\n' +
    '  log.info("Hot Module Replacement enabled.");\n' +
    '}\n' +
    '\n' +
    'if (parsedResourceQuery["live-reload"] === "true") {\n' +
    '  options.liveReload = true;\n' +
    '  log.info("Live Reloading enabled.");\n' +
    '}\n' +
    '\n' +
    'if (parsedResourceQuery.logging) {\n' +
    '  options.logging = parsedResourceQuery.logging;\n' +
    '}\n' +
    '\n' +
    'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
    '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
    '}\n' +
    '/**\n' +
    ' * @param {string} level\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function setAllLogLevel(level) {\n' +
    '  // This is needed because the HMR logger operate separately from dev server logger\n' +
    '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
    '  setLogLevel(level);\n' +
    '}\n' +
    '\n' +
    'if (options.logging) {\n' +
    '  setAllLogLevel(options.logging);\n' +
    '}\n' +
    '\n' +
    'self.addEventListener("beforeunload", function () {\n' +
    '  status.isUnloading = true;\n' +
    '});\n' +
    'var onSocketMessage = {\n' +
    '  hot: function hot() {\n' +
    '    if (parsedResourceQuery.hot === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.hot = true;\n' +
    '    log.info("Hot Module Replacement enabled.");\n' +
    '  },\n' +
    '  liveReload: function liveReload() {\n' +
    '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.liveReload = true;\n' +
    '    log.info("Live Reloading enabled.");\n' +
    '  },\n' +
    '  invalid: function invalid() {\n' +
    `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Invalid");\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {string} hash\n' +
    '   */\n' +
    '  hash: function hash(_hash) {\n' +
    '    status.previousHash = status.currentHash;\n' +
    '    status.currentHash = _hash;\n' +
    '  },\n' +
    '  logging: setAllLogLevel,\n' +
    '\n' +
    '  /**\n' +
    '   * @param {boolean} value\n' +
    '   */\n' +
    '  overlay: function overlay(value) {\n' +
    '    if (typeof document === "undefined") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.overlay = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {number} value\n' +
    '   */\n' +
    '  reconnect: function reconnect(value) {\n' +
    '    if (parsedResourceQuery.reconnect === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.reconnect = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {boolean} value\n' +
    '   */\n' +
    '  progress: function progress(value) {\n' +
    '    options.progress = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
    '   */\n' +
    '  "progress-update": function progressUpdate(data) {\n' +
    '    if (options.progress) {\n' +
    '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Progress", data);\n' +
    '  },\n' +
    '  "still-ok": function stillOk() {\n' +
    '    log.info("Nothing changed.");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("StillOk");\n' +
    '  },\n' +
    '  ok: function ok() {\n' +
    '    sendMessage("Ok");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    reloadApp(options, status);\n' +
    '  },\n' +
    "  // TODO: remove in v5 in favor of 'static-changed'\n" +
    '\n' +
    '  /**\n' +
    '   * @param {string} file\n' +
    '   */\n' +
    '  "content-changed": function contentChanged(file) {\n' +
    '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
    '    self.location.reload();\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {string} file\n' +
    '   */\n' +
    '  "static-changed": function staticChanged(file) {\n' +
    '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
    '    self.location.reload();\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error[]} warnings\n' +
    '   * @param {any} params\n' +
    '   */\n' +
    '  warnings: function warnings(_warnings, params) {\n' +
    '    log.warn("Warnings while compiling.");\n' +
    '\n' +
    '    var printableWarnings = _warnings.map(function (error) {\n' +
    '      var _formatProblem = formatProblem("warning", error),\n' +
    '          header = _formatProblem.header,\n' +
    '          body = _formatProblem.body;\n' +
    '\n' +
    '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
    '    });\n' +
    '\n' +
    '    sendMessage("Warnings", printableWarnings);\n' +
    '\n' +
    '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
    '      log.warn(printableWarnings[i]);\n' +
    '    }\n' +
    '\n' +
    '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
    '\n' +
    '    if (needShowOverlayForWarnings) {\n' +
    '      show("warning", _warnings);\n' +
    '    }\n' +
    '\n' +
    '    if (params && params.preventReloading) {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    reloadApp(options, status);\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error[]} errors\n' +
    '   */\n' +
    '  errors: function errors(_errors) {\n' +
    '    log.error("Errors while compiling. Reload prevented.");\n' +
    '\n' +
    '    var printableErrors = _errors.map(function (error) {\n' +
    '      var _formatProblem2 = formatProblem("error", error),\n' +
    '          header = _formatProblem2.header,\n' +
    '          body = _formatProblem2.body;\n' +
    '\n' +
    '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
    '    });\n' +
    '\n' +
    '    sendMessage("Errors", printableErrors);\n' +
    '\n' +
    '    for (var i = 0; i < printableErrors.length; i++) {\n' +
    '      log.error(printableErrors[i]);\n' +
    '    }\n' +
    '\n' +
    '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
    '\n' +
    '    if (needShowOverlayForErrors) {\n' +
    '      show("error", _errors);\n' +
    '    }\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error} error\n' +
    '   */\n' +
    '  error: function error(_error) {\n' +
    '    log.error(_error);\n' +
    '  },\n' +
    '  close: function close() {\n' +
    '    log.info("Disconnected!");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Close");\n' +
    '  }\n' +
    '};\n' +
    'var socketURL = createSocketURL(parsedResourceQuery);\n' +
    'socket(socketURL, onSocketMessage, options.reconnect);',
  current: NormalModule {
    dependencies: [],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1001,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    rawRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: undefined,
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js',
      request: undefined,
      query: '?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/index.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/index.js',
      __innerRequest: './client/index.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __resourceQuery, __webpack_hash__ */\n' +
        '/// <reference types="webpack/module" />\n' +
        'import webpackHotLog from "webpack/hot/log.js";\n' +
        'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
        'import parseURL from "./utils/parseURL.js";\n' +
        'import socket from "./socket.js";\n' +
        'import { formatProblem, show, hide } from "./overlay.js";\n' +
        'import { log, setLogLevel } from "./utils/log.js";\n' +
        'import sendMessage from "./utils/sendMessage.js";\n' +
        'import reloadApp from "./utils/reloadApp.js";\n' +
        'import createSocketURL from "./utils/createSocketURL.js";\n' +
        '/**\n' +
        ' * @typedef {Object} Options\n' +
        ' * @property {boolean} hot\n' +
        ' * @property {boolean} liveReload\n' +
        ' * @property {boolean} progress\n' +
        ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
        ' * @property {string} [logging]\n' +
        ' * @property {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @typedef {Object} Status\n' +
        ' * @property {boolean} isUnloading\n' +
        ' * @property {string} currentHash\n' +
        ' * @property {string} [previousHash]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @type {Status}\n' +
        ' */\n' +
        '\n' +
        'var status = {\n' +
        '  isUnloading: false,\n' +
        '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
        '  // eslint-disable-next-line camelcase\n' +
        '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
        '};\n' +
        '/** @type {Options} */\n' +
        '\n' +
        'var options = {\n' +
        '  hot: false,\n' +
        '  liveReload: false,\n' +
        '  progress: false,\n' +
        '  overlay: false\n' +
        '};\n' +
        'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
        '\n' +
        'if (parsedResourceQuery.hot === "true") {\n' +
        '  options.hot = true;\n' +
        '  log.info("Hot Module Replacement enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery["live-reload"] === "true") {\n' +
        '  options.liveReload = true;\n' +
        '  log.info("Live Reloading enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery.logging) {\n' +
        '  options.logging = parsedResourceQuery.logging;\n' +
        '}\n' +
        '\n' +
        'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
        '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} level\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function setAllLogLevel(level) {\n' +
        '  // This is needed because the HMR logger operate separately from dev server logger\n' +
        '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
        '  setLogLevel(level);\n' +
        '}\n' +
        '\n' +
        'if (options.logging) {\n' +
        '  setAllLogLevel(options.logging);\n' +
        '}\n' +
        '\n' +
        'self.addEventListener("beforeunload", function () {\n' +
        '  status.isUnloading = true;\n' +
        '});\n' +
        'var onSocketMessage = {\n' +
        '  hot: function hot() {\n' +
        '    if (parsedResourceQuery.hot === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.hot = true;\n' +
        '    log.info("Hot Module Replacement enabled.");\n' +
        '  },\n' +
        '  liveReload: function liveReload() {\n' +
        '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.liveReload = true;\n' +
        '    log.info("Live Reloading enabled.");\n' +
        '  },\n' +
        '  invalid: function invalid() {\n' +
        `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Invalid");\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} hash\n' +
        '   */\n' +
        '  hash: function hash(_hash) {\n' +
        '    status.previousHash = status.currentHash;\n' +
        '    status.currentHash = _hash;\n' +
        '  },\n' +
        '  logging: setAllLogLevel,\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  overlay: function overlay(value) {\n' +
        '    if (typeof document === "undefined") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.overlay = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {number} value\n' +
        '   */\n' +
        '  reconnect: function reconnect(value) {\n' +
        '    if (parsedResourceQuery.reconnect === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.reconnect = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  progress: function progress(value) {\n' +
        '    options.progress = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
        '   */\n' +
        '  "progress-update": function progressUpdate(data) {\n' +
        '    if (options.progress) {\n' +
        '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Progress", data);\n' +
        '  },\n' +
        '  "still-ok": function stillOk() {\n' +
        '    log.info("Nothing changed.");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("StillOk");\n' +
        '  },\n' +
        '  ok: function ok() {\n' +
        '    sendMessage("Ok");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        "  // TODO: remove in v5 in favor of 'static-changed'\n" +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "content-changed": function contentChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "static-changed": function staticChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} warnings\n' +
        '   * @param {any} params\n' +
        '   */\n' +
        '  warnings: function warnings(_warnings, params) {\n' +
        '    log.warn("Warnings while compiling.");\n' +
        '\n' +
        '    var printableWarnings = _warnings.map(function (error) {\n' +
        '      var _formatProblem = formatProblem("warning", error),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Warnings", printableWarnings);\n' +
        '\n' +
        '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
        '      log.warn(printableWarnings[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
        '\n' +
        '    if (needShowOverlayForWarnings) {\n' +
        '      show("warning", _warnings);\n' +
        '    }\n' +
        '\n' +
        '    if (params && params.preventReloading) {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} errors\n' +
        '   */\n' +
        '  errors: function errors(_errors) {\n' +
        '    log.error("Errors while compiling. Reload prevented.");\n' +
        '\n' +
        '    var printableErrors = _errors.map(function (error) {\n' +
        '      var _formatProblem2 = formatProblem("error", error),\n' +
        '          header = _formatProblem2.header,\n' +
        '          body = _formatProblem2.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Errors", printableErrors);\n' +
        '\n' +
        '    for (var i = 0; i < printableErrors.length; i++) {\n' +
        '      log.error(printableErrors[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
        '\n' +
        '    if (needShowOverlayForErrors) {\n' +
        '      show("error", _errors);\n' +
        '    }\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error} error\n' +
        '   */\n' +
        '  error: function error(_error) {\n' +
        '    log.error(_error);\n' +
        '  },\n' +
        '  close: function close() {\n' +
        '    log.info("Disconnected!");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Close");\n' +
        '  }\n' +
        '};\n' +
        'var socketURL = createSocketURL(parsedResourceQuery);\n' +
        'socket(socketURL, onSocketMessage, options.reconnect);',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1001,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    rawRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: undefined,
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js',
      request: undefined,
      query: '?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/index.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/index.js',
      __innerRequest: './client/index.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __resourceQuery, __webpack_hash__ */\n' +
        '/// <reference types="webpack/module" />\n' +
        'import webpackHotLog from "webpack/hot/log.js";\n' +
        'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
        'import parseURL from "./utils/parseURL.js";\n' +
        'import socket from "./socket.js";\n' +
        'import { formatProblem, show, hide } from "./overlay.js";\n' +
        'import { log, setLogLevel } from "./utils/log.js";\n' +
        'import sendMessage from "./utils/sendMessage.js";\n' +
        'import reloadApp from "./utils/reloadApp.js";\n' +
        'import createSocketURL from "./utils/createSocketURL.js";\n' +
        '/**\n' +
        ' * @typedef {Object} Options\n' +
        ' * @property {boolean} hot\n' +
        ' * @property {boolean} liveReload\n' +
        ' * @property {boolean} progress\n' +
        ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
        ' * @property {string} [logging]\n' +
        ' * @property {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @typedef {Object} Status\n' +
        ' * @property {boolean} isUnloading\n' +
        ' * @property {string} currentHash\n' +
        ' * @property {string} [previousHash]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @type {Status}\n' +
        ' */\n' +
        '\n' +
        'var status = {\n' +
        '  isUnloading: false,\n' +
        '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
        '  // eslint-disable-next-line camelcase\n' +
        '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
        '};\n' +
        '/** @type {Options} */\n' +
        '\n' +
        'var options = {\n' +
        '  hot: false,\n' +
        '  liveReload: false,\n' +
        '  progress: false,\n' +
        '  overlay: false\n' +
        '};\n' +
        'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
        '\n' +
        'if (parsedResourceQuery.hot === "true") {\n' +
        '  options.hot = true;\n' +
        '  log.info("Hot Module Replacement enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery["live-reload"] === "true") {\n' +
        '  options.liveReload = true;\n' +
        '  log.info("Live Reloading enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery.logging) {\n' +
        '  options.logging = parsedResourceQuery.logging;\n' +
        '}\n' +
        '\n' +
        'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
        '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} level\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function setAllLogLevel(level) {\n' +
        '  // This is needed because the HMR logger operate separately from dev server logger\n' +
        '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
        '  setLogLevel(level);\n' +
        '}\n' +
        '\n' +
        'if (options.logging) {\n' +
        '  setAllLogLevel(options.logging);\n' +
        '}\n' +
        '\n' +
        'self.addEventListener("beforeunload", function () {\n' +
        '  status.isUnloading = true;\n' +
        '});\n' +
        'var onSocketMessage = {\n' +
        '  hot: function hot() {\n' +
        '    if (parsedResourceQuery.hot === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.hot = true;\n' +
        '    log.info("Hot Module Replacement enabled.");\n' +
        '  },\n' +
        '  liveReload: function liveReload() {\n' +
        '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.liveReload = true;\n' +
        '    log.info("Live Reloading enabled.");\n' +
        '  },\n' +
        '  invalid: function invalid() {\n' +
        `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Invalid");\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} hash\n' +
        '   */\n' +
        '  hash: function hash(_hash) {\n' +
        '    status.previousHash = status.currentHash;\n' +
        '    status.currentHash = _hash;\n' +
        '  },\n' +
        '  logging: setAllLogLevel,\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  overlay: function overlay(value) {\n' +
        '    if (typeof document === "undefined") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.overlay = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {number} value\n' +
        '   */\n' +
        '  reconnect: function reconnect(value) {\n' +
        '    if (parsedResourceQuery.reconnect === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.reconnect = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  progress: function progress(value) {\n' +
        '    options.progress = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
        '   */\n' +
        '  "progress-update": function progressUpdate(data) {\n' +
        '    if (options.progress) {\n' +
        '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Progress", data);\n' +
        '  },\n' +
        '  "still-ok": function stillOk() {\n' +
        '    log.info("Nothing changed.");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("StillOk");\n' +
        '  },\n' +
        '  ok: function ok() {\n' +
        '    sendMessage("Ok");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        "  // TODO: remove in v5 in favor of 'static-changed'\n" +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "content-changed": function contentChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "static-changed": function staticChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} warnings\n' +
        '   * @param {any} params\n' +
        '   */\n' +
        '  warnings: function warnings(_warnings, params) {\n' +
        '    log.warn("Warnings while compiling.");\n' +
        '\n' +
        '    var printableWarnings = _warnings.map(function (error) {\n' +
        '      var _formatProblem = formatProblem("warning", error),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Warnings", printableWarnings);\n' +
        '\n' +
        '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
        '      log.warn(printableWarnings[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
        '\n' +
        '    if (needShowOverlayForWarnings) {\n' +
        '      show("warning", _warnings);\n' +
        '    }\n' +
        '\n' +
        '    if (params && params.preventReloading) {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} errors\n' +
        '   */\n' +
        '  errors: function errors(_errors) {\n' +
        '    log.error("Errors while compiling. Reload prevented.");\n' +
        '\n' +
        '    var printableErrors = _errors.map(function (error) {\n' +
        '      var _formatProblem2 = formatProblem("error", error),\n' +
        '          header = _formatProblem2.header,\n' +
        '          body = _formatProblem2.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Errors", printableErrors);\n' +
        '\n' +
        '    for (var i = 0; i < printableErrors.length; i++) {\n' +
        '      log.error(printableErrors[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
        '\n' +
        '    if (needShowOverlayForErrors) {\n' +
        '      show("error", _errors);\n' +
        '    }\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error} error\n' +
        '   */\n' +
        '  error: function error(_error) {\n' +
        '    log.error(_error);\n' +
        '  },\n' +
        '  close: function close() {\n' +
        '    log.info("Disconnected!");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Close");\n' +
        '  }\n' +
        '};\n' +
        'var socketURL = createSocketURL(parsedResourceQuery);\n' +
        'socket(socketURL, onSocketMessage, options.reconnect);',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 5,
      _statTestedSnapshotsCached: 0,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 101,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 6,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  }
}
source :  ./modules/strip-ansi/index.js
 parser.state :  {
  source: '/* global __resourceQuery, __webpack_hash__ */\n' +
    '/// <reference types="webpack/module" />\n' +
    'import webpackHotLog from "webpack/hot/log.js";\n' +
    'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
    'import parseURL from "./utils/parseURL.js";\n' +
    'import socket from "./socket.js";\n' +
    'import { formatProblem, show, hide } from "./overlay.js";\n' +
    'import { log, setLogLevel } from "./utils/log.js";\n' +
    'import sendMessage from "./utils/sendMessage.js";\n' +
    'import reloadApp from "./utils/reloadApp.js";\n' +
    'import createSocketURL from "./utils/createSocketURL.js";\n' +
    '/**\n' +
    ' * @typedef {Object} Options\n' +
    ' * @property {boolean} hot\n' +
    ' * @property {boolean} liveReload\n' +
    ' * @property {boolean} progress\n' +
    ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
    ' * @property {string} [logging]\n' +
    ' * @property {number} [reconnect]\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @typedef {Object} Status\n' +
    ' * @property {boolean} isUnloading\n' +
    ' * @property {string} currentHash\n' +
    ' * @property {string} [previousHash]\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @type {Status}\n' +
    ' */\n' +
    '\n' +
    'var status = {\n' +
    '  isUnloading: false,\n' +
    '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
    '  // eslint-disable-next-line camelcase\n' +
    '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
    '};\n' +
    '/** @type {Options} */\n' +
    '\n' +
    'var options = {\n' +
    '  hot: false,\n' +
    '  liveReload: false,\n' +
    '  progress: false,\n' +
    '  overlay: false\n' +
    '};\n' +
    'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
    '\n' +
    'if (parsedResourceQuery.hot === "true") {\n' +
    '  options.hot = true;\n' +
    '  log.info("Hot Module Replacement enabled.");\n' +
    '}\n' +
    '\n' +
    'if (parsedResourceQuery["live-reload"] === "true") {\n' +
    '  options.liveReload = true;\n' +
    '  log.info("Live Reloading enabled.");\n' +
    '}\n' +
    '\n' +
    'if (parsedResourceQuery.logging) {\n' +
    '  options.logging = parsedResourceQuery.logging;\n' +
    '}\n' +
    '\n' +
    'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
    '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
    '}\n' +
    '/**\n' +
    ' * @param {string} level\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function setAllLogLevel(level) {\n' +
    '  // This is needed because the HMR logger operate separately from dev server logger\n' +
    '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
    '  setLogLevel(level);\n' +
    '}\n' +
    '\n' +
    'if (options.logging) {\n' +
    '  setAllLogLevel(options.logging);\n' +
    '}\n' +
    '\n' +
    'self.addEventListener("beforeunload", function () {\n' +
    '  status.isUnloading = true;\n' +
    '});\n' +
    'var onSocketMessage = {\n' +
    '  hot: function hot() {\n' +
    '    if (parsedResourceQuery.hot === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.hot = true;\n' +
    '    log.info("Hot Module Replacement enabled.");\n' +
    '  },\n' +
    '  liveReload: function liveReload() {\n' +
    '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.liveReload = true;\n' +
    '    log.info("Live Reloading enabled.");\n' +
    '  },\n' +
    '  invalid: function invalid() {\n' +
    `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Invalid");\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {string} hash\n' +
    '   */\n' +
    '  hash: function hash(_hash) {\n' +
    '    status.previousHash = status.currentHash;\n' +
    '    status.currentHash = _hash;\n' +
    '  },\n' +
    '  logging: setAllLogLevel,\n' +
    '\n' +
    '  /**\n' +
    '   * @param {boolean} value\n' +
    '   */\n' +
    '  overlay: function overlay(value) {\n' +
    '    if (typeof document === "undefined") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.overlay = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {number} value\n' +
    '   */\n' +
    '  reconnect: function reconnect(value) {\n' +
    '    if (parsedResourceQuery.reconnect === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.reconnect = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {boolean} value\n' +
    '   */\n' +
    '  progress: function progress(value) {\n' +
    '    options.progress = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
    '   */\n' +
    '  "progress-update": function progressUpdate(data) {\n' +
    '    if (options.progress) {\n' +
    '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Progress", data);\n' +
    '  },\n' +
    '  "still-ok": function stillOk() {\n' +
    '    log.info("Nothing changed.");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("StillOk");\n' +
    '  },\n' +
    '  ok: function ok() {\n' +
    '    sendMessage("Ok");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    reloadApp(options, status);\n' +
    '  },\n' +
    "  // TODO: remove in v5 in favor of 'static-changed'\n" +
    '\n' +
    '  /**\n' +
    '   * @param {string} file\n' +
    '   */\n' +
    '  "content-changed": function contentChanged(file) {\n' +
    '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
    '    self.location.reload();\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {string} file\n' +
    '   */\n' +
    '  "static-changed": function staticChanged(file) {\n' +
    '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
    '    self.location.reload();\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error[]} warnings\n' +
    '   * @param {any} params\n' +
    '   */\n' +
    '  warnings: function warnings(_warnings, params) {\n' +
    '    log.warn("Warnings while compiling.");\n' +
    '\n' +
    '    var printableWarnings = _warnings.map(function (error) {\n' +
    '      var _formatProblem = formatProblem("warning", error),\n' +
    '          header = _formatProblem.header,\n' +
    '          body = _formatProblem.body;\n' +
    '\n' +
    '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
    '    });\n' +
    '\n' +
    '    sendMessage("Warnings", printableWarnings);\n' +
    '\n' +
    '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
    '      log.warn(printableWarnings[i]);\n' +
    '    }\n' +
    '\n' +
    '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
    '\n' +
    '    if (needShowOverlayForWarnings) {\n' +
    '      show("warning", _warnings);\n' +
    '    }\n' +
    '\n' +
    '    if (params && params.preventReloading) {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    reloadApp(options, status);\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error[]} errors\n' +
    '   */\n' +
    '  errors: function errors(_errors) {\n' +
    '    log.error("Errors while compiling. Reload prevented.");\n' +
    '\n' +
    '    var printableErrors = _errors.map(function (error) {\n' +
    '      var _formatProblem2 = formatProblem("error", error),\n' +
    '          header = _formatProblem2.header,\n' +
    '          body = _formatProblem2.body;\n' +
    '\n' +
    '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
    '    });\n' +
    '\n' +
    '    sendMessage("Errors", printableErrors);\n' +
    '\n' +
    '    for (var i = 0; i < printableErrors.length; i++) {\n' +
    '      log.error(printableErrors[i]);\n' +
    '    }\n' +
    '\n' +
    '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
    '\n' +
    '    if (needShowOverlayForErrors) {\n' +
    '      show("error", _errors);\n' +
    '    }\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error} error\n' +
    '   */\n' +
    '  error: function error(_error) {\n' +
    '    log.error(_error);\n' +
    '  },\n' +
    '  close: function close() {\n' +
    '    log.info("Disconnected!");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Close");\n' +
    '  }\n' +
    '};\n' +
    'var socketURL = createSocketURL(parsedResourceQuery);\n' +
    'socket(socketURL, onSocketMessage, options.reconnect);',
  current: NormalModule {
    dependencies: [ [HarmonyImportSideEffectDependency] ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1001,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency], [ConstDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    rawRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js',
      request: undefined,
      query: '?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/index.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/index.js',
      __innerRequest: './client/index.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __resourceQuery, __webpack_hash__ */\n' +
        '/// <reference types="webpack/module" />\n' +
        'import webpackHotLog from "webpack/hot/log.js";\n' +
        'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
        'import parseURL from "./utils/parseURL.js";\n' +
        'import socket from "./socket.js";\n' +
        'import { formatProblem, show, hide } from "./overlay.js";\n' +
        'import { log, setLogLevel } from "./utils/log.js";\n' +
        'import sendMessage from "./utils/sendMessage.js";\n' +
        'import reloadApp from "./utils/reloadApp.js";\n' +
        'import createSocketURL from "./utils/createSocketURL.js";\n' +
        '/**\n' +
        ' * @typedef {Object} Options\n' +
        ' * @property {boolean} hot\n' +
        ' * @property {boolean} liveReload\n' +
        ' * @property {boolean} progress\n' +
        ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
        ' * @property {string} [logging]\n' +
        ' * @property {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @typedef {Object} Status\n' +
        ' * @property {boolean} isUnloading\n' +
        ' * @property {string} currentHash\n' +
        ' * @property {string} [previousHash]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @type {Status}\n' +
        ' */\n' +
        '\n' +
        'var status = {\n' +
        '  isUnloading: false,\n' +
        '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
        '  // eslint-disable-next-line camelcase\n' +
        '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
        '};\n' +
        '/** @type {Options} */\n' +
        '\n' +
        'var options = {\n' +
        '  hot: false,\n' +
        '  liveReload: false,\n' +
        '  progress: false,\n' +
        '  overlay: false\n' +
        '};\n' +
        'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
        '\n' +
        'if (parsedResourceQuery.hot === "true") {\n' +
        '  options.hot = true;\n' +
        '  log.info("Hot Module Replacement enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery["live-reload"] === "true") {\n' +
        '  options.liveReload = true;\n' +
        '  log.info("Live Reloading enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery.logging) {\n' +
        '  options.logging = parsedResourceQuery.logging;\n' +
        '}\n' +
        '\n' +
        'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
        '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} level\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function setAllLogLevel(level) {\n' +
        '  // This is needed because the HMR logger operate separately from dev server logger\n' +
        '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
        '  setLogLevel(level);\n' +
        '}\n' +
        '\n' +
        'if (options.logging) {\n' +
        '  setAllLogLevel(options.logging);\n' +
        '}\n' +
        '\n' +
        'self.addEventListener("beforeunload", function () {\n' +
        '  status.isUnloading = true;\n' +
        '});\n' +
        'var onSocketMessage = {\n' +
        '  hot: function hot() {\n' +
        '    if (parsedResourceQuery.hot === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.hot = true;\n' +
        '    log.info("Hot Module Replacement enabled.");\n' +
        '  },\n' +
        '  liveReload: function liveReload() {\n' +
        '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.liveReload = true;\n' +
        '    log.info("Live Reloading enabled.");\n' +
        '  },\n' +
        '  invalid: function invalid() {\n' +
        `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Invalid");\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} hash\n' +
        '   */\n' +
        '  hash: function hash(_hash) {\n' +
        '    status.previousHash = status.currentHash;\n' +
        '    status.currentHash = _hash;\n' +
        '  },\n' +
        '  logging: setAllLogLevel,\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  overlay: function overlay(value) {\n' +
        '    if (typeof document === "undefined") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.overlay = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {number} value\n' +
        '   */\n' +
        '  reconnect: function reconnect(value) {\n' +
        '    if (parsedResourceQuery.reconnect === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.reconnect = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  progress: function progress(value) {\n' +
        '    options.progress = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
        '   */\n' +
        '  "progress-update": function progressUpdate(data) {\n' +
        '    if (options.progress) {\n' +
        '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Progress", data);\n' +
        '  },\n' +
        '  "still-ok": function stillOk() {\n' +
        '    log.info("Nothing changed.");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("StillOk");\n' +
        '  },\n' +
        '  ok: function ok() {\n' +
        '    sendMessage("Ok");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        "  // TODO: remove in v5 in favor of 'static-changed'\n" +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "content-changed": function contentChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "static-changed": function staticChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} warnings\n' +
        '   * @param {any} params\n' +
        '   */\n' +
        '  warnings: function warnings(_warnings, params) {\n' +
        '    log.warn("Warnings while compiling.");\n' +
        '\n' +
        '    var printableWarnings = _warnings.map(function (error) {\n' +
        '      var _formatProblem = formatProblem("warning", error),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Warnings", printableWarnings);\n' +
        '\n' +
        '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
        '      log.warn(printableWarnings[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
        '\n' +
        '    if (needShowOverlayForWarnings) {\n' +
        '      show("warning", _warnings);\n' +
        '    }\n' +
        '\n' +
        '    if (params && params.preventReloading) {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} errors\n' +
        '   */\n' +
        '  errors: function errors(_errors) {\n' +
        '    log.error("Errors while compiling. Reload prevented.");\n' +
        '\n' +
        '    var printableErrors = _errors.map(function (error) {\n' +
        '      var _formatProblem2 = formatProblem("error", error),\n' +
        '          header = _formatProblem2.header,\n' +
        '          body = _formatProblem2.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Errors", printableErrors);\n' +
        '\n' +
        '    for (var i = 0; i < printableErrors.length; i++) {\n' +
        '      log.error(printableErrors[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
        '\n' +
        '    if (needShowOverlayForErrors) {\n' +
        '      show("error", _errors);\n' +
        '    }\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error} error\n' +
        '   */\n' +
        '  error: function error(_error) {\n' +
        '    log.error(_error);\n' +
        '  },\n' +
        '  close: function close() {\n' +
        '    log.info("Disconnected!");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Close");\n' +
        '  }\n' +
        '};\n' +
        'var socketURL = createSocketURL(parsedResourceQuery);\n' +
        'socket(socketURL, onSocketMessage, options.reconnect);',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [ [HarmonyImportSideEffectDependency] ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1001,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency], [ConstDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    rawRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js',
      request: undefined,
      query: '?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/index.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/index.js',
      __innerRequest: './client/index.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __resourceQuery, __webpack_hash__ */\n' +
        '/// <reference types="webpack/module" />\n' +
        'import webpackHotLog from "webpack/hot/log.js";\n' +
        'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
        'import parseURL from "./utils/parseURL.js";\n' +
        'import socket from "./socket.js";\n' +
        'import { formatProblem, show, hide } from "./overlay.js";\n' +
        'import { log, setLogLevel } from "./utils/log.js";\n' +
        'import sendMessage from "./utils/sendMessage.js";\n' +
        'import reloadApp from "./utils/reloadApp.js";\n' +
        'import createSocketURL from "./utils/createSocketURL.js";\n' +
        '/**\n' +
        ' * @typedef {Object} Options\n' +
        ' * @property {boolean} hot\n' +
        ' * @property {boolean} liveReload\n' +
        ' * @property {boolean} progress\n' +
        ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
        ' * @property {string} [logging]\n' +
        ' * @property {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @typedef {Object} Status\n' +
        ' * @property {boolean} isUnloading\n' +
        ' * @property {string} currentHash\n' +
        ' * @property {string} [previousHash]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @type {Status}\n' +
        ' */\n' +
        '\n' +
        'var status = {\n' +
        '  isUnloading: false,\n' +
        '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
        '  // eslint-disable-next-line camelcase\n' +
        '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
        '};\n' +
        '/** @type {Options} */\n' +
        '\n' +
        'var options = {\n' +
        '  hot: false,\n' +
        '  liveReload: false,\n' +
        '  progress: false,\n' +
        '  overlay: false\n' +
        '};\n' +
        'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
        '\n' +
        'if (parsedResourceQuery.hot === "true") {\n' +
        '  options.hot = true;\n' +
        '  log.info("Hot Module Replacement enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery["live-reload"] === "true") {\n' +
        '  options.liveReload = true;\n' +
        '  log.info("Live Reloading enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery.logging) {\n' +
        '  options.logging = parsedResourceQuery.logging;\n' +
        '}\n' +
        '\n' +
        'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
        '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} level\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function setAllLogLevel(level) {\n' +
        '  // This is needed because the HMR logger operate separately from dev server logger\n' +
        '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
        '  setLogLevel(level);\n' +
        '}\n' +
        '\n' +
        'if (options.logging) {\n' +
        '  setAllLogLevel(options.logging);\n' +
        '}\n' +
        '\n' +
        'self.addEventListener("beforeunload", function () {\n' +
        '  status.isUnloading = true;\n' +
        '});\n' +
        'var onSocketMessage = {\n' +
        '  hot: function hot() {\n' +
        '    if (parsedResourceQuery.hot === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.hot = true;\n' +
        '    log.info("Hot Module Replacement enabled.");\n' +
        '  },\n' +
        '  liveReload: function liveReload() {\n' +
        '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.liveReload = true;\n' +
        '    log.info("Live Reloading enabled.");\n' +
        '  },\n' +
        '  invalid: function invalid() {\n' +
        `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Invalid");\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} hash\n' +
        '   */\n' +
        '  hash: function hash(_hash) {\n' +
        '    status.previousHash = status.currentHash;\n' +
        '    status.currentHash = _hash;\n' +
        '  },\n' +
        '  logging: setAllLogLevel,\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  overlay: function overlay(value) {\n' +
        '    if (typeof document === "undefined") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.overlay = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {number} value\n' +
        '   */\n' +
        '  reconnect: function reconnect(value) {\n' +
        '    if (parsedResourceQuery.reconnect === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.reconnect = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  progress: function progress(value) {\n' +
        '    options.progress = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
        '   */\n' +
        '  "progress-update": function progressUpdate(data) {\n' +
        '    if (options.progress) {\n' +
        '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Progress", data);\n' +
        '  },\n' +
        '  "still-ok": function stillOk() {\n' +
        '    log.info("Nothing changed.");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("StillOk");\n' +
        '  },\n' +
        '  ok: function ok() {\n' +
        '    sendMessage("Ok");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        "  // TODO: remove in v5 in favor of 'static-changed'\n" +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "content-changed": function contentChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "static-changed": function staticChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} warnings\n' +
        '   * @param {any} params\n' +
        '   */\n' +
        '  warnings: function warnings(_warnings, params) {\n' +
        '    log.warn("Warnings while compiling.");\n' +
        '\n' +
        '    var printableWarnings = _warnings.map(function (error) {\n' +
        '      var _formatProblem = formatProblem("warning", error),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Warnings", printableWarnings);\n' +
        '\n' +
        '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
        '      log.warn(printableWarnings[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
        '\n' +
        '    if (needShowOverlayForWarnings) {\n' +
        '      show("warning", _warnings);\n' +
        '    }\n' +
        '\n' +
        '    if (params && params.preventReloading) {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} errors\n' +
        '   */\n' +
        '  errors: function errors(_errors) {\n' +
        '    log.error("Errors while compiling. Reload prevented.");\n' +
        '\n' +
        '    var printableErrors = _errors.map(function (error) {\n' +
        '      var _formatProblem2 = formatProblem("error", error),\n' +
        '          header = _formatProblem2.header,\n' +
        '          body = _formatProblem2.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Errors", printableErrors);\n' +
        '\n' +
        '    for (var i = 0; i < printableErrors.length; i++) {\n' +
        '      log.error(printableErrors[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
        '\n' +
        '    if (needShowOverlayForErrors) {\n' +
        '      show("error", _errors);\n' +
        '    }\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error} error\n' +
        '   */\n' +
        '  error: function error(_error) {\n' +
        '    log.error(_error);\n' +
        '  },\n' +
        '  close: function close() {\n' +
        '    log.info("Disconnected!");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Close");\n' +
        '  }\n' +
        '};\n' +
        'var socketURL = createSocketURL(parsedResourceQuery);\n' +
        'socket(socketURL, onSocketMessage, options.reconnect);',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 5,
      _statTestedSnapshotsCached: 0,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 101,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 6,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  },
  lastHarmonyImportOrder: 1
}
source :  ./utils/parseURL.js
 parser.state :  {
  source: '/* global __resourceQuery, __webpack_hash__ */\n' +
    '/// <reference types="webpack/module" />\n' +
    'import webpackHotLog from "webpack/hot/log.js";\n' +
    'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
    'import parseURL from "./utils/parseURL.js";\n' +
    'import socket from "./socket.js";\n' +
    'import { formatProblem, show, hide } from "./overlay.js";\n' +
    'import { log, setLogLevel } from "./utils/log.js";\n' +
    'import sendMessage from "./utils/sendMessage.js";\n' +
    'import reloadApp from "./utils/reloadApp.js";\n' +
    'import createSocketURL from "./utils/createSocketURL.js";\n' +
    '/**\n' +
    ' * @typedef {Object} Options\n' +
    ' * @property {boolean} hot\n' +
    ' * @property {boolean} liveReload\n' +
    ' * @property {boolean} progress\n' +
    ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
    ' * @property {string} [logging]\n' +
    ' * @property {number} [reconnect]\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @typedef {Object} Status\n' +
    ' * @property {boolean} isUnloading\n' +
    ' * @property {string} currentHash\n' +
    ' * @property {string} [previousHash]\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @type {Status}\n' +
    ' */\n' +
    '\n' +
    'var status = {\n' +
    '  isUnloading: false,\n' +
    '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
    '  // eslint-disable-next-line camelcase\n' +
    '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
    '};\n' +
    '/** @type {Options} */\n' +
    '\n' +
    'var options = {\n' +
    '  hot: false,\n' +
    '  liveReload: false,\n' +
    '  progress: false,\n' +
    '  overlay: false\n' +
    '};\n' +
    'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
    '\n' +
    'if (parsedResourceQuery.hot === "true") {\n' +
    '  options.hot = true;\n' +
    '  log.info("Hot Module Replacement enabled.");\n' +
    '}\n' +
    '\n' +
    'if (parsedResourceQuery["live-reload"] === "true") {\n' +
    '  options.liveReload = true;\n' +
    '  log.info("Live Reloading enabled.");\n' +
    '}\n' +
    '\n' +
    'if (parsedResourceQuery.logging) {\n' +
    '  options.logging = parsedResourceQuery.logging;\n' +
    '}\n' +
    '\n' +
    'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
    '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
    '}\n' +
    '/**\n' +
    ' * @param {string} level\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function setAllLogLevel(level) {\n' +
    '  // This is needed because the HMR logger operate separately from dev server logger\n' +
    '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
    '  setLogLevel(level);\n' +
    '}\n' +
    '\n' +
    'if (options.logging) {\n' +
    '  setAllLogLevel(options.logging);\n' +
    '}\n' +
    '\n' +
    'self.addEventListener("beforeunload", function () {\n' +
    '  status.isUnloading = true;\n' +
    '});\n' +
    'var onSocketMessage = {\n' +
    '  hot: function hot() {\n' +
    '    if (parsedResourceQuery.hot === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.hot = true;\n' +
    '    log.info("Hot Module Replacement enabled.");\n' +
    '  },\n' +
    '  liveReload: function liveReload() {\n' +
    '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.liveReload = true;\n' +
    '    log.info("Live Reloading enabled.");\n' +
    '  },\n' +
    '  invalid: function invalid() {\n' +
    `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Invalid");\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {string} hash\n' +
    '   */\n' +
    '  hash: function hash(_hash) {\n' +
    '    status.previousHash = status.currentHash;\n' +
    '    status.currentHash = _hash;\n' +
    '  },\n' +
    '  logging: setAllLogLevel,\n' +
    '\n' +
    '  /**\n' +
    '   * @param {boolean} value\n' +
    '   */\n' +
    '  overlay: function overlay(value) {\n' +
    '    if (typeof document === "undefined") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.overlay = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {number} value\n' +
    '   */\n' +
    '  reconnect: function reconnect(value) {\n' +
    '    if (parsedResourceQuery.reconnect === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.reconnect = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {boolean} value\n' +
    '   */\n' +
    '  progress: function progress(value) {\n' +
    '    options.progress = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
    '   */\n' +
    '  "progress-update": function progressUpdate(data) {\n' +
    '    if (options.progress) {\n' +
    '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Progress", data);\n' +
    '  },\n' +
    '  "still-ok": function stillOk() {\n' +
    '    log.info("Nothing changed.");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("StillOk");\n' +
    '  },\n' +
    '  ok: function ok() {\n' +
    '    sendMessage("Ok");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    reloadApp(options, status);\n' +
    '  },\n' +
    "  // TODO: remove in v5 in favor of 'static-changed'\n" +
    '\n' +
    '  /**\n' +
    '   * @param {string} file\n' +
    '   */\n' +
    '  "content-changed": function contentChanged(file) {\n' +
    '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
    '    self.location.reload();\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {string} file\n' +
    '   */\n' +
    '  "static-changed": function staticChanged(file) {\n' +
    '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
    '    self.location.reload();\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error[]} warnings\n' +
    '   * @param {any} params\n' +
    '   */\n' +
    '  warnings: function warnings(_warnings, params) {\n' +
    '    log.warn("Warnings while compiling.");\n' +
    '\n' +
    '    var printableWarnings = _warnings.map(function (error) {\n' +
    '      var _formatProblem = formatProblem("warning", error),\n' +
    '          header = _formatProblem.header,\n' +
    '          body = _formatProblem.body;\n' +
    '\n' +
    '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
    '    });\n' +
    '\n' +
    '    sendMessage("Warnings", printableWarnings);\n' +
    '\n' +
    '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
    '      log.warn(printableWarnings[i]);\n' +
    '    }\n' +
    '\n' +
    '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
    '\n' +
    '    if (needShowOverlayForWarnings) {\n' +
    '      show("warning", _warnings);\n' +
    '    }\n' +
    '\n' +
    '    if (params && params.preventReloading) {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    reloadApp(options, status);\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error[]} errors\n' +
    '   */\n' +
    '  errors: function errors(_errors) {\n' +
    '    log.error("Errors while compiling. Reload prevented.");\n' +
    '\n' +
    '    var printableErrors = _errors.map(function (error) {\n' +
    '      var _formatProblem2 = formatProblem("error", error),\n' +
    '          header = _formatProblem2.header,\n' +
    '          body = _formatProblem2.body;\n' +
    '\n' +
    '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
    '    });\n' +
    '\n' +
    '    sendMessage("Errors", printableErrors);\n' +
    '\n' +
    '    for (var i = 0; i < printableErrors.length; i++) {\n' +
    '      log.error(printableErrors[i]);\n' +
    '    }\n' +
    '\n' +
    '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
    '\n' +
    '    if (needShowOverlayForErrors) {\n' +
    '      show("error", _errors);\n' +
    '    }\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error} error\n' +
    '   */\n' +
    '  error: function error(_error) {\n' +
    '    log.error(_error);\n' +
    '  },\n' +
    '  close: function close() {\n' +
    '    log.info("Disconnected!");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Close");\n' +
    '  }\n' +
    '};\n' +
    'var socketURL = createSocketURL(parsedResourceQuery);\n' +
    'socket(socketURL, onSocketMessage, options.reconnect);',
  current: NormalModule {
    dependencies: [
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency]
    ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1001,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [
      [HarmonyCompatibilityDependency],
      [ConstDependency],
      [ConstDependency]
    ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    rawRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js',
      request: undefined,
      query: '?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/index.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/index.js',
      __innerRequest: './client/index.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __resourceQuery, __webpack_hash__ */\n' +
        '/// <reference types="webpack/module" />\n' +
        'import webpackHotLog from "webpack/hot/log.js";\n' +
        'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
        'import parseURL from "./utils/parseURL.js";\n' +
        'import socket from "./socket.js";\n' +
        'import { formatProblem, show, hide } from "./overlay.js";\n' +
        'import { log, setLogLevel } from "./utils/log.js";\n' +
        'import sendMessage from "./utils/sendMessage.js";\n' +
        'import reloadApp from "./utils/reloadApp.js";\n' +
        'import createSocketURL from "./utils/createSocketURL.js";\n' +
        '/**\n' +
        ' * @typedef {Object} Options\n' +
        ' * @property {boolean} hot\n' +
        ' * @property {boolean} liveReload\n' +
        ' * @property {boolean} progress\n' +
        ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
        ' * @property {string} [logging]\n' +
        ' * @property {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @typedef {Object} Status\n' +
        ' * @property {boolean} isUnloading\n' +
        ' * @property {string} currentHash\n' +
        ' * @property {string} [previousHash]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @type {Status}\n' +
        ' */\n' +
        '\n' +
        'var status = {\n' +
        '  isUnloading: false,\n' +
        '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
        '  // eslint-disable-next-line camelcase\n' +
        '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
        '};\n' +
        '/** @type {Options} */\n' +
        '\n' +
        'var options = {\n' +
        '  hot: false,\n' +
        '  liveReload: false,\n' +
        '  progress: false,\n' +
        '  overlay: false\n' +
        '};\n' +
        'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
        '\n' +
        'if (parsedResourceQuery.hot === "true") {\n' +
        '  options.hot = true;\n' +
        '  log.info("Hot Module Replacement enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery["live-reload"] === "true") {\n' +
        '  options.liveReload = true;\n' +
        '  log.info("Live Reloading enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery.logging) {\n' +
        '  options.logging = parsedResourceQuery.logging;\n' +
        '}\n' +
        '\n' +
        'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
        '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} level\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function setAllLogLevel(level) {\n' +
        '  // This is needed because the HMR logger operate separately from dev server logger\n' +
        '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
        '  setLogLevel(level);\n' +
        '}\n' +
        '\n' +
        'if (options.logging) {\n' +
        '  setAllLogLevel(options.logging);\n' +
        '}\n' +
        '\n' +
        'self.addEventListener("beforeunload", function () {\n' +
        '  status.isUnloading = true;\n' +
        '});\n' +
        'var onSocketMessage = {\n' +
        '  hot: function hot() {\n' +
        '    if (parsedResourceQuery.hot === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.hot = true;\n' +
        '    log.info("Hot Module Replacement enabled.");\n' +
        '  },\n' +
        '  liveReload: function liveReload() {\n' +
        '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.liveReload = true;\n' +
        '    log.info("Live Reloading enabled.");\n' +
        '  },\n' +
        '  invalid: function invalid() {\n' +
        `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Invalid");\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} hash\n' +
        '   */\n' +
        '  hash: function hash(_hash) {\n' +
        '    status.previousHash = status.currentHash;\n' +
        '    status.currentHash = _hash;\n' +
        '  },\n' +
        '  logging: setAllLogLevel,\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  overlay: function overlay(value) {\n' +
        '    if (typeof document === "undefined") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.overlay = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {number} value\n' +
        '   */\n' +
        '  reconnect: function reconnect(value) {\n' +
        '    if (parsedResourceQuery.reconnect === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.reconnect = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  progress: function progress(value) {\n' +
        '    options.progress = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
        '   */\n' +
        '  "progress-update": function progressUpdate(data) {\n' +
        '    if (options.progress) {\n' +
        '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Progress", data);\n' +
        '  },\n' +
        '  "still-ok": function stillOk() {\n' +
        '    log.info("Nothing changed.");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("StillOk");\n' +
        '  },\n' +
        '  ok: function ok() {\n' +
        '    sendMessage("Ok");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        "  // TODO: remove in v5 in favor of 'static-changed'\n" +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "content-changed": function contentChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "static-changed": function staticChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} warnings\n' +
        '   * @param {any} params\n' +
        '   */\n' +
        '  warnings: function warnings(_warnings, params) {\n' +
        '    log.warn("Warnings while compiling.");\n' +
        '\n' +
        '    var printableWarnings = _warnings.map(function (error) {\n' +
        '      var _formatProblem = formatProblem("warning", error),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Warnings", printableWarnings);\n' +
        '\n' +
        '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
        '      log.warn(printableWarnings[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
        '\n' +
        '    if (needShowOverlayForWarnings) {\n' +
        '      show("warning", _warnings);\n' +
        '    }\n' +
        '\n' +
        '    if (params && params.preventReloading) {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} errors\n' +
        '   */\n' +
        '  errors: function errors(_errors) {\n' +
        '    log.error("Errors while compiling. Reload prevented.");\n' +
        '\n' +
        '    var printableErrors = _errors.map(function (error) {\n' +
        '      var _formatProblem2 = formatProblem("error", error),\n' +
        '          header = _formatProblem2.header,\n' +
        '          body = _formatProblem2.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Errors", printableErrors);\n' +
        '\n' +
        '    for (var i = 0; i < printableErrors.length; i++) {\n' +
        '      log.error(printableErrors[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
        '\n' +
        '    if (needShowOverlayForErrors) {\n' +
        '      show("error", _errors);\n' +
        '    }\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error} error\n' +
        '   */\n' +
        '  error: function error(_error) {\n' +
        '    log.error(_error);\n' +
        '  },\n' +
        '  close: function close() {\n' +
        '    log.info("Disconnected!");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Close");\n' +
        '  }\n' +
        '};\n' +
        'var socketURL = createSocketURL(parsedResourceQuery);\n' +
        'socket(socketURL, onSocketMessage, options.reconnect);',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency]
    ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1001,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [
      [HarmonyCompatibilityDependency],
      [ConstDependency],
      [ConstDependency]
    ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    rawRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js',
      request: undefined,
      query: '?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/index.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/index.js',
      __innerRequest: './client/index.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __resourceQuery, __webpack_hash__ */\n' +
        '/// <reference types="webpack/module" />\n' +
        'import webpackHotLog from "webpack/hot/log.js";\n' +
        'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
        'import parseURL from "./utils/parseURL.js";\n' +
        'import socket from "./socket.js";\n' +
        'import { formatProblem, show, hide } from "./overlay.js";\n' +
        'import { log, setLogLevel } from "./utils/log.js";\n' +
        'import sendMessage from "./utils/sendMessage.js";\n' +
        'import reloadApp from "./utils/reloadApp.js";\n' +
        'import createSocketURL from "./utils/createSocketURL.js";\n' +
        '/**\n' +
        ' * @typedef {Object} Options\n' +
        ' * @property {boolean} hot\n' +
        ' * @property {boolean} liveReload\n' +
        ' * @property {boolean} progress\n' +
        ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
        ' * @property {string} [logging]\n' +
        ' * @property {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @typedef {Object} Status\n' +
        ' * @property {boolean} isUnloading\n' +
        ' * @property {string} currentHash\n' +
        ' * @property {string} [previousHash]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @type {Status}\n' +
        ' */\n' +
        '\n' +
        'var status = {\n' +
        '  isUnloading: false,\n' +
        '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
        '  // eslint-disable-next-line camelcase\n' +
        '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
        '};\n' +
        '/** @type {Options} */\n' +
        '\n' +
        'var options = {\n' +
        '  hot: false,\n' +
        '  liveReload: false,\n' +
        '  progress: false,\n' +
        '  overlay: false\n' +
        '};\n' +
        'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
        '\n' +
        'if (parsedResourceQuery.hot === "true") {\n' +
        '  options.hot = true;\n' +
        '  log.info("Hot Module Replacement enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery["live-reload"] === "true") {\n' +
        '  options.liveReload = true;\n' +
        '  log.info("Live Reloading enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery.logging) {\n' +
        '  options.logging = parsedResourceQuery.logging;\n' +
        '}\n' +
        '\n' +
        'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
        '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} level\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function setAllLogLevel(level) {\n' +
        '  // This is needed because the HMR logger operate separately from dev server logger\n' +
        '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
        '  setLogLevel(level);\n' +
        '}\n' +
        '\n' +
        'if (options.logging) {\n' +
        '  setAllLogLevel(options.logging);\n' +
        '}\n' +
        '\n' +
        'self.addEventListener("beforeunload", function () {\n' +
        '  status.isUnloading = true;\n' +
        '});\n' +
        'var onSocketMessage = {\n' +
        '  hot: function hot() {\n' +
        '    if (parsedResourceQuery.hot === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.hot = true;\n' +
        '    log.info("Hot Module Replacement enabled.");\n' +
        '  },\n' +
        '  liveReload: function liveReload() {\n' +
        '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.liveReload = true;\n' +
        '    log.info("Live Reloading enabled.");\n' +
        '  },\n' +
        '  invalid: function invalid() {\n' +
        `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Invalid");\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} hash\n' +
        '   */\n' +
        '  hash: function hash(_hash) {\n' +
        '    status.previousHash = status.currentHash;\n' +
        '    status.currentHash = _hash;\n' +
        '  },\n' +
        '  logging: setAllLogLevel,\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  overlay: function overlay(value) {\n' +
        '    if (typeof document === "undefined") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.overlay = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {number} value\n' +
        '   */\n' +
        '  reconnect: function reconnect(value) {\n' +
        '    if (parsedResourceQuery.reconnect === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.reconnect = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  progress: function progress(value) {\n' +
        '    options.progress = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
        '   */\n' +
        '  "progress-update": function progressUpdate(data) {\n' +
        '    if (options.progress) {\n' +
        '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Progress", data);\n' +
        '  },\n' +
        '  "still-ok": function stillOk() {\n' +
        '    log.info("Nothing changed.");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("StillOk");\n' +
        '  },\n' +
        '  ok: function ok() {\n' +
        '    sendMessage("Ok");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        "  // TODO: remove in v5 in favor of 'static-changed'\n" +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "content-changed": function contentChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "static-changed": function staticChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} warnings\n' +
        '   * @param {any} params\n' +
        '   */\n' +
        '  warnings: function warnings(_warnings, params) {\n' +
        '    log.warn("Warnings while compiling.");\n' +
        '\n' +
        '    var printableWarnings = _warnings.map(function (error) {\n' +
        '      var _formatProblem = formatProblem("warning", error),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Warnings", printableWarnings);\n' +
        '\n' +
        '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
        '      log.warn(printableWarnings[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
        '\n' +
        '    if (needShowOverlayForWarnings) {\n' +
        '      show("warning", _warnings);\n' +
        '    }\n' +
        '\n' +
        '    if (params && params.preventReloading) {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} errors\n' +
        '   */\n' +
        '  errors: function errors(_errors) {\n' +
        '    log.error("Errors while compiling. Reload prevented.");\n' +
        '\n' +
        '    var printableErrors = _errors.map(function (error) {\n' +
        '      var _formatProblem2 = formatProblem("error", error),\n' +
        '          header = _formatProblem2.header,\n' +
        '          body = _formatProblem2.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Errors", printableErrors);\n' +
        '\n' +
        '    for (var i = 0; i < printableErrors.length; i++) {\n' +
        '      log.error(printableErrors[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
        '\n' +
        '    if (needShowOverlayForErrors) {\n' +
        '      show("error", _errors);\n' +
        '    }\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error} error\n' +
        '   */\n' +
        '  error: function error(_error) {\n' +
        '    log.error(_error);\n' +
        '  },\n' +
        '  close: function close() {\n' +
        '    log.info("Disconnected!");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Close");\n' +
        '  }\n' +
        '};\n' +
        'var socketURL = createSocketURL(parsedResourceQuery);\n' +
        'socket(socketURL, onSocketMessage, options.reconnect);',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 5,
      _statTestedSnapshotsCached: 0,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 101,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 6,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  },
  lastHarmonyImportOrder: 2
}
source :  ./socket.js
 parser.state :  {
  source: '/* global __resourceQuery, __webpack_hash__ */\n' +
    '/// <reference types="webpack/module" />\n' +
    'import webpackHotLog from "webpack/hot/log.js";\n' +
    'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
    'import parseURL from "./utils/parseURL.js";\n' +
    'import socket from "./socket.js";\n' +
    'import { formatProblem, show, hide } from "./overlay.js";\n' +
    'import { log, setLogLevel } from "./utils/log.js";\n' +
    'import sendMessage from "./utils/sendMessage.js";\n' +
    'import reloadApp from "./utils/reloadApp.js";\n' +
    'import createSocketURL from "./utils/createSocketURL.js";\n' +
    '/**\n' +
    ' * @typedef {Object} Options\n' +
    ' * @property {boolean} hot\n' +
    ' * @property {boolean} liveReload\n' +
    ' * @property {boolean} progress\n' +
    ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
    ' * @property {string} [logging]\n' +
    ' * @property {number} [reconnect]\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @typedef {Object} Status\n' +
    ' * @property {boolean} isUnloading\n' +
    ' * @property {string} currentHash\n' +
    ' * @property {string} [previousHash]\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @type {Status}\n' +
    ' */\n' +
    '\n' +
    'var status = {\n' +
    '  isUnloading: false,\n' +
    '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
    '  // eslint-disable-next-line camelcase\n' +
    '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
    '};\n' +
    '/** @type {Options} */\n' +
    '\n' +
    'var options = {\n' +
    '  hot: false,\n' +
    '  liveReload: false,\n' +
    '  progress: false,\n' +
    '  overlay: false\n' +
    '};\n' +
    'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
    '\n' +
    'if (parsedResourceQuery.hot === "true") {\n' +
    '  options.hot = true;\n' +
    '  log.info("Hot Module Replacement enabled.");\n' +
    '}\n' +
    '\n' +
    'if (parsedResourceQuery["live-reload"] === "true") {\n' +
    '  options.liveReload = true;\n' +
    '  log.info("Live Reloading enabled.");\n' +
    '}\n' +
    '\n' +
    'if (parsedResourceQuery.logging) {\n' +
    '  options.logging = parsedResourceQuery.logging;\n' +
    '}\n' +
    '\n' +
    'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
    '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
    '}\n' +
    '/**\n' +
    ' * @param {string} level\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function setAllLogLevel(level) {\n' +
    '  // This is needed because the HMR logger operate separately from dev server logger\n' +
    '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
    '  setLogLevel(level);\n' +
    '}\n' +
    '\n' +
    'if (options.logging) {\n' +
    '  setAllLogLevel(options.logging);\n' +
    '}\n' +
    '\n' +
    'self.addEventListener("beforeunload", function () {\n' +
    '  status.isUnloading = true;\n' +
    '});\n' +
    'var onSocketMessage = {\n' +
    '  hot: function hot() {\n' +
    '    if (parsedResourceQuery.hot === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.hot = true;\n' +
    '    log.info("Hot Module Replacement enabled.");\n' +
    '  },\n' +
    '  liveReload: function liveReload() {\n' +
    '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.liveReload = true;\n' +
    '    log.info("Live Reloading enabled.");\n' +
    '  },\n' +
    '  invalid: function invalid() {\n' +
    `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Invalid");\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {string} hash\n' +
    '   */\n' +
    '  hash: function hash(_hash) {\n' +
    '    status.previousHash = status.currentHash;\n' +
    '    status.currentHash = _hash;\n' +
    '  },\n' +
    '  logging: setAllLogLevel,\n' +
    '\n' +
    '  /**\n' +
    '   * @param {boolean} value\n' +
    '   */\n' +
    '  overlay: function overlay(value) {\n' +
    '    if (typeof document === "undefined") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.overlay = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {number} value\n' +
    '   */\n' +
    '  reconnect: function reconnect(value) {\n' +
    '    if (parsedResourceQuery.reconnect === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.reconnect = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {boolean} value\n' +
    '   */\n' +
    '  progress: function progress(value) {\n' +
    '    options.progress = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
    '   */\n' +
    '  "progress-update": function progressUpdate(data) {\n' +
    '    if (options.progress) {\n' +
    '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Progress", data);\n' +
    '  },\n' +
    '  "still-ok": function stillOk() {\n' +
    '    log.info("Nothing changed.");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("StillOk");\n' +
    '  },\n' +
    '  ok: function ok() {\n' +
    '    sendMessage("Ok");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    reloadApp(options, status);\n' +
    '  },\n' +
    "  // TODO: remove in v5 in favor of 'static-changed'\n" +
    '\n' +
    '  /**\n' +
    '   * @param {string} file\n' +
    '   */\n' +
    '  "content-changed": function contentChanged(file) {\n' +
    '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
    '    self.location.reload();\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {string} file\n' +
    '   */\n' +
    '  "static-changed": function staticChanged(file) {\n' +
    '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
    '    self.location.reload();\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error[]} warnings\n' +
    '   * @param {any} params\n' +
    '   */\n' +
    '  warnings: function warnings(_warnings, params) {\n' +
    '    log.warn("Warnings while compiling.");\n' +
    '\n' +
    '    var printableWarnings = _warnings.map(function (error) {\n' +
    '      var _formatProblem = formatProblem("warning", error),\n' +
    '          header = _formatProblem.header,\n' +
    '          body = _formatProblem.body;\n' +
    '\n' +
    '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
    '    });\n' +
    '\n' +
    '    sendMessage("Warnings", printableWarnings);\n' +
    '\n' +
    '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
    '      log.warn(printableWarnings[i]);\n' +
    '    }\n' +
    '\n' +
    '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
    '\n' +
    '    if (needShowOverlayForWarnings) {\n' +
    '      show("warning", _warnings);\n' +
    '    }\n' +
    '\n' +
    '    if (params && params.preventReloading) {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    reloadApp(options, status);\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error[]} errors\n' +
    '   */\n' +
    '  errors: function errors(_errors) {\n' +
    '    log.error("Errors while compiling. Reload prevented.");\n' +
    '\n' +
    '    var printableErrors = _errors.map(function (error) {\n' +
    '      var _formatProblem2 = formatProblem("error", error),\n' +
    '          header = _formatProblem2.header,\n' +
    '          body = _formatProblem2.body;\n' +
    '\n' +
    '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
    '    });\n' +
    '\n' +
    '    sendMessage("Errors", printableErrors);\n' +
    '\n' +
    '    for (var i = 0; i < printableErrors.length; i++) {\n' +
    '      log.error(printableErrors[i]);\n' +
    '    }\n' +
    '\n' +
    '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
    '\n' +
    '    if (needShowOverlayForErrors) {\n' +
    '      show("error", _errors);\n' +
    '    }\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error} error\n' +
    '   */\n' +
    '  error: function error(_error) {\n' +
    '    log.error(_error);\n' +
    '  },\n' +
    '  close: function close() {\n' +
    '    log.info("Disconnected!");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Close");\n' +
    '  }\n' +
    '};\n' +
    'var socketURL = createSocketURL(parsedResourceQuery);\n' +
    'socket(socketURL, onSocketMessage, options.reconnect);',
  current: NormalModule {
    dependencies: [
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency]
    ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1001,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [
      [HarmonyCompatibilityDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency]
    ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    rawRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js',
      request: undefined,
      query: '?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/index.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/index.js',
      __innerRequest: './client/index.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __resourceQuery, __webpack_hash__ */\n' +
        '/// <reference types="webpack/module" />\n' +
        'import webpackHotLog from "webpack/hot/log.js";\n' +
        'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
        'import parseURL from "./utils/parseURL.js";\n' +
        'import socket from "./socket.js";\n' +
        'import { formatProblem, show, hide } from "./overlay.js";\n' +
        'import { log, setLogLevel } from "./utils/log.js";\n' +
        'import sendMessage from "./utils/sendMessage.js";\n' +
        'import reloadApp from "./utils/reloadApp.js";\n' +
        'import createSocketURL from "./utils/createSocketURL.js";\n' +
        '/**\n' +
        ' * @typedef {Object} Options\n' +
        ' * @property {boolean} hot\n' +
        ' * @property {boolean} liveReload\n' +
        ' * @property {boolean} progress\n' +
        ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
        ' * @property {string} [logging]\n' +
        ' * @property {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @typedef {Object} Status\n' +
        ' * @property {boolean} isUnloading\n' +
        ' * @property {string} currentHash\n' +
        ' * @property {string} [previousHash]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @type {Status}\n' +
        ' */\n' +
        '\n' +
        'var status = {\n' +
        '  isUnloading: false,\n' +
        '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
        '  // eslint-disable-next-line camelcase\n' +
        '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
        '};\n' +
        '/** @type {Options} */\n' +
        '\n' +
        'var options = {\n' +
        '  hot: false,\n' +
        '  liveReload: false,\n' +
        '  progress: false,\n' +
        '  overlay: false\n' +
        '};\n' +
        'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
        '\n' +
        'if (parsedResourceQuery.hot === "true") {\n' +
        '  options.hot = true;\n' +
        '  log.info("Hot Module Replacement enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery["live-reload"] === "true") {\n' +
        '  options.liveReload = true;\n' +
        '  log.info("Live Reloading enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery.logging) {\n' +
        '  options.logging = parsedResourceQuery.logging;\n' +
        '}\n' +
        '\n' +
        'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
        '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} level\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function setAllLogLevel(level) {\n' +
        '  // This is needed because the HMR logger operate separately from dev server logger\n' +
        '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
        '  setLogLevel(level);\n' +
        '}\n' +
        '\n' +
        'if (options.logging) {\n' +
        '  setAllLogLevel(options.logging);\n' +
        '}\n' +
        '\n' +
        'self.addEventListener("beforeunload", function () {\n' +
        '  status.isUnloading = true;\n' +
        '});\n' +
        'var onSocketMessage = {\n' +
        '  hot: function hot() {\n' +
        '    if (parsedResourceQuery.hot === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.hot = true;\n' +
        '    log.info("Hot Module Replacement enabled.");\n' +
        '  },\n' +
        '  liveReload: function liveReload() {\n' +
        '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.liveReload = true;\n' +
        '    log.info("Live Reloading enabled.");\n' +
        '  },\n' +
        '  invalid: function invalid() {\n' +
        `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Invalid");\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} hash\n' +
        '   */\n' +
        '  hash: function hash(_hash) {\n' +
        '    status.previousHash = status.currentHash;\n' +
        '    status.currentHash = _hash;\n' +
        '  },\n' +
        '  logging: setAllLogLevel,\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  overlay: function overlay(value) {\n' +
        '    if (typeof document === "undefined") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.overlay = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {number} value\n' +
        '   */\n' +
        '  reconnect: function reconnect(value) {\n' +
        '    if (parsedResourceQuery.reconnect === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.reconnect = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  progress: function progress(value) {\n' +
        '    options.progress = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
        '   */\n' +
        '  "progress-update": function progressUpdate(data) {\n' +
        '    if (options.progress) {\n' +
        '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Progress", data);\n' +
        '  },\n' +
        '  "still-ok": function stillOk() {\n' +
        '    log.info("Nothing changed.");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("StillOk");\n' +
        '  },\n' +
        '  ok: function ok() {\n' +
        '    sendMessage("Ok");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        "  // TODO: remove in v5 in favor of 'static-changed'\n" +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "content-changed": function contentChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "static-changed": function staticChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} warnings\n' +
        '   * @param {any} params\n' +
        '   */\n' +
        '  warnings: function warnings(_warnings, params) {\n' +
        '    log.warn("Warnings while compiling.");\n' +
        '\n' +
        '    var printableWarnings = _warnings.map(function (error) {\n' +
        '      var _formatProblem = formatProblem("warning", error),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Warnings", printableWarnings);\n' +
        '\n' +
        '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
        '      log.warn(printableWarnings[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
        '\n' +
        '    if (needShowOverlayForWarnings) {\n' +
        '      show("warning", _warnings);\n' +
        '    }\n' +
        '\n' +
        '    if (params && params.preventReloading) {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} errors\n' +
        '   */\n' +
        '  errors: function errors(_errors) {\n' +
        '    log.error("Errors while compiling. Reload prevented.");\n' +
        '\n' +
        '    var printableErrors = _errors.map(function (error) {\n' +
        '      var _formatProblem2 = formatProblem("error", error),\n' +
        '          header = _formatProblem2.header,\n' +
        '          body = _formatProblem2.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Errors", printableErrors);\n' +
        '\n' +
        '    for (var i = 0; i < printableErrors.length; i++) {\n' +
        '      log.error(printableErrors[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
        '\n' +
        '    if (needShowOverlayForErrors) {\n' +
        '      show("error", _errors);\n' +
        '    }\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error} error\n' +
        '   */\n' +
        '  error: function error(_error) {\n' +
        '    log.error(_error);\n' +
        '  },\n' +
        '  close: function close() {\n' +
        '    log.info("Disconnected!");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Close");\n' +
        '  }\n' +
        '};\n' +
        'var socketURL = createSocketURL(parsedResourceQuery);\n' +
        'socket(socketURL, onSocketMessage, options.reconnect);',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency]
    ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1001,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [
      [HarmonyCompatibilityDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency]
    ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    rawRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js',
      request: undefined,
      query: '?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/index.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/index.js',
      __innerRequest: './client/index.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __resourceQuery, __webpack_hash__ */\n' +
        '/// <reference types="webpack/module" />\n' +
        'import webpackHotLog from "webpack/hot/log.js";\n' +
        'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
        'import parseURL from "./utils/parseURL.js";\n' +
        'import socket from "./socket.js";\n' +
        'import { formatProblem, show, hide } from "./overlay.js";\n' +
        'import { log, setLogLevel } from "./utils/log.js";\n' +
        'import sendMessage from "./utils/sendMessage.js";\n' +
        'import reloadApp from "./utils/reloadApp.js";\n' +
        'import createSocketURL from "./utils/createSocketURL.js";\n' +
        '/**\n' +
        ' * @typedef {Object} Options\n' +
        ' * @property {boolean} hot\n' +
        ' * @property {boolean} liveReload\n' +
        ' * @property {boolean} progress\n' +
        ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
        ' * @property {string} [logging]\n' +
        ' * @property {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @typedef {Object} Status\n' +
        ' * @property {boolean} isUnloading\n' +
        ' * @property {string} currentHash\n' +
        ' * @property {string} [previousHash]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @type {Status}\n' +
        ' */\n' +
        '\n' +
        'var status = {\n' +
        '  isUnloading: false,\n' +
        '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
        '  // eslint-disable-next-line camelcase\n' +
        '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
        '};\n' +
        '/** @type {Options} */\n' +
        '\n' +
        'var options = {\n' +
        '  hot: false,\n' +
        '  liveReload: false,\n' +
        '  progress: false,\n' +
        '  overlay: false\n' +
        '};\n' +
        'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
        '\n' +
        'if (parsedResourceQuery.hot === "true") {\n' +
        '  options.hot = true;\n' +
        '  log.info("Hot Module Replacement enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery["live-reload"] === "true") {\n' +
        '  options.liveReload = true;\n' +
        '  log.info("Live Reloading enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery.logging) {\n' +
        '  options.logging = parsedResourceQuery.logging;\n' +
        '}\n' +
        '\n' +
        'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
        '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} level\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function setAllLogLevel(level) {\n' +
        '  // This is needed because the HMR logger operate separately from dev server logger\n' +
        '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
        '  setLogLevel(level);\n' +
        '}\n' +
        '\n' +
        'if (options.logging) {\n' +
        '  setAllLogLevel(options.logging);\n' +
        '}\n' +
        '\n' +
        'self.addEventListener("beforeunload", function () {\n' +
        '  status.isUnloading = true;\n' +
        '});\n' +
        'var onSocketMessage = {\n' +
        '  hot: function hot() {\n' +
        '    if (parsedResourceQuery.hot === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.hot = true;\n' +
        '    log.info("Hot Module Replacement enabled.");\n' +
        '  },\n' +
        '  liveReload: function liveReload() {\n' +
        '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.liveReload = true;\n' +
        '    log.info("Live Reloading enabled.");\n' +
        '  },\n' +
        '  invalid: function invalid() {\n' +
        `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Invalid");\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} hash\n' +
        '   */\n' +
        '  hash: function hash(_hash) {\n' +
        '    status.previousHash = status.currentHash;\n' +
        '    status.currentHash = _hash;\n' +
        '  },\n' +
        '  logging: setAllLogLevel,\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  overlay: function overlay(value) {\n' +
        '    if (typeof document === "undefined") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.overlay = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {number} value\n' +
        '   */\n' +
        '  reconnect: function reconnect(value) {\n' +
        '    if (parsedResourceQuery.reconnect === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.reconnect = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  progress: function progress(value) {\n' +
        '    options.progress = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
        '   */\n' +
        '  "progress-update": function progressUpdate(data) {\n' +
        '    if (options.progress) {\n' +
        '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Progress", data);\n' +
        '  },\n' +
        '  "still-ok": function stillOk() {\n' +
        '    log.info("Nothing changed.");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("StillOk");\n' +
        '  },\n' +
        '  ok: function ok() {\n' +
        '    sendMessage("Ok");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        "  // TODO: remove in v5 in favor of 'static-changed'\n" +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "content-changed": function contentChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "static-changed": function staticChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} warnings\n' +
        '   * @param {any} params\n' +
        '   */\n' +
        '  warnings: function warnings(_warnings, params) {\n' +
        '    log.warn("Warnings while compiling.");\n' +
        '\n' +
        '    var printableWarnings = _warnings.map(function (error) {\n' +
        '      var _formatProblem = formatProblem("warning", error),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Warnings", printableWarnings);\n' +
        '\n' +
        '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
        '      log.warn(printableWarnings[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
        '\n' +
        '    if (needShowOverlayForWarnings) {\n' +
        '      show("warning", _warnings);\n' +
        '    }\n' +
        '\n' +
        '    if (params && params.preventReloading) {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} errors\n' +
        '   */\n' +
        '  errors: function errors(_errors) {\n' +
        '    log.error("Errors while compiling. Reload prevented.");\n' +
        '\n' +
        '    var printableErrors = _errors.map(function (error) {\n' +
        '      var _formatProblem2 = formatProblem("error", error),\n' +
        '          header = _formatProblem2.header,\n' +
        '          body = _formatProblem2.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Errors", printableErrors);\n' +
        '\n' +
        '    for (var i = 0; i < printableErrors.length; i++) {\n' +
        '      log.error(printableErrors[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
        '\n' +
        '    if (needShowOverlayForErrors) {\n' +
        '      show("error", _errors);\n' +
        '    }\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error} error\n' +
        '   */\n' +
        '  error: function error(_error) {\n' +
        '    log.error(_error);\n' +
        '  },\n' +
        '  close: function close() {\n' +
        '    log.info("Disconnected!");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Close");\n' +
        '  }\n' +
        '};\n' +
        'var socketURL = createSocketURL(parsedResourceQuery);\n' +
        'socket(socketURL, onSocketMessage, options.reconnect);',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 5,
      _statTestedSnapshotsCached: 0,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 101,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 6,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  },
  lastHarmonyImportOrder: 3
}
source :  ./overlay.js
 parser.state :  {
  source: '/* global __resourceQuery, __webpack_hash__ */\n' +
    '/// <reference types="webpack/module" />\n' +
    'import webpackHotLog from "webpack/hot/log.js";\n' +
    'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
    'import parseURL from "./utils/parseURL.js";\n' +
    'import socket from "./socket.js";\n' +
    'import { formatProblem, show, hide } from "./overlay.js";\n' +
    'import { log, setLogLevel } from "./utils/log.js";\n' +
    'import sendMessage from "./utils/sendMessage.js";\n' +
    'import reloadApp from "./utils/reloadApp.js";\n' +
    'import createSocketURL from "./utils/createSocketURL.js";\n' +
    '/**\n' +
    ' * @typedef {Object} Options\n' +
    ' * @property {boolean} hot\n' +
    ' * @property {boolean} liveReload\n' +
    ' * @property {boolean} progress\n' +
    ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
    ' * @property {string} [logging]\n' +
    ' * @property {number} [reconnect]\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @typedef {Object} Status\n' +
    ' * @property {boolean} isUnloading\n' +
    ' * @property {string} currentHash\n' +
    ' * @property {string} [previousHash]\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @type {Status}\n' +
    ' */\n' +
    '\n' +
    'var status = {\n' +
    '  isUnloading: false,\n' +
    '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
    '  // eslint-disable-next-line camelcase\n' +
    '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
    '};\n' +
    '/** @type {Options} */\n' +
    '\n' +
    'var options = {\n' +
    '  hot: false,\n' +
    '  liveReload: false,\n' +
    '  progress: false,\n' +
    '  overlay: false\n' +
    '};\n' +
    'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
    '\n' +
    'if (parsedResourceQuery.hot === "true") {\n' +
    '  options.hot = true;\n' +
    '  log.info("Hot Module Replacement enabled.");\n' +
    '}\n' +
    '\n' +
    'if (parsedResourceQuery["live-reload"] === "true") {\n' +
    '  options.liveReload = true;\n' +
    '  log.info("Live Reloading enabled.");\n' +
    '}\n' +
    '\n' +
    'if (parsedResourceQuery.logging) {\n' +
    '  options.logging = parsedResourceQuery.logging;\n' +
    '}\n' +
    '\n' +
    'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
    '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
    '}\n' +
    '/**\n' +
    ' * @param {string} level\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function setAllLogLevel(level) {\n' +
    '  // This is needed because the HMR logger operate separately from dev server logger\n' +
    '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
    '  setLogLevel(level);\n' +
    '}\n' +
    '\n' +
    'if (options.logging) {\n' +
    '  setAllLogLevel(options.logging);\n' +
    '}\n' +
    '\n' +
    'self.addEventListener("beforeunload", function () {\n' +
    '  status.isUnloading = true;\n' +
    '});\n' +
    'var onSocketMessage = {\n' +
    '  hot: function hot() {\n' +
    '    if (parsedResourceQuery.hot === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.hot = true;\n' +
    '    log.info("Hot Module Replacement enabled.");\n' +
    '  },\n' +
    '  liveReload: function liveReload() {\n' +
    '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.liveReload = true;\n' +
    '    log.info("Live Reloading enabled.");\n' +
    '  },\n' +
    '  invalid: function invalid() {\n' +
    `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Invalid");\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {string} hash\n' +
    '   */\n' +
    '  hash: function hash(_hash) {\n' +
    '    status.previousHash = status.currentHash;\n' +
    '    status.currentHash = _hash;\n' +
    '  },\n' +
    '  logging: setAllLogLevel,\n' +
    '\n' +
    '  /**\n' +
    '   * @param {boolean} value\n' +
    '   */\n' +
    '  overlay: function overlay(value) {\n' +
    '    if (typeof document === "undefined") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.overlay = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {number} value\n' +
    '   */\n' +
    '  reconnect: function reconnect(value) {\n' +
    '    if (parsedResourceQuery.reconnect === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.reconnect = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {boolean} value\n' +
    '   */\n' +
    '  progress: function progress(value) {\n' +
    '    options.progress = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
    '   */\n' +
    '  "progress-update": function progressUpdate(data) {\n' +
    '    if (options.progress) {\n' +
    '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Progress", data);\n' +
    '  },\n' +
    '  "still-ok": function stillOk() {\n' +
    '    log.info("Nothing changed.");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("StillOk");\n' +
    '  },\n' +
    '  ok: function ok() {\n' +
    '    sendMessage("Ok");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    reloadApp(options, status);\n' +
    '  },\n' +
    "  // TODO: remove in v5 in favor of 'static-changed'\n" +
    '\n' +
    '  /**\n' +
    '   * @param {string} file\n' +
    '   */\n' +
    '  "content-changed": function contentChanged(file) {\n' +
    '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
    '    self.location.reload();\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {string} file\n' +
    '   */\n' +
    '  "static-changed": function staticChanged(file) {\n' +
    '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
    '    self.location.reload();\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error[]} warnings\n' +
    '   * @param {any} params\n' +
    '   */\n' +
    '  warnings: function warnings(_warnings, params) {\n' +
    '    log.warn("Warnings while compiling.");\n' +
    '\n' +
    '    var printableWarnings = _warnings.map(function (error) {\n' +
    '      var _formatProblem = formatProblem("warning", error),\n' +
    '          header = _formatProblem.header,\n' +
    '          body = _formatProblem.body;\n' +
    '\n' +
    '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
    '    });\n' +
    '\n' +
    '    sendMessage("Warnings", printableWarnings);\n' +
    '\n' +
    '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
    '      log.warn(printableWarnings[i]);\n' +
    '    }\n' +
    '\n' +
    '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
    '\n' +
    '    if (needShowOverlayForWarnings) {\n' +
    '      show("warning", _warnings);\n' +
    '    }\n' +
    '\n' +
    '    if (params && params.preventReloading) {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    reloadApp(options, status);\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error[]} errors\n' +
    '   */\n' +
    '  errors: function errors(_errors) {\n' +
    '    log.error("Errors while compiling. Reload prevented.");\n' +
    '\n' +
    '    var printableErrors = _errors.map(function (error) {\n' +
    '      var _formatProblem2 = formatProblem("error", error),\n' +
    '          header = _formatProblem2.header,\n' +
    '          body = _formatProblem2.body;\n' +
    '\n' +
    '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
    '    });\n' +
    '\n' +
    '    sendMessage("Errors", printableErrors);\n' +
    '\n' +
    '    for (var i = 0; i < printableErrors.length; i++) {\n' +
    '      log.error(printableErrors[i]);\n' +
    '    }\n' +
    '\n' +
    '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
    '\n' +
    '    if (needShowOverlayForErrors) {\n' +
    '      show("error", _errors);\n' +
    '    }\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error} error\n' +
    '   */\n' +
    '  error: function error(_error) {\n' +
    '    log.error(_error);\n' +
    '  },\n' +
    '  close: function close() {\n' +
    '    log.info("Disconnected!");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Close");\n' +
    '  }\n' +
    '};\n' +
    'var socketURL = createSocketURL(parsedResourceQuery);\n' +
    'socket(socketURL, onSocketMessage, options.reconnect);',
  current: NormalModule {
    dependencies: [
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency]
    ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1001,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [
      [HarmonyCompatibilityDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency]
    ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    rawRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js',
      request: undefined,
      query: '?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/index.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/index.js',
      __innerRequest: './client/index.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __resourceQuery, __webpack_hash__ */\n' +
        '/// <reference types="webpack/module" />\n' +
        'import webpackHotLog from "webpack/hot/log.js";\n' +
        'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
        'import parseURL from "./utils/parseURL.js";\n' +
        'import socket from "./socket.js";\n' +
        'import { formatProblem, show, hide } from "./overlay.js";\n' +
        'import { log, setLogLevel } from "./utils/log.js";\n' +
        'import sendMessage from "./utils/sendMessage.js";\n' +
        'import reloadApp from "./utils/reloadApp.js";\n' +
        'import createSocketURL from "./utils/createSocketURL.js";\n' +
        '/**\n' +
        ' * @typedef {Object} Options\n' +
        ' * @property {boolean} hot\n' +
        ' * @property {boolean} liveReload\n' +
        ' * @property {boolean} progress\n' +
        ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
        ' * @property {string} [logging]\n' +
        ' * @property {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @typedef {Object} Status\n' +
        ' * @property {boolean} isUnloading\n' +
        ' * @property {string} currentHash\n' +
        ' * @property {string} [previousHash]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @type {Status}\n' +
        ' */\n' +
        '\n' +
        'var status = {\n' +
        '  isUnloading: false,\n' +
        '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
        '  // eslint-disable-next-line camelcase\n' +
        '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
        '};\n' +
        '/** @type {Options} */\n' +
        '\n' +
        'var options = {\n' +
        '  hot: false,\n' +
        '  liveReload: false,\n' +
        '  progress: false,\n' +
        '  overlay: false\n' +
        '};\n' +
        'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
        '\n' +
        'if (parsedResourceQuery.hot === "true") {\n' +
        '  options.hot = true;\n' +
        '  log.info("Hot Module Replacement enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery["live-reload"] === "true") {\n' +
        '  options.liveReload = true;\n' +
        '  log.info("Live Reloading enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery.logging) {\n' +
        '  options.logging = parsedResourceQuery.logging;\n' +
        '}\n' +
        '\n' +
        'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
        '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} level\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function setAllLogLevel(level) {\n' +
        '  // This is needed because the HMR logger operate separately from dev server logger\n' +
        '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
        '  setLogLevel(level);\n' +
        '}\n' +
        '\n' +
        'if (options.logging) {\n' +
        '  setAllLogLevel(options.logging);\n' +
        '}\n' +
        '\n' +
        'self.addEventListener("beforeunload", function () {\n' +
        '  status.isUnloading = true;\n' +
        '});\n' +
        'var onSocketMessage = {\n' +
        '  hot: function hot() {\n' +
        '    if (parsedResourceQuery.hot === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.hot = true;\n' +
        '    log.info("Hot Module Replacement enabled.");\n' +
        '  },\n' +
        '  liveReload: function liveReload() {\n' +
        '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.liveReload = true;\n' +
        '    log.info("Live Reloading enabled.");\n' +
        '  },\n' +
        '  invalid: function invalid() {\n' +
        `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Invalid");\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} hash\n' +
        '   */\n' +
        '  hash: function hash(_hash) {\n' +
        '    status.previousHash = status.currentHash;\n' +
        '    status.currentHash = _hash;\n' +
        '  },\n' +
        '  logging: setAllLogLevel,\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  overlay: function overlay(value) {\n' +
        '    if (typeof document === "undefined") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.overlay = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {number} value\n' +
        '   */\n' +
        '  reconnect: function reconnect(value) {\n' +
        '    if (parsedResourceQuery.reconnect === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.reconnect = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  progress: function progress(value) {\n' +
        '    options.progress = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
        '   */\n' +
        '  "progress-update": function progressUpdate(data) {\n' +
        '    if (options.progress) {\n' +
        '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Progress", data);\n' +
        '  },\n' +
        '  "still-ok": function stillOk() {\n' +
        '    log.info("Nothing changed.");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("StillOk");\n' +
        '  },\n' +
        '  ok: function ok() {\n' +
        '    sendMessage("Ok");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        "  // TODO: remove in v5 in favor of 'static-changed'\n" +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "content-changed": function contentChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "static-changed": function staticChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} warnings\n' +
        '   * @param {any} params\n' +
        '   */\n' +
        '  warnings: function warnings(_warnings, params) {\n' +
        '    log.warn("Warnings while compiling.");\n' +
        '\n' +
        '    var printableWarnings = _warnings.map(function (error) {\n' +
        '      var _formatProblem = formatProblem("warning", error),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Warnings", printableWarnings);\n' +
        '\n' +
        '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
        '      log.warn(printableWarnings[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
        '\n' +
        '    if (needShowOverlayForWarnings) {\n' +
        '      show("warning", _warnings);\n' +
        '    }\n' +
        '\n' +
        '    if (params && params.preventReloading) {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} errors\n' +
        '   */\n' +
        '  errors: function errors(_errors) {\n' +
        '    log.error("Errors while compiling. Reload prevented.");\n' +
        '\n' +
        '    var printableErrors = _errors.map(function (error) {\n' +
        '      var _formatProblem2 = formatProblem("error", error),\n' +
        '          header = _formatProblem2.header,\n' +
        '          body = _formatProblem2.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Errors", printableErrors);\n' +
        '\n' +
        '    for (var i = 0; i < printableErrors.length; i++) {\n' +
        '      log.error(printableErrors[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
        '\n' +
        '    if (needShowOverlayForErrors) {\n' +
        '      show("error", _errors);\n' +
        '    }\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error} error\n' +
        '   */\n' +
        '  error: function error(_error) {\n' +
        '    log.error(_error);\n' +
        '  },\n' +
        '  close: function close() {\n' +
        '    log.info("Disconnected!");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Close");\n' +
        '  }\n' +
        '};\n' +
        'var socketURL = createSocketURL(parsedResourceQuery);\n' +
        'socket(socketURL, onSocketMessage, options.reconnect);',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency]
    ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1001,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [
      [HarmonyCompatibilityDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency]
    ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    rawRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js',
      request: undefined,
      query: '?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/index.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/index.js',
      __innerRequest: './client/index.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __resourceQuery, __webpack_hash__ */\n' +
        '/// <reference types="webpack/module" />\n' +
        'import webpackHotLog from "webpack/hot/log.js";\n' +
        'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
        'import parseURL from "./utils/parseURL.js";\n' +
        'import socket from "./socket.js";\n' +
        'import { formatProblem, show, hide } from "./overlay.js";\n' +
        'import { log, setLogLevel } from "./utils/log.js";\n' +
        'import sendMessage from "./utils/sendMessage.js";\n' +
        'import reloadApp from "./utils/reloadApp.js";\n' +
        'import createSocketURL from "./utils/createSocketURL.js";\n' +
        '/**\n' +
        ' * @typedef {Object} Options\n' +
        ' * @property {boolean} hot\n' +
        ' * @property {boolean} liveReload\n' +
        ' * @property {boolean} progress\n' +
        ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
        ' * @property {string} [logging]\n' +
        ' * @property {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @typedef {Object} Status\n' +
        ' * @property {boolean} isUnloading\n' +
        ' * @property {string} currentHash\n' +
        ' * @property {string} [previousHash]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @type {Status}\n' +
        ' */\n' +
        '\n' +
        'var status = {\n' +
        '  isUnloading: false,\n' +
        '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
        '  // eslint-disable-next-line camelcase\n' +
        '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
        '};\n' +
        '/** @type {Options} */\n' +
        '\n' +
        'var options = {\n' +
        '  hot: false,\n' +
        '  liveReload: false,\n' +
        '  progress: false,\n' +
        '  overlay: false\n' +
        '};\n' +
        'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
        '\n' +
        'if (parsedResourceQuery.hot === "true") {\n' +
        '  options.hot = true;\n' +
        '  log.info("Hot Module Replacement enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery["live-reload"] === "true") {\n' +
        '  options.liveReload = true;\n' +
        '  log.info("Live Reloading enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery.logging) {\n' +
        '  options.logging = parsedResourceQuery.logging;\n' +
        '}\n' +
        '\n' +
        'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
        '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} level\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function setAllLogLevel(level) {\n' +
        '  // This is needed because the HMR logger operate separately from dev server logger\n' +
        '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
        '  setLogLevel(level);\n' +
        '}\n' +
        '\n' +
        'if (options.logging) {\n' +
        '  setAllLogLevel(options.logging);\n' +
        '}\n' +
        '\n' +
        'self.addEventListener("beforeunload", function () {\n' +
        '  status.isUnloading = true;\n' +
        '});\n' +
        'var onSocketMessage = {\n' +
        '  hot: function hot() {\n' +
        '    if (parsedResourceQuery.hot === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.hot = true;\n' +
        '    log.info("Hot Module Replacement enabled.");\n' +
        '  },\n' +
        '  liveReload: function liveReload() {\n' +
        '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.liveReload = true;\n' +
        '    log.info("Live Reloading enabled.");\n' +
        '  },\n' +
        '  invalid: function invalid() {\n' +
        `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Invalid");\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} hash\n' +
        '   */\n' +
        '  hash: function hash(_hash) {\n' +
        '    status.previousHash = status.currentHash;\n' +
        '    status.currentHash = _hash;\n' +
        '  },\n' +
        '  logging: setAllLogLevel,\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  overlay: function overlay(value) {\n' +
        '    if (typeof document === "undefined") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.overlay = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {number} value\n' +
        '   */\n' +
        '  reconnect: function reconnect(value) {\n' +
        '    if (parsedResourceQuery.reconnect === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.reconnect = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  progress: function progress(value) {\n' +
        '    options.progress = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
        '   */\n' +
        '  "progress-update": function progressUpdate(data) {\n' +
        '    if (options.progress) {\n' +
        '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Progress", data);\n' +
        '  },\n' +
        '  "still-ok": function stillOk() {\n' +
        '    log.info("Nothing changed.");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("StillOk");\n' +
        '  },\n' +
        '  ok: function ok() {\n' +
        '    sendMessage("Ok");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        "  // TODO: remove in v5 in favor of 'static-changed'\n" +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "content-changed": function contentChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "static-changed": function staticChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} warnings\n' +
        '   * @param {any} params\n' +
        '   */\n' +
        '  warnings: function warnings(_warnings, params) {\n' +
        '    log.warn("Warnings while compiling.");\n' +
        '\n' +
        '    var printableWarnings = _warnings.map(function (error) {\n' +
        '      var _formatProblem = formatProblem("warning", error),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Warnings", printableWarnings);\n' +
        '\n' +
        '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
        '      log.warn(printableWarnings[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
        '\n' +
        '    if (needShowOverlayForWarnings) {\n' +
        '      show("warning", _warnings);\n' +
        '    }\n' +
        '\n' +
        '    if (params && params.preventReloading) {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} errors\n' +
        '   */\n' +
        '  errors: function errors(_errors) {\n' +
        '    log.error("Errors while compiling. Reload prevented.");\n' +
        '\n' +
        '    var printableErrors = _errors.map(function (error) {\n' +
        '      var _formatProblem2 = formatProblem("error", error),\n' +
        '          header = _formatProblem2.header,\n' +
        '          body = _formatProblem2.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Errors", printableErrors);\n' +
        '\n' +
        '    for (var i = 0; i < printableErrors.length; i++) {\n' +
        '      log.error(printableErrors[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
        '\n' +
        '    if (needShowOverlayForErrors) {\n' +
        '      show("error", _errors);\n' +
        '    }\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error} error\n' +
        '   */\n' +
        '  error: function error(_error) {\n' +
        '    log.error(_error);\n' +
        '  },\n' +
        '  close: function close() {\n' +
        '    log.info("Disconnected!");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Close");\n' +
        '  }\n' +
        '};\n' +
        'var socketURL = createSocketURL(parsedResourceQuery);\n' +
        'socket(socketURL, onSocketMessage, options.reconnect);',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 5,
      _statTestedSnapshotsCached: 0,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 101,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 6,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  },
  lastHarmonyImportOrder: 4
}
source :  ./utils/log.js
 parser.state :  {
  source: '/* global __resourceQuery, __webpack_hash__ */\n' +
    '/// <reference types="webpack/module" />\n' +
    'import webpackHotLog from "webpack/hot/log.js";\n' +
    'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
    'import parseURL from "./utils/parseURL.js";\n' +
    'import socket from "./socket.js";\n' +
    'import { formatProblem, show, hide } from "./overlay.js";\n' +
    'import { log, setLogLevel } from "./utils/log.js";\n' +
    'import sendMessage from "./utils/sendMessage.js";\n' +
    'import reloadApp from "./utils/reloadApp.js";\n' +
    'import createSocketURL from "./utils/createSocketURL.js";\n' +
    '/**\n' +
    ' * @typedef {Object} Options\n' +
    ' * @property {boolean} hot\n' +
    ' * @property {boolean} liveReload\n' +
    ' * @property {boolean} progress\n' +
    ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
    ' * @property {string} [logging]\n' +
    ' * @property {number} [reconnect]\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @typedef {Object} Status\n' +
    ' * @property {boolean} isUnloading\n' +
    ' * @property {string} currentHash\n' +
    ' * @property {string} [previousHash]\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @type {Status}\n' +
    ' */\n' +
    '\n' +
    'var status = {\n' +
    '  isUnloading: false,\n' +
    '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
    '  // eslint-disable-next-line camelcase\n' +
    '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
    '};\n' +
    '/** @type {Options} */\n' +
    '\n' +
    'var options = {\n' +
    '  hot: false,\n' +
    '  liveReload: false,\n' +
    '  progress: false,\n' +
    '  overlay: false\n' +
    '};\n' +
    'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
    '\n' +
    'if (parsedResourceQuery.hot === "true") {\n' +
    '  options.hot = true;\n' +
    '  log.info("Hot Module Replacement enabled.");\n' +
    '}\n' +
    '\n' +
    'if (parsedResourceQuery["live-reload"] === "true") {\n' +
    '  options.liveReload = true;\n' +
    '  log.info("Live Reloading enabled.");\n' +
    '}\n' +
    '\n' +
    'if (parsedResourceQuery.logging) {\n' +
    '  options.logging = parsedResourceQuery.logging;\n' +
    '}\n' +
    '\n' +
    'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
    '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
    '}\n' +
    '/**\n' +
    ' * @param {string} level\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function setAllLogLevel(level) {\n' +
    '  // This is needed because the HMR logger operate separately from dev server logger\n' +
    '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
    '  setLogLevel(level);\n' +
    '}\n' +
    '\n' +
    'if (options.logging) {\n' +
    '  setAllLogLevel(options.logging);\n' +
    '}\n' +
    '\n' +
    'self.addEventListener("beforeunload", function () {\n' +
    '  status.isUnloading = true;\n' +
    '});\n' +
    'var onSocketMessage = {\n' +
    '  hot: function hot() {\n' +
    '    if (parsedResourceQuery.hot === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.hot = true;\n' +
    '    log.info("Hot Module Replacement enabled.");\n' +
    '  },\n' +
    '  liveReload: function liveReload() {\n' +
    '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.liveReload = true;\n' +
    '    log.info("Live Reloading enabled.");\n' +
    '  },\n' +
    '  invalid: function invalid() {\n' +
    `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Invalid");\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {string} hash\n' +
    '   */\n' +
    '  hash: function hash(_hash) {\n' +
    '    status.previousHash = status.currentHash;\n' +
    '    status.currentHash = _hash;\n' +
    '  },\n' +
    '  logging: setAllLogLevel,\n' +
    '\n' +
    '  /**\n' +
    '   * @param {boolean} value\n' +
    '   */\n' +
    '  overlay: function overlay(value) {\n' +
    '    if (typeof document === "undefined") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.overlay = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {number} value\n' +
    '   */\n' +
    '  reconnect: function reconnect(value) {\n' +
    '    if (parsedResourceQuery.reconnect === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.reconnect = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {boolean} value\n' +
    '   */\n' +
    '  progress: function progress(value) {\n' +
    '    options.progress = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
    '   */\n' +
    '  "progress-update": function progressUpdate(data) {\n' +
    '    if (options.progress) {\n' +
    '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Progress", data);\n' +
    '  },\n' +
    '  "still-ok": function stillOk() {\n' +
    '    log.info("Nothing changed.");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("StillOk");\n' +
    '  },\n' +
    '  ok: function ok() {\n' +
    '    sendMessage("Ok");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    reloadApp(options, status);\n' +
    '  },\n' +
    "  // TODO: remove in v5 in favor of 'static-changed'\n" +
    '\n' +
    '  /**\n' +
    '   * @param {string} file\n' +
    '   */\n' +
    '  "content-changed": function contentChanged(file) {\n' +
    '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
    '    self.location.reload();\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {string} file\n' +
    '   */\n' +
    '  "static-changed": function staticChanged(file) {\n' +
    '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
    '    self.location.reload();\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error[]} warnings\n' +
    '   * @param {any} params\n' +
    '   */\n' +
    '  warnings: function warnings(_warnings, params) {\n' +
    '    log.warn("Warnings while compiling.");\n' +
    '\n' +
    '    var printableWarnings = _warnings.map(function (error) {\n' +
    '      var _formatProblem = formatProblem("warning", error),\n' +
    '          header = _formatProblem.header,\n' +
    '          body = _formatProblem.body;\n' +
    '\n' +
    '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
    '    });\n' +
    '\n' +
    '    sendMessage("Warnings", printableWarnings);\n' +
    '\n' +
    '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
    '      log.warn(printableWarnings[i]);\n' +
    '    }\n' +
    '\n' +
    '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
    '\n' +
    '    if (needShowOverlayForWarnings) {\n' +
    '      show("warning", _warnings);\n' +
    '    }\n' +
    '\n' +
    '    if (params && params.preventReloading) {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    reloadApp(options, status);\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error[]} errors\n' +
    '   */\n' +
    '  errors: function errors(_errors) {\n' +
    '    log.error("Errors while compiling. Reload prevented.");\n' +
    '\n' +
    '    var printableErrors = _errors.map(function (error) {\n' +
    '      var _formatProblem2 = formatProblem("error", error),\n' +
    '          header = _formatProblem2.header,\n' +
    '          body = _formatProblem2.body;\n' +
    '\n' +
    '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
    '    });\n' +
    '\n' +
    '    sendMessage("Errors", printableErrors);\n' +
    '\n' +
    '    for (var i = 0; i < printableErrors.length; i++) {\n' +
    '      log.error(printableErrors[i]);\n' +
    '    }\n' +
    '\n' +
    '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
    '\n' +
    '    if (needShowOverlayForErrors) {\n' +
    '      show("error", _errors);\n' +
    '    }\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error} error\n' +
    '   */\n' +
    '  error: function error(_error) {\n' +
    '    log.error(_error);\n' +
    '  },\n' +
    '  close: function close() {\n' +
    '    log.info("Disconnected!");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Close");\n' +
    '  }\n' +
    '};\n' +
    'var socketURL = createSocketURL(parsedResourceQuery);\n' +
    'socket(socketURL, onSocketMessage, options.reconnect);',
  current: NormalModule {
    dependencies: [
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency]
    ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1001,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [
      [HarmonyCompatibilityDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency]
    ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    rawRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js',
      request: undefined,
      query: '?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/index.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/index.js',
      __innerRequest: './client/index.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __resourceQuery, __webpack_hash__ */\n' +
        '/// <reference types="webpack/module" />\n' +
        'import webpackHotLog from "webpack/hot/log.js";\n' +
        'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
        'import parseURL from "./utils/parseURL.js";\n' +
        'import socket from "./socket.js";\n' +
        'import { formatProblem, show, hide } from "./overlay.js";\n' +
        'import { log, setLogLevel } from "./utils/log.js";\n' +
        'import sendMessage from "./utils/sendMessage.js";\n' +
        'import reloadApp from "./utils/reloadApp.js";\n' +
        'import createSocketURL from "./utils/createSocketURL.js";\n' +
        '/**\n' +
        ' * @typedef {Object} Options\n' +
        ' * @property {boolean} hot\n' +
        ' * @property {boolean} liveReload\n' +
        ' * @property {boolean} progress\n' +
        ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
        ' * @property {string} [logging]\n' +
        ' * @property {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @typedef {Object} Status\n' +
        ' * @property {boolean} isUnloading\n' +
        ' * @property {string} currentHash\n' +
        ' * @property {string} [previousHash]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @type {Status}\n' +
        ' */\n' +
        '\n' +
        'var status = {\n' +
        '  isUnloading: false,\n' +
        '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
        '  // eslint-disable-next-line camelcase\n' +
        '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
        '};\n' +
        '/** @type {Options} */\n' +
        '\n' +
        'var options = {\n' +
        '  hot: false,\n' +
        '  liveReload: false,\n' +
        '  progress: false,\n' +
        '  overlay: false\n' +
        '};\n' +
        'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
        '\n' +
        'if (parsedResourceQuery.hot === "true") {\n' +
        '  options.hot = true;\n' +
        '  log.info("Hot Module Replacement enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery["live-reload"] === "true") {\n' +
        '  options.liveReload = true;\n' +
        '  log.info("Live Reloading enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery.logging) {\n' +
        '  options.logging = parsedResourceQuery.logging;\n' +
        '}\n' +
        '\n' +
        'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
        '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} level\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function setAllLogLevel(level) {\n' +
        '  // This is needed because the HMR logger operate separately from dev server logger\n' +
        '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
        '  setLogLevel(level);\n' +
        '}\n' +
        '\n' +
        'if (options.logging) {\n' +
        '  setAllLogLevel(options.logging);\n' +
        '}\n' +
        '\n' +
        'self.addEventListener("beforeunload", function () {\n' +
        '  status.isUnloading = true;\n' +
        '});\n' +
        'var onSocketMessage = {\n' +
        '  hot: function hot() {\n' +
        '    if (parsedResourceQuery.hot === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.hot = true;\n' +
        '    log.info("Hot Module Replacement enabled.");\n' +
        '  },\n' +
        '  liveReload: function liveReload() {\n' +
        '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.liveReload = true;\n' +
        '    log.info("Live Reloading enabled.");\n' +
        '  },\n' +
        '  invalid: function invalid() {\n' +
        `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Invalid");\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} hash\n' +
        '   */\n' +
        '  hash: function hash(_hash) {\n' +
        '    status.previousHash = status.currentHash;\n' +
        '    status.currentHash = _hash;\n' +
        '  },\n' +
        '  logging: setAllLogLevel,\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  overlay: function overlay(value) {\n' +
        '    if (typeof document === "undefined") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.overlay = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {number} value\n' +
        '   */\n' +
        '  reconnect: function reconnect(value) {\n' +
        '    if (parsedResourceQuery.reconnect === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.reconnect = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  progress: function progress(value) {\n' +
        '    options.progress = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
        '   */\n' +
        '  "progress-update": function progressUpdate(data) {\n' +
        '    if (options.progress) {\n' +
        '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Progress", data);\n' +
        '  },\n' +
        '  "still-ok": function stillOk() {\n' +
        '    log.info("Nothing changed.");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("StillOk");\n' +
        '  },\n' +
        '  ok: function ok() {\n' +
        '    sendMessage("Ok");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        "  // TODO: remove in v5 in favor of 'static-changed'\n" +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "content-changed": function contentChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "static-changed": function staticChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} warnings\n' +
        '   * @param {any} params\n' +
        '   */\n' +
        '  warnings: function warnings(_warnings, params) {\n' +
        '    log.warn("Warnings while compiling.");\n' +
        '\n' +
        '    var printableWarnings = _warnings.map(function (error) {\n' +
        '      var _formatProblem = formatProblem("warning", error),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Warnings", printableWarnings);\n' +
        '\n' +
        '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
        '      log.warn(printableWarnings[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
        '\n' +
        '    if (needShowOverlayForWarnings) {\n' +
        '      show("warning", _warnings);\n' +
        '    }\n' +
        '\n' +
        '    if (params && params.preventReloading) {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} errors\n' +
        '   */\n' +
        '  errors: function errors(_errors) {\n' +
        '    log.error("Errors while compiling. Reload prevented.");\n' +
        '\n' +
        '    var printableErrors = _errors.map(function (error) {\n' +
        '      var _formatProblem2 = formatProblem("error", error),\n' +
        '          header = _formatProblem2.header,\n' +
        '          body = _formatProblem2.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Errors", printableErrors);\n' +
        '\n' +
        '    for (var i = 0; i < printableErrors.length; i++) {\n' +
        '      log.error(printableErrors[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
        '\n' +
        '    if (needShowOverlayForErrors) {\n' +
        '      show("error", _errors);\n' +
        '    }\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error} error\n' +
        '   */\n' +
        '  error: function error(_error) {\n' +
        '    log.error(_error);\n' +
        '  },\n' +
        '  close: function close() {\n' +
        '    log.info("Disconnected!");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Close");\n' +
        '  }\n' +
        '};\n' +
        'var socketURL = createSocketURL(parsedResourceQuery);\n' +
        'socket(socketURL, onSocketMessage, options.reconnect);',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency]
    ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1001,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [
      [HarmonyCompatibilityDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency]
    ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    rawRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js',
      request: undefined,
      query: '?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/index.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/index.js',
      __innerRequest: './client/index.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __resourceQuery, __webpack_hash__ */\n' +
        '/// <reference types="webpack/module" />\n' +
        'import webpackHotLog from "webpack/hot/log.js";\n' +
        'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
        'import parseURL from "./utils/parseURL.js";\n' +
        'import socket from "./socket.js";\n' +
        'import { formatProblem, show, hide } from "./overlay.js";\n' +
        'import { log, setLogLevel } from "./utils/log.js";\n' +
        'import sendMessage from "./utils/sendMessage.js";\n' +
        'import reloadApp from "./utils/reloadApp.js";\n' +
        'import createSocketURL from "./utils/createSocketURL.js";\n' +
        '/**\n' +
        ' * @typedef {Object} Options\n' +
        ' * @property {boolean} hot\n' +
        ' * @property {boolean} liveReload\n' +
        ' * @property {boolean} progress\n' +
        ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
        ' * @property {string} [logging]\n' +
        ' * @property {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @typedef {Object} Status\n' +
        ' * @property {boolean} isUnloading\n' +
        ' * @property {string} currentHash\n' +
        ' * @property {string} [previousHash]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @type {Status}\n' +
        ' */\n' +
        '\n' +
        'var status = {\n' +
        '  isUnloading: false,\n' +
        '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
        '  // eslint-disable-next-line camelcase\n' +
        '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
        '};\n' +
        '/** @type {Options} */\n' +
        '\n' +
        'var options = {\n' +
        '  hot: false,\n' +
        '  liveReload: false,\n' +
        '  progress: false,\n' +
        '  overlay: false\n' +
        '};\n' +
        'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
        '\n' +
        'if (parsedResourceQuery.hot === "true") {\n' +
        '  options.hot = true;\n' +
        '  log.info("Hot Module Replacement enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery["live-reload"] === "true") {\n' +
        '  options.liveReload = true;\n' +
        '  log.info("Live Reloading enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery.logging) {\n' +
        '  options.logging = parsedResourceQuery.logging;\n' +
        '}\n' +
        '\n' +
        'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
        '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} level\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function setAllLogLevel(level) {\n' +
        '  // This is needed because the HMR logger operate separately from dev server logger\n' +
        '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
        '  setLogLevel(level);\n' +
        '}\n' +
        '\n' +
        'if (options.logging) {\n' +
        '  setAllLogLevel(options.logging);\n' +
        '}\n' +
        '\n' +
        'self.addEventListener("beforeunload", function () {\n' +
        '  status.isUnloading = true;\n' +
        '});\n' +
        'var onSocketMessage = {\n' +
        '  hot: function hot() {\n' +
        '    if (parsedResourceQuery.hot === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.hot = true;\n' +
        '    log.info("Hot Module Replacement enabled.");\n' +
        '  },\n' +
        '  liveReload: function liveReload() {\n' +
        '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.liveReload = true;\n' +
        '    log.info("Live Reloading enabled.");\n' +
        '  },\n' +
        '  invalid: function invalid() {\n' +
        `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Invalid");\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} hash\n' +
        '   */\n' +
        '  hash: function hash(_hash) {\n' +
        '    status.previousHash = status.currentHash;\n' +
        '    status.currentHash = _hash;\n' +
        '  },\n' +
        '  logging: setAllLogLevel,\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  overlay: function overlay(value) {\n' +
        '    if (typeof document === "undefined") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.overlay = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {number} value\n' +
        '   */\n' +
        '  reconnect: function reconnect(value) {\n' +
        '    if (parsedResourceQuery.reconnect === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.reconnect = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  progress: function progress(value) {\n' +
        '    options.progress = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
        '   */\n' +
        '  "progress-update": function progressUpdate(data) {\n' +
        '    if (options.progress) {\n' +
        '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Progress", data);\n' +
        '  },\n' +
        '  "still-ok": function stillOk() {\n' +
        '    log.info("Nothing changed.");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("StillOk");\n' +
        '  },\n' +
        '  ok: function ok() {\n' +
        '    sendMessage("Ok");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        "  // TODO: remove in v5 in favor of 'static-changed'\n" +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "content-changed": function contentChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "static-changed": function staticChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} warnings\n' +
        '   * @param {any} params\n' +
        '   */\n' +
        '  warnings: function warnings(_warnings, params) {\n' +
        '    log.warn("Warnings while compiling.");\n' +
        '\n' +
        '    var printableWarnings = _warnings.map(function (error) {\n' +
        '      var _formatProblem = formatProblem("warning", error),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Warnings", printableWarnings);\n' +
        '\n' +
        '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
        '      log.warn(printableWarnings[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
        '\n' +
        '    if (needShowOverlayForWarnings) {\n' +
        '      show("warning", _warnings);\n' +
        '    }\n' +
        '\n' +
        '    if (params && params.preventReloading) {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} errors\n' +
        '   */\n' +
        '  errors: function errors(_errors) {\n' +
        '    log.error("Errors while compiling. Reload prevented.");\n' +
        '\n' +
        '    var printableErrors = _errors.map(function (error) {\n' +
        '      var _formatProblem2 = formatProblem("error", error),\n' +
        '          header = _formatProblem2.header,\n' +
        '          body = _formatProblem2.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Errors", printableErrors);\n' +
        '\n' +
        '    for (var i = 0; i < printableErrors.length; i++) {\n' +
        '      log.error(printableErrors[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
        '\n' +
        '    if (needShowOverlayForErrors) {\n' +
        '      show("error", _errors);\n' +
        '    }\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error} error\n' +
        '   */\n' +
        '  error: function error(_error) {\n' +
        '    log.error(_error);\n' +
        '  },\n' +
        '  close: function close() {\n' +
        '    log.info("Disconnected!");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Close");\n' +
        '  }\n' +
        '};\n' +
        'var socketURL = createSocketURL(parsedResourceQuery);\n' +
        'socket(socketURL, onSocketMessage, options.reconnect);',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 5,
      _statTestedSnapshotsCached: 0,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 101,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 6,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  },
  lastHarmonyImportOrder: 5
}
source :  ./utils/sendMessage.js
 parser.state :  {
  source: '/* global __resourceQuery, __webpack_hash__ */\n' +
    '/// <reference types="webpack/module" />\n' +
    'import webpackHotLog from "webpack/hot/log.js";\n' +
    'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
    'import parseURL from "./utils/parseURL.js";\n' +
    'import socket from "./socket.js";\n' +
    'import { formatProblem, show, hide } from "./overlay.js";\n' +
    'import { log, setLogLevel } from "./utils/log.js";\n' +
    'import sendMessage from "./utils/sendMessage.js";\n' +
    'import reloadApp from "./utils/reloadApp.js";\n' +
    'import createSocketURL from "./utils/createSocketURL.js";\n' +
    '/**\n' +
    ' * @typedef {Object} Options\n' +
    ' * @property {boolean} hot\n' +
    ' * @property {boolean} liveReload\n' +
    ' * @property {boolean} progress\n' +
    ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
    ' * @property {string} [logging]\n' +
    ' * @property {number} [reconnect]\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @typedef {Object} Status\n' +
    ' * @property {boolean} isUnloading\n' +
    ' * @property {string} currentHash\n' +
    ' * @property {string} [previousHash]\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @type {Status}\n' +
    ' */\n' +
    '\n' +
    'var status = {\n' +
    '  isUnloading: false,\n' +
    '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
    '  // eslint-disable-next-line camelcase\n' +
    '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
    '};\n' +
    '/** @type {Options} */\n' +
    '\n' +
    'var options = {\n' +
    '  hot: false,\n' +
    '  liveReload: false,\n' +
    '  progress: false,\n' +
    '  overlay: false\n' +
    '};\n' +
    'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
    '\n' +
    'if (parsedResourceQuery.hot === "true") {\n' +
    '  options.hot = true;\n' +
    '  log.info("Hot Module Replacement enabled.");\n' +
    '}\n' +
    '\n' +
    'if (parsedResourceQuery["live-reload"] === "true") {\n' +
    '  options.liveReload = true;\n' +
    '  log.info("Live Reloading enabled.");\n' +
    '}\n' +
    '\n' +
    'if (parsedResourceQuery.logging) {\n' +
    '  options.logging = parsedResourceQuery.logging;\n' +
    '}\n' +
    '\n' +
    'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
    '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
    '}\n' +
    '/**\n' +
    ' * @param {string} level\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function setAllLogLevel(level) {\n' +
    '  // This is needed because the HMR logger operate separately from dev server logger\n' +
    '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
    '  setLogLevel(level);\n' +
    '}\n' +
    '\n' +
    'if (options.logging) {\n' +
    '  setAllLogLevel(options.logging);\n' +
    '}\n' +
    '\n' +
    'self.addEventListener("beforeunload", function () {\n' +
    '  status.isUnloading = true;\n' +
    '});\n' +
    'var onSocketMessage = {\n' +
    '  hot: function hot() {\n' +
    '    if (parsedResourceQuery.hot === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.hot = true;\n' +
    '    log.info("Hot Module Replacement enabled.");\n' +
    '  },\n' +
    '  liveReload: function liveReload() {\n' +
    '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.liveReload = true;\n' +
    '    log.info("Live Reloading enabled.");\n' +
    '  },\n' +
    '  invalid: function invalid() {\n' +
    `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Invalid");\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {string} hash\n' +
    '   */\n' +
    '  hash: function hash(_hash) {\n' +
    '    status.previousHash = status.currentHash;\n' +
    '    status.currentHash = _hash;\n' +
    '  },\n' +
    '  logging: setAllLogLevel,\n' +
    '\n' +
    '  /**\n' +
    '   * @param {boolean} value\n' +
    '   */\n' +
    '  overlay: function overlay(value) {\n' +
    '    if (typeof document === "undefined") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.overlay = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {number} value\n' +
    '   */\n' +
    '  reconnect: function reconnect(value) {\n' +
    '    if (parsedResourceQuery.reconnect === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.reconnect = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {boolean} value\n' +
    '   */\n' +
    '  progress: function progress(value) {\n' +
    '    options.progress = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
    '   */\n' +
    '  "progress-update": function progressUpdate(data) {\n' +
    '    if (options.progress) {\n' +
    '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Progress", data);\n' +
    '  },\n' +
    '  "still-ok": function stillOk() {\n' +
    '    log.info("Nothing changed.");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("StillOk");\n' +
    '  },\n' +
    '  ok: function ok() {\n' +
    '    sendMessage("Ok");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    reloadApp(options, status);\n' +
    '  },\n' +
    "  // TODO: remove in v5 in favor of 'static-changed'\n" +
    '\n' +
    '  /**\n' +
    '   * @param {string} file\n' +
    '   */\n' +
    '  "content-changed": function contentChanged(file) {\n' +
    '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
    '    self.location.reload();\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {string} file\n' +
    '   */\n' +
    '  "static-changed": function staticChanged(file) {\n' +
    '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
    '    self.location.reload();\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error[]} warnings\n' +
    '   * @param {any} params\n' +
    '   */\n' +
    '  warnings: function warnings(_warnings, params) {\n' +
    '    log.warn("Warnings while compiling.");\n' +
    '\n' +
    '    var printableWarnings = _warnings.map(function (error) {\n' +
    '      var _formatProblem = formatProblem("warning", error),\n' +
    '          header = _formatProblem.header,\n' +
    '          body = _formatProblem.body;\n' +
    '\n' +
    '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
    '    });\n' +
    '\n' +
    '    sendMessage("Warnings", printableWarnings);\n' +
    '\n' +
    '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
    '      log.warn(printableWarnings[i]);\n' +
    '    }\n' +
    '\n' +
    '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
    '\n' +
    '    if (needShowOverlayForWarnings) {\n' +
    '      show("warning", _warnings);\n' +
    '    }\n' +
    '\n' +
    '    if (params && params.preventReloading) {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    reloadApp(options, status);\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error[]} errors\n' +
    '   */\n' +
    '  errors: function errors(_errors) {\n' +
    '    log.error("Errors while compiling. Reload prevented.");\n' +
    '\n' +
    '    var printableErrors = _errors.map(function (error) {\n' +
    '      var _formatProblem2 = formatProblem("error", error),\n' +
    '          header = _formatProblem2.header,\n' +
    '          body = _formatProblem2.body;\n' +
    '\n' +
    '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
    '    });\n' +
    '\n' +
    '    sendMessage("Errors", printableErrors);\n' +
    '\n' +
    '    for (var i = 0; i < printableErrors.length; i++) {\n' +
    '      log.error(printableErrors[i]);\n' +
    '    }\n' +
    '\n' +
    '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
    '\n' +
    '    if (needShowOverlayForErrors) {\n' +
    '      show("error", _errors);\n' +
    '    }\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error} error\n' +
    '   */\n' +
    '  error: function error(_error) {\n' +
    '    log.error(_error);\n' +
    '  },\n' +
    '  close: function close() {\n' +
    '    log.info("Disconnected!");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Close");\n' +
    '  }\n' +
    '};\n' +
    'var socketURL = createSocketURL(parsedResourceQuery);\n' +
    'socket(socketURL, onSocketMessage, options.reconnect);',
  current: NormalModule {
    dependencies: [
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency]
    ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1001,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [
      [HarmonyCompatibilityDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency]
    ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    rawRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js',
      request: undefined,
      query: '?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/index.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/index.js',
      __innerRequest: './client/index.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __resourceQuery, __webpack_hash__ */\n' +
        '/// <reference types="webpack/module" />\n' +
        'import webpackHotLog from "webpack/hot/log.js";\n' +
        'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
        'import parseURL from "./utils/parseURL.js";\n' +
        'import socket from "./socket.js";\n' +
        'import { formatProblem, show, hide } from "./overlay.js";\n' +
        'import { log, setLogLevel } from "./utils/log.js";\n' +
        'import sendMessage from "./utils/sendMessage.js";\n' +
        'import reloadApp from "./utils/reloadApp.js";\n' +
        'import createSocketURL from "./utils/createSocketURL.js";\n' +
        '/**\n' +
        ' * @typedef {Object} Options\n' +
        ' * @property {boolean} hot\n' +
        ' * @property {boolean} liveReload\n' +
        ' * @property {boolean} progress\n' +
        ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
        ' * @property {string} [logging]\n' +
        ' * @property {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @typedef {Object} Status\n' +
        ' * @property {boolean} isUnloading\n' +
        ' * @property {string} currentHash\n' +
        ' * @property {string} [previousHash]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @type {Status}\n' +
        ' */\n' +
        '\n' +
        'var status = {\n' +
        '  isUnloading: false,\n' +
        '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
        '  // eslint-disable-next-line camelcase\n' +
        '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
        '};\n' +
        '/** @type {Options} */\n' +
        '\n' +
        'var options = {\n' +
        '  hot: false,\n' +
        '  liveReload: false,\n' +
        '  progress: false,\n' +
        '  overlay: false\n' +
        '};\n' +
        'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
        '\n' +
        'if (parsedResourceQuery.hot === "true") {\n' +
        '  options.hot = true;\n' +
        '  log.info("Hot Module Replacement enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery["live-reload"] === "true") {\n' +
        '  options.liveReload = true;\n' +
        '  log.info("Live Reloading enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery.logging) {\n' +
        '  options.logging = parsedResourceQuery.logging;\n' +
        '}\n' +
        '\n' +
        'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
        '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} level\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function setAllLogLevel(level) {\n' +
        '  // This is needed because the HMR logger operate separately from dev server logger\n' +
        '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
        '  setLogLevel(level);\n' +
        '}\n' +
        '\n' +
        'if (options.logging) {\n' +
        '  setAllLogLevel(options.logging);\n' +
        '}\n' +
        '\n' +
        'self.addEventListener("beforeunload", function () {\n' +
        '  status.isUnloading = true;\n' +
        '});\n' +
        'var onSocketMessage = {\n' +
        '  hot: function hot() {\n' +
        '    if (parsedResourceQuery.hot === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.hot = true;\n' +
        '    log.info("Hot Module Replacement enabled.");\n' +
        '  },\n' +
        '  liveReload: function liveReload() {\n' +
        '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.liveReload = true;\n' +
        '    log.info("Live Reloading enabled.");\n' +
        '  },\n' +
        '  invalid: function invalid() {\n' +
        `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Invalid");\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} hash\n' +
        '   */\n' +
        '  hash: function hash(_hash) {\n' +
        '    status.previousHash = status.currentHash;\n' +
        '    status.currentHash = _hash;\n' +
        '  },\n' +
        '  logging: setAllLogLevel,\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  overlay: function overlay(value) {\n' +
        '    if (typeof document === "undefined") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.overlay = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {number} value\n' +
        '   */\n' +
        '  reconnect: function reconnect(value) {\n' +
        '    if (parsedResourceQuery.reconnect === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.reconnect = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  progress: function progress(value) {\n' +
        '    options.progress = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
        '   */\n' +
        '  "progress-update": function progressUpdate(data) {\n' +
        '    if (options.progress) {\n' +
        '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Progress", data);\n' +
        '  },\n' +
        '  "still-ok": function stillOk() {\n' +
        '    log.info("Nothing changed.");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("StillOk");\n' +
        '  },\n' +
        '  ok: function ok() {\n' +
        '    sendMessage("Ok");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        "  // TODO: remove in v5 in favor of 'static-changed'\n" +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "content-changed": function contentChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "static-changed": function staticChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} warnings\n' +
        '   * @param {any} params\n' +
        '   */\n' +
        '  warnings: function warnings(_warnings, params) {\n' +
        '    log.warn("Warnings while compiling.");\n' +
        '\n' +
        '    var printableWarnings = _warnings.map(function (error) {\n' +
        '      var _formatProblem = formatProblem("warning", error),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Warnings", printableWarnings);\n' +
        '\n' +
        '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
        '      log.warn(printableWarnings[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
        '\n' +
        '    if (needShowOverlayForWarnings) {\n' +
        '      show("warning", _warnings);\n' +
        '    }\n' +
        '\n' +
        '    if (params && params.preventReloading) {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} errors\n' +
        '   */\n' +
        '  errors: function errors(_errors) {\n' +
        '    log.error("Errors while compiling. Reload prevented.");\n' +
        '\n' +
        '    var printableErrors = _errors.map(function (error) {\n' +
        '      var _formatProblem2 = formatProblem("error", error),\n' +
        '          header = _formatProblem2.header,\n' +
        '          body = _formatProblem2.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Errors", printableErrors);\n' +
        '\n' +
        '    for (var i = 0; i < printableErrors.length; i++) {\n' +
        '      log.error(printableErrors[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
        '\n' +
        '    if (needShowOverlayForErrors) {\n' +
        '      show("error", _errors);\n' +
        '    }\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error} error\n' +
        '   */\n' +
        '  error: function error(_error) {\n' +
        '    log.error(_error);\n' +
        '  },\n' +
        '  close: function close() {\n' +
        '    log.info("Disconnected!");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Close");\n' +
        '  }\n' +
        '};\n' +
        'var socketURL = createSocketURL(parsedResourceQuery);\n' +
        'socket(socketURL, onSocketMessage, options.reconnect);',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency]
    ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1001,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [
      [HarmonyCompatibilityDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency]
    ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    rawRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js',
      request: undefined,
      query: '?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/index.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/index.js',
      __innerRequest: './client/index.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __resourceQuery, __webpack_hash__ */\n' +
        '/// <reference types="webpack/module" />\n' +
        'import webpackHotLog from "webpack/hot/log.js";\n' +
        'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
        'import parseURL from "./utils/parseURL.js";\n' +
        'import socket from "./socket.js";\n' +
        'import { formatProblem, show, hide } from "./overlay.js";\n' +
        'import { log, setLogLevel } from "./utils/log.js";\n' +
        'import sendMessage from "./utils/sendMessage.js";\n' +
        'import reloadApp from "./utils/reloadApp.js";\n' +
        'import createSocketURL from "./utils/createSocketURL.js";\n' +
        '/**\n' +
        ' * @typedef {Object} Options\n' +
        ' * @property {boolean} hot\n' +
        ' * @property {boolean} liveReload\n' +
        ' * @property {boolean} progress\n' +
        ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
        ' * @property {string} [logging]\n' +
        ' * @property {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @typedef {Object} Status\n' +
        ' * @property {boolean} isUnloading\n' +
        ' * @property {string} currentHash\n' +
        ' * @property {string} [previousHash]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @type {Status}\n' +
        ' */\n' +
        '\n' +
        'var status = {\n' +
        '  isUnloading: false,\n' +
        '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
        '  // eslint-disable-next-line camelcase\n' +
        '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
        '};\n' +
        '/** @type {Options} */\n' +
        '\n' +
        'var options = {\n' +
        '  hot: false,\n' +
        '  liveReload: false,\n' +
        '  progress: false,\n' +
        '  overlay: false\n' +
        '};\n' +
        'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
        '\n' +
        'if (parsedResourceQuery.hot === "true") {\n' +
        '  options.hot = true;\n' +
        '  log.info("Hot Module Replacement enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery["live-reload"] === "true") {\n' +
        '  options.liveReload = true;\n' +
        '  log.info("Live Reloading enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery.logging) {\n' +
        '  options.logging = parsedResourceQuery.logging;\n' +
        '}\n' +
        '\n' +
        'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
        '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} level\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function setAllLogLevel(level) {\n' +
        '  // This is needed because the HMR logger operate separately from dev server logger\n' +
        '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
        '  setLogLevel(level);\n' +
        '}\n' +
        '\n' +
        'if (options.logging) {\n' +
        '  setAllLogLevel(options.logging);\n' +
        '}\n' +
        '\n' +
        'self.addEventListener("beforeunload", function () {\n' +
        '  status.isUnloading = true;\n' +
        '});\n' +
        'var onSocketMessage = {\n' +
        '  hot: function hot() {\n' +
        '    if (parsedResourceQuery.hot === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.hot = true;\n' +
        '    log.info("Hot Module Replacement enabled.");\n' +
        '  },\n' +
        '  liveReload: function liveReload() {\n' +
        '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.liveReload = true;\n' +
        '    log.info("Live Reloading enabled.");\n' +
        '  },\n' +
        '  invalid: function invalid() {\n' +
        `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Invalid");\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} hash\n' +
        '   */\n' +
        '  hash: function hash(_hash) {\n' +
        '    status.previousHash = status.currentHash;\n' +
        '    status.currentHash = _hash;\n' +
        '  },\n' +
        '  logging: setAllLogLevel,\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  overlay: function overlay(value) {\n' +
        '    if (typeof document === "undefined") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.overlay = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {number} value\n' +
        '   */\n' +
        '  reconnect: function reconnect(value) {\n' +
        '    if (parsedResourceQuery.reconnect === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.reconnect = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  progress: function progress(value) {\n' +
        '    options.progress = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
        '   */\n' +
        '  "progress-update": function progressUpdate(data) {\n' +
        '    if (options.progress) {\n' +
        '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Progress", data);\n' +
        '  },\n' +
        '  "still-ok": function stillOk() {\n' +
        '    log.info("Nothing changed.");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("StillOk");\n' +
        '  },\n' +
        '  ok: function ok() {\n' +
        '    sendMessage("Ok");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        "  // TODO: remove in v5 in favor of 'static-changed'\n" +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "content-changed": function contentChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "static-changed": function staticChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} warnings\n' +
        '   * @param {any} params\n' +
        '   */\n' +
        '  warnings: function warnings(_warnings, params) {\n' +
        '    log.warn("Warnings while compiling.");\n' +
        '\n' +
        '    var printableWarnings = _warnings.map(function (error) {\n' +
        '      var _formatProblem = formatProblem("warning", error),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Warnings", printableWarnings);\n' +
        '\n' +
        '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
        '      log.warn(printableWarnings[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
        '\n' +
        '    if (needShowOverlayForWarnings) {\n' +
        '      show("warning", _warnings);\n' +
        '    }\n' +
        '\n' +
        '    if (params && params.preventReloading) {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} errors\n' +
        '   */\n' +
        '  errors: function errors(_errors) {\n' +
        '    log.error("Errors while compiling. Reload prevented.");\n' +
        '\n' +
        '    var printableErrors = _errors.map(function (error) {\n' +
        '      var _formatProblem2 = formatProblem("error", error),\n' +
        '          header = _formatProblem2.header,\n' +
        '          body = _formatProblem2.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Errors", printableErrors);\n' +
        '\n' +
        '    for (var i = 0; i < printableErrors.length; i++) {\n' +
        '      log.error(printableErrors[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
        '\n' +
        '    if (needShowOverlayForErrors) {\n' +
        '      show("error", _errors);\n' +
        '    }\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error} error\n' +
        '   */\n' +
        '  error: function error(_error) {\n' +
        '    log.error(_error);\n' +
        '  },\n' +
        '  close: function close() {\n' +
        '    log.info("Disconnected!");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Close");\n' +
        '  }\n' +
        '};\n' +
        'var socketURL = createSocketURL(parsedResourceQuery);\n' +
        'socket(socketURL, onSocketMessage, options.reconnect);',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 5,
      _statTestedSnapshotsCached: 0,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 101,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 6,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  },
  lastHarmonyImportOrder: 6
}
source :  ./utils/reloadApp.js
 parser.state :  {
  source: '/* global __resourceQuery, __webpack_hash__ */\n' +
    '/// <reference types="webpack/module" />\n' +
    'import webpackHotLog from "webpack/hot/log.js";\n' +
    'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
    'import parseURL from "./utils/parseURL.js";\n' +
    'import socket from "./socket.js";\n' +
    'import { formatProblem, show, hide } from "./overlay.js";\n' +
    'import { log, setLogLevel } from "./utils/log.js";\n' +
    'import sendMessage from "./utils/sendMessage.js";\n' +
    'import reloadApp from "./utils/reloadApp.js";\n' +
    'import createSocketURL from "./utils/createSocketURL.js";\n' +
    '/**\n' +
    ' * @typedef {Object} Options\n' +
    ' * @property {boolean} hot\n' +
    ' * @property {boolean} liveReload\n' +
    ' * @property {boolean} progress\n' +
    ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
    ' * @property {string} [logging]\n' +
    ' * @property {number} [reconnect]\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @typedef {Object} Status\n' +
    ' * @property {boolean} isUnloading\n' +
    ' * @property {string} currentHash\n' +
    ' * @property {string} [previousHash]\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @type {Status}\n' +
    ' */\n' +
    '\n' +
    'var status = {\n' +
    '  isUnloading: false,\n' +
    '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
    '  // eslint-disable-next-line camelcase\n' +
    '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
    '};\n' +
    '/** @type {Options} */\n' +
    '\n' +
    'var options = {\n' +
    '  hot: false,\n' +
    '  liveReload: false,\n' +
    '  progress: false,\n' +
    '  overlay: false\n' +
    '};\n' +
    'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
    '\n' +
    'if (parsedResourceQuery.hot === "true") {\n' +
    '  options.hot = true;\n' +
    '  log.info("Hot Module Replacement enabled.");\n' +
    '}\n' +
    '\n' +
    'if (parsedResourceQuery["live-reload"] === "true") {\n' +
    '  options.liveReload = true;\n' +
    '  log.info("Live Reloading enabled.");\n' +
    '}\n' +
    '\n' +
    'if (parsedResourceQuery.logging) {\n' +
    '  options.logging = parsedResourceQuery.logging;\n' +
    '}\n' +
    '\n' +
    'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
    '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
    '}\n' +
    '/**\n' +
    ' * @param {string} level\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function setAllLogLevel(level) {\n' +
    '  // This is needed because the HMR logger operate separately from dev server logger\n' +
    '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
    '  setLogLevel(level);\n' +
    '}\n' +
    '\n' +
    'if (options.logging) {\n' +
    '  setAllLogLevel(options.logging);\n' +
    '}\n' +
    '\n' +
    'self.addEventListener("beforeunload", function () {\n' +
    '  status.isUnloading = true;\n' +
    '});\n' +
    'var onSocketMessage = {\n' +
    '  hot: function hot() {\n' +
    '    if (parsedResourceQuery.hot === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.hot = true;\n' +
    '    log.info("Hot Module Replacement enabled.");\n' +
    '  },\n' +
    '  liveReload: function liveReload() {\n' +
    '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.liveReload = true;\n' +
    '    log.info("Live Reloading enabled.");\n' +
    '  },\n' +
    '  invalid: function invalid() {\n' +
    `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Invalid");\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {string} hash\n' +
    '   */\n' +
    '  hash: function hash(_hash) {\n' +
    '    status.previousHash = status.currentHash;\n' +
    '    status.currentHash = _hash;\n' +
    '  },\n' +
    '  logging: setAllLogLevel,\n' +
    '\n' +
    '  /**\n' +
    '   * @param {boolean} value\n' +
    '   */\n' +
    '  overlay: function overlay(value) {\n' +
    '    if (typeof document === "undefined") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.overlay = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {number} value\n' +
    '   */\n' +
    '  reconnect: function reconnect(value) {\n' +
    '    if (parsedResourceQuery.reconnect === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.reconnect = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {boolean} value\n' +
    '   */\n' +
    '  progress: function progress(value) {\n' +
    '    options.progress = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
    '   */\n' +
    '  "progress-update": function progressUpdate(data) {\n' +
    '    if (options.progress) {\n' +
    '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Progress", data);\n' +
    '  },\n' +
    '  "still-ok": function stillOk() {\n' +
    '    log.info("Nothing changed.");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("StillOk");\n' +
    '  },\n' +
    '  ok: function ok() {\n' +
    '    sendMessage("Ok");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    reloadApp(options, status);\n' +
    '  },\n' +
    "  // TODO: remove in v5 in favor of 'static-changed'\n" +
    '\n' +
    '  /**\n' +
    '   * @param {string} file\n' +
    '   */\n' +
    '  "content-changed": function contentChanged(file) {\n' +
    '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
    '    self.location.reload();\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {string} file\n' +
    '   */\n' +
    '  "static-changed": function staticChanged(file) {\n' +
    '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
    '    self.location.reload();\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error[]} warnings\n' +
    '   * @param {any} params\n' +
    '   */\n' +
    '  warnings: function warnings(_warnings, params) {\n' +
    '    log.warn("Warnings while compiling.");\n' +
    '\n' +
    '    var printableWarnings = _warnings.map(function (error) {\n' +
    '      var _formatProblem = formatProblem("warning", error),\n' +
    '          header = _formatProblem.header,\n' +
    '          body = _formatProblem.body;\n' +
    '\n' +
    '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
    '    });\n' +
    '\n' +
    '    sendMessage("Warnings", printableWarnings);\n' +
    '\n' +
    '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
    '      log.warn(printableWarnings[i]);\n' +
    '    }\n' +
    '\n' +
    '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
    '\n' +
    '    if (needShowOverlayForWarnings) {\n' +
    '      show("warning", _warnings);\n' +
    '    }\n' +
    '\n' +
    '    if (params && params.preventReloading) {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    reloadApp(options, status);\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error[]} errors\n' +
    '   */\n' +
    '  errors: function errors(_errors) {\n' +
    '    log.error("Errors while compiling. Reload prevented.");\n' +
    '\n' +
    '    var printableErrors = _errors.map(function (error) {\n' +
    '      var _formatProblem2 = formatProblem("error", error),\n' +
    '          header = _formatProblem2.header,\n' +
    '          body = _formatProblem2.body;\n' +
    '\n' +
    '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
    '    });\n' +
    '\n' +
    '    sendMessage("Errors", printableErrors);\n' +
    '\n' +
    '    for (var i = 0; i < printableErrors.length; i++) {\n' +
    '      log.error(printableErrors[i]);\n' +
    '    }\n' +
    '\n' +
    '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
    '\n' +
    '    if (needShowOverlayForErrors) {\n' +
    '      show("error", _errors);\n' +
    '    }\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error} error\n' +
    '   */\n' +
    '  error: function error(_error) {\n' +
    '    log.error(_error);\n' +
    '  },\n' +
    '  close: function close() {\n' +
    '    log.info("Disconnected!");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Close");\n' +
    '  }\n' +
    '};\n' +
    'var socketURL = createSocketURL(parsedResourceQuery);\n' +
    'socket(socketURL, onSocketMessage, options.reconnect);',
  current: NormalModule {
    dependencies: [
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency]
    ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1001,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [
      [HarmonyCompatibilityDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency]
    ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    rawRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js',
      request: undefined,
      query: '?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/index.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/index.js',
      __innerRequest: './client/index.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __resourceQuery, __webpack_hash__ */\n' +
        '/// <reference types="webpack/module" />\n' +
        'import webpackHotLog from "webpack/hot/log.js";\n' +
        'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
        'import parseURL from "./utils/parseURL.js";\n' +
        'import socket from "./socket.js";\n' +
        'import { formatProblem, show, hide } from "./overlay.js";\n' +
        'import { log, setLogLevel } from "./utils/log.js";\n' +
        'import sendMessage from "./utils/sendMessage.js";\n' +
        'import reloadApp from "./utils/reloadApp.js";\n' +
        'import createSocketURL from "./utils/createSocketURL.js";\n' +
        '/**\n' +
        ' * @typedef {Object} Options\n' +
        ' * @property {boolean} hot\n' +
        ' * @property {boolean} liveReload\n' +
        ' * @property {boolean} progress\n' +
        ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
        ' * @property {string} [logging]\n' +
        ' * @property {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @typedef {Object} Status\n' +
        ' * @property {boolean} isUnloading\n' +
        ' * @property {string} currentHash\n' +
        ' * @property {string} [previousHash]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @type {Status}\n' +
        ' */\n' +
        '\n' +
        'var status = {\n' +
        '  isUnloading: false,\n' +
        '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
        '  // eslint-disable-next-line camelcase\n' +
        '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
        '};\n' +
        '/** @type {Options} */\n' +
        '\n' +
        'var options = {\n' +
        '  hot: false,\n' +
        '  liveReload: false,\n' +
        '  progress: false,\n' +
        '  overlay: false\n' +
        '};\n' +
        'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
        '\n' +
        'if (parsedResourceQuery.hot === "true") {\n' +
        '  options.hot = true;\n' +
        '  log.info("Hot Module Replacement enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery["live-reload"] === "true") {\n' +
        '  options.liveReload = true;\n' +
        '  log.info("Live Reloading enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery.logging) {\n' +
        '  options.logging = parsedResourceQuery.logging;\n' +
        '}\n' +
        '\n' +
        'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
        '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} level\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function setAllLogLevel(level) {\n' +
        '  // This is needed because the HMR logger operate separately from dev server logger\n' +
        '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
        '  setLogLevel(level);\n' +
        '}\n' +
        '\n' +
        'if (options.logging) {\n' +
        '  setAllLogLevel(options.logging);\n' +
        '}\n' +
        '\n' +
        'self.addEventListener("beforeunload", function () {\n' +
        '  status.isUnloading = true;\n' +
        '});\n' +
        'var onSocketMessage = {\n' +
        '  hot: function hot() {\n' +
        '    if (parsedResourceQuery.hot === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.hot = true;\n' +
        '    log.info("Hot Module Replacement enabled.");\n' +
        '  },\n' +
        '  liveReload: function liveReload() {\n' +
        '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.liveReload = true;\n' +
        '    log.info("Live Reloading enabled.");\n' +
        '  },\n' +
        '  invalid: function invalid() {\n' +
        `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Invalid");\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} hash\n' +
        '   */\n' +
        '  hash: function hash(_hash) {\n' +
        '    status.previousHash = status.currentHash;\n' +
        '    status.currentHash = _hash;\n' +
        '  },\n' +
        '  logging: setAllLogLevel,\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  overlay: function overlay(value) {\n' +
        '    if (typeof document === "undefined") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.overlay = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {number} value\n' +
        '   */\n' +
        '  reconnect: function reconnect(value) {\n' +
        '    if (parsedResourceQuery.reconnect === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.reconnect = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  progress: function progress(value) {\n' +
        '    options.progress = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
        '   */\n' +
        '  "progress-update": function progressUpdate(data) {\n' +
        '    if (options.progress) {\n' +
        '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Progress", data);\n' +
        '  },\n' +
        '  "still-ok": function stillOk() {\n' +
        '    log.info("Nothing changed.");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("StillOk");\n' +
        '  },\n' +
        '  ok: function ok() {\n' +
        '    sendMessage("Ok");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        "  // TODO: remove in v5 in favor of 'static-changed'\n" +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "content-changed": function contentChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "static-changed": function staticChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} warnings\n' +
        '   * @param {any} params\n' +
        '   */\n' +
        '  warnings: function warnings(_warnings, params) {\n' +
        '    log.warn("Warnings while compiling.");\n' +
        '\n' +
        '    var printableWarnings = _warnings.map(function (error) {\n' +
        '      var _formatProblem = formatProblem("warning", error),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Warnings", printableWarnings);\n' +
        '\n' +
        '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
        '      log.warn(printableWarnings[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
        '\n' +
        '    if (needShowOverlayForWarnings) {\n' +
        '      show("warning", _warnings);\n' +
        '    }\n' +
        '\n' +
        '    if (params && params.preventReloading) {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} errors\n' +
        '   */\n' +
        '  errors: function errors(_errors) {\n' +
        '    log.error("Errors while compiling. Reload prevented.");\n' +
        '\n' +
        '    var printableErrors = _errors.map(function (error) {\n' +
        '      var _formatProblem2 = formatProblem("error", error),\n' +
        '          header = _formatProblem2.header,\n' +
        '          body = _formatProblem2.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Errors", printableErrors);\n' +
        '\n' +
        '    for (var i = 0; i < printableErrors.length; i++) {\n' +
        '      log.error(printableErrors[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
        '\n' +
        '    if (needShowOverlayForErrors) {\n' +
        '      show("error", _errors);\n' +
        '    }\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error} error\n' +
        '   */\n' +
        '  error: function error(_error) {\n' +
        '    log.error(_error);\n' +
        '  },\n' +
        '  close: function close() {\n' +
        '    log.info("Disconnected!");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Close");\n' +
        '  }\n' +
        '};\n' +
        'var socketURL = createSocketURL(parsedResourceQuery);\n' +
        'socket(socketURL, onSocketMessage, options.reconnect);',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency]
    ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1001,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [
      [HarmonyCompatibilityDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency]
    ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    rawRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js',
      request: undefined,
      query: '?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/index.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/index.js',
      __innerRequest: './client/index.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __resourceQuery, __webpack_hash__ */\n' +
        '/// <reference types="webpack/module" />\n' +
        'import webpackHotLog from "webpack/hot/log.js";\n' +
        'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
        'import parseURL from "./utils/parseURL.js";\n' +
        'import socket from "./socket.js";\n' +
        'import { formatProblem, show, hide } from "./overlay.js";\n' +
        'import { log, setLogLevel } from "./utils/log.js";\n' +
        'import sendMessage from "./utils/sendMessage.js";\n' +
        'import reloadApp from "./utils/reloadApp.js";\n' +
        'import createSocketURL from "./utils/createSocketURL.js";\n' +
        '/**\n' +
        ' * @typedef {Object} Options\n' +
        ' * @property {boolean} hot\n' +
        ' * @property {boolean} liveReload\n' +
        ' * @property {boolean} progress\n' +
        ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
        ' * @property {string} [logging]\n' +
        ' * @property {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @typedef {Object} Status\n' +
        ' * @property {boolean} isUnloading\n' +
        ' * @property {string} currentHash\n' +
        ' * @property {string} [previousHash]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @type {Status}\n' +
        ' */\n' +
        '\n' +
        'var status = {\n' +
        '  isUnloading: false,\n' +
        '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
        '  // eslint-disable-next-line camelcase\n' +
        '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
        '};\n' +
        '/** @type {Options} */\n' +
        '\n' +
        'var options = {\n' +
        '  hot: false,\n' +
        '  liveReload: false,\n' +
        '  progress: false,\n' +
        '  overlay: false\n' +
        '};\n' +
        'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
        '\n' +
        'if (parsedResourceQuery.hot === "true") {\n' +
        '  options.hot = true;\n' +
        '  log.info("Hot Module Replacement enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery["live-reload"] === "true") {\n' +
        '  options.liveReload = true;\n' +
        '  log.info("Live Reloading enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery.logging) {\n' +
        '  options.logging = parsedResourceQuery.logging;\n' +
        '}\n' +
        '\n' +
        'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
        '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} level\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function setAllLogLevel(level) {\n' +
        '  // This is needed because the HMR logger operate separately from dev server logger\n' +
        '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
        '  setLogLevel(level);\n' +
        '}\n' +
        '\n' +
        'if (options.logging) {\n' +
        '  setAllLogLevel(options.logging);\n' +
        '}\n' +
        '\n' +
        'self.addEventListener("beforeunload", function () {\n' +
        '  status.isUnloading = true;\n' +
        '});\n' +
        'var onSocketMessage = {\n' +
        '  hot: function hot() {\n' +
        '    if (parsedResourceQuery.hot === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.hot = true;\n' +
        '    log.info("Hot Module Replacement enabled.");\n' +
        '  },\n' +
        '  liveReload: function liveReload() {\n' +
        '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.liveReload = true;\n' +
        '    log.info("Live Reloading enabled.");\n' +
        '  },\n' +
        '  invalid: function invalid() {\n' +
        `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Invalid");\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} hash\n' +
        '   */\n' +
        '  hash: function hash(_hash) {\n' +
        '    status.previousHash = status.currentHash;\n' +
        '    status.currentHash = _hash;\n' +
        '  },\n' +
        '  logging: setAllLogLevel,\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  overlay: function overlay(value) {\n' +
        '    if (typeof document === "undefined") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.overlay = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {number} value\n' +
        '   */\n' +
        '  reconnect: function reconnect(value) {\n' +
        '    if (parsedResourceQuery.reconnect === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.reconnect = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  progress: function progress(value) {\n' +
        '    options.progress = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
        '   */\n' +
        '  "progress-update": function progressUpdate(data) {\n' +
        '    if (options.progress) {\n' +
        '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Progress", data);\n' +
        '  },\n' +
        '  "still-ok": function stillOk() {\n' +
        '    log.info("Nothing changed.");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("StillOk");\n' +
        '  },\n' +
        '  ok: function ok() {\n' +
        '    sendMessage("Ok");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        "  // TODO: remove in v5 in favor of 'static-changed'\n" +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "content-changed": function contentChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "static-changed": function staticChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} warnings\n' +
        '   * @param {any} params\n' +
        '   */\n' +
        '  warnings: function warnings(_warnings, params) {\n' +
        '    log.warn("Warnings while compiling.");\n' +
        '\n' +
        '    var printableWarnings = _warnings.map(function (error) {\n' +
        '      var _formatProblem = formatProblem("warning", error),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Warnings", printableWarnings);\n' +
        '\n' +
        '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
        '      log.warn(printableWarnings[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
        '\n' +
        '    if (needShowOverlayForWarnings) {\n' +
        '      show("warning", _warnings);\n' +
        '    }\n' +
        '\n' +
        '    if (params && params.preventReloading) {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} errors\n' +
        '   */\n' +
        '  errors: function errors(_errors) {\n' +
        '    log.error("Errors while compiling. Reload prevented.");\n' +
        '\n' +
        '    var printableErrors = _errors.map(function (error) {\n' +
        '      var _formatProblem2 = formatProblem("error", error),\n' +
        '          header = _formatProblem2.header,\n' +
        '          body = _formatProblem2.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Errors", printableErrors);\n' +
        '\n' +
        '    for (var i = 0; i < printableErrors.length; i++) {\n' +
        '      log.error(printableErrors[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
        '\n' +
        '    if (needShowOverlayForErrors) {\n' +
        '      show("error", _errors);\n' +
        '    }\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error} error\n' +
        '   */\n' +
        '  error: function error(_error) {\n' +
        '    log.error(_error);\n' +
        '  },\n' +
        '  close: function close() {\n' +
        '    log.info("Disconnected!");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Close");\n' +
        '  }\n' +
        '};\n' +
        'var socketURL = createSocketURL(parsedResourceQuery);\n' +
        'socket(socketURL, onSocketMessage, options.reconnect);',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 5,
      _statTestedSnapshotsCached: 0,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 101,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 6,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  },
  lastHarmonyImportOrder: 7
}
source :  ./utils/createSocketURL.js
 parser.state :  {
  source: '/* global __resourceQuery, __webpack_hash__ */\n' +
    '/// <reference types="webpack/module" />\n' +
    'import webpackHotLog from "webpack/hot/log.js";\n' +
    'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
    'import parseURL from "./utils/parseURL.js";\n' +
    'import socket from "./socket.js";\n' +
    'import { formatProblem, show, hide } from "./overlay.js";\n' +
    'import { log, setLogLevel } from "./utils/log.js";\n' +
    'import sendMessage from "./utils/sendMessage.js";\n' +
    'import reloadApp from "./utils/reloadApp.js";\n' +
    'import createSocketURL from "./utils/createSocketURL.js";\n' +
    '/**\n' +
    ' * @typedef {Object} Options\n' +
    ' * @property {boolean} hot\n' +
    ' * @property {boolean} liveReload\n' +
    ' * @property {boolean} progress\n' +
    ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
    ' * @property {string} [logging]\n' +
    ' * @property {number} [reconnect]\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @typedef {Object} Status\n' +
    ' * @property {boolean} isUnloading\n' +
    ' * @property {string} currentHash\n' +
    ' * @property {string} [previousHash]\n' +
    ' */\n' +
    '\n' +
    '/**\n' +
    ' * @type {Status}\n' +
    ' */\n' +
    '\n' +
    'var status = {\n' +
    '  isUnloading: false,\n' +
    '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
    '  // eslint-disable-next-line camelcase\n' +
    '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
    '};\n' +
    '/** @type {Options} */\n' +
    '\n' +
    'var options = {\n' +
    '  hot: false,\n' +
    '  liveReload: false,\n' +
    '  progress: false,\n' +
    '  overlay: false\n' +
    '};\n' +
    'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
    '\n' +
    'if (parsedResourceQuery.hot === "true") {\n' +
    '  options.hot = true;\n' +
    '  log.info("Hot Module Replacement enabled.");\n' +
    '}\n' +
    '\n' +
    'if (parsedResourceQuery["live-reload"] === "true") {\n' +
    '  options.liveReload = true;\n' +
    '  log.info("Live Reloading enabled.");\n' +
    '}\n' +
    '\n' +
    'if (parsedResourceQuery.logging) {\n' +
    '  options.logging = parsedResourceQuery.logging;\n' +
    '}\n' +
    '\n' +
    'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
    '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
    '}\n' +
    '/**\n' +
    ' * @param {string} level\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function setAllLogLevel(level) {\n' +
    '  // This is needed because the HMR logger operate separately from dev server logger\n' +
    '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
    '  setLogLevel(level);\n' +
    '}\n' +
    '\n' +
    'if (options.logging) {\n' +
    '  setAllLogLevel(options.logging);\n' +
    '}\n' +
    '\n' +
    'self.addEventListener("beforeunload", function () {\n' +
    '  status.isUnloading = true;\n' +
    '});\n' +
    'var onSocketMessage = {\n' +
    '  hot: function hot() {\n' +
    '    if (parsedResourceQuery.hot === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.hot = true;\n' +
    '    log.info("Hot Module Replacement enabled.");\n' +
    '  },\n' +
    '  liveReload: function liveReload() {\n' +
    '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.liveReload = true;\n' +
    '    log.info("Live Reloading enabled.");\n' +
    '  },\n' +
    '  invalid: function invalid() {\n' +
    `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Invalid");\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {string} hash\n' +
    '   */\n' +
    '  hash: function hash(_hash) {\n' +
    '    status.previousHash = status.currentHash;\n' +
    '    status.currentHash = _hash;\n' +
    '  },\n' +
    '  logging: setAllLogLevel,\n' +
    '\n' +
    '  /**\n' +
    '   * @param {boolean} value\n' +
    '   */\n' +
    '  overlay: function overlay(value) {\n' +
    '    if (typeof document === "undefined") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.overlay = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {number} value\n' +
    '   */\n' +
    '  reconnect: function reconnect(value) {\n' +
    '    if (parsedResourceQuery.reconnect === "false") {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    options.reconnect = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {boolean} value\n' +
    '   */\n' +
    '  progress: function progress(value) {\n' +
    '    options.progress = value;\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
    '   */\n' +
    '  "progress-update": function progressUpdate(data) {\n' +
    '    if (options.progress) {\n' +
    '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Progress", data);\n' +
    '  },\n' +
    '  "still-ok": function stillOk() {\n' +
    '    log.info("Nothing changed.");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("StillOk");\n' +
    '  },\n' +
    '  ok: function ok() {\n' +
    '    sendMessage("Ok");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    reloadApp(options, status);\n' +
    '  },\n' +
    "  // TODO: remove in v5 in favor of 'static-changed'\n" +
    '\n' +
    '  /**\n' +
    '   * @param {string} file\n' +
    '   */\n' +
    '  "content-changed": function contentChanged(file) {\n' +
    '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
    '    self.location.reload();\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {string} file\n' +
    '   */\n' +
    '  "static-changed": function staticChanged(file) {\n' +
    '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
    '    self.location.reload();\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error[]} warnings\n' +
    '   * @param {any} params\n' +
    '   */\n' +
    '  warnings: function warnings(_warnings, params) {\n' +
    '    log.warn("Warnings while compiling.");\n' +
    '\n' +
    '    var printableWarnings = _warnings.map(function (error) {\n' +
    '      var _formatProblem = formatProblem("warning", error),\n' +
    '          header = _formatProblem.header,\n' +
    '          body = _formatProblem.body;\n' +
    '\n' +
    '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
    '    });\n' +
    '\n' +
    '    sendMessage("Warnings", printableWarnings);\n' +
    '\n' +
    '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
    '      log.warn(printableWarnings[i]);\n' +
    '    }\n' +
    '\n' +
    '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
    '\n' +
    '    if (needShowOverlayForWarnings) {\n' +
    '      show("warning", _warnings);\n' +
    '    }\n' +
    '\n' +
    '    if (params && params.preventReloading) {\n' +
    '      return;\n' +
    '    }\n' +
    '\n' +
    '    reloadApp(options, status);\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error[]} errors\n' +
    '   */\n' +
    '  errors: function errors(_errors) {\n' +
    '    log.error("Errors while compiling. Reload prevented.");\n' +
    '\n' +
    '    var printableErrors = _errors.map(function (error) {\n' +
    '      var _formatProblem2 = formatProblem("error", error),\n' +
    '          header = _formatProblem2.header,\n' +
    '          body = _formatProblem2.body;\n' +
    '\n' +
    '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
    '    });\n' +
    '\n' +
    '    sendMessage("Errors", printableErrors);\n' +
    '\n' +
    '    for (var i = 0; i < printableErrors.length; i++) {\n' +
    '      log.error(printableErrors[i]);\n' +
    '    }\n' +
    '\n' +
    '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
    '\n' +
    '    if (needShowOverlayForErrors) {\n' +
    '      show("error", _errors);\n' +
    '    }\n' +
    '  },\n' +
    '\n' +
    '  /**\n' +
    '   * @param {Error} error\n' +
    '   */\n' +
    '  error: function error(_error) {\n' +
    '    log.error(_error);\n' +
    '  },\n' +
    '  close: function close() {\n' +
    '    log.info("Disconnected!");\n' +
    '\n' +
    '    if (options.overlay) {\n' +
    '      hide();\n' +
    '    }\n' +
    '\n' +
    '    sendMessage("Close");\n' +
    '  }\n' +
    '};\n' +
    'var socketURL = createSocketURL(parsedResourceQuery);\n' +
    'socket(socketURL, onSocketMessage, options.reconnect);',
  current: NormalModule {
    dependencies: [
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency]
    ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1001,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [
      [HarmonyCompatibilityDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency]
    ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    rawRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js',
      request: undefined,
      query: '?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/index.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/index.js',
      __innerRequest: './client/index.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __resourceQuery, __webpack_hash__ */\n' +
        '/// <reference types="webpack/module" />\n' +
        'import webpackHotLog from "webpack/hot/log.js";\n' +
        'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
        'import parseURL from "./utils/parseURL.js";\n' +
        'import socket from "./socket.js";\n' +
        'import { formatProblem, show, hide } from "./overlay.js";\n' +
        'import { log, setLogLevel } from "./utils/log.js";\n' +
        'import sendMessage from "./utils/sendMessage.js";\n' +
        'import reloadApp from "./utils/reloadApp.js";\n' +
        'import createSocketURL from "./utils/createSocketURL.js";\n' +
        '/**\n' +
        ' * @typedef {Object} Options\n' +
        ' * @property {boolean} hot\n' +
        ' * @property {boolean} liveReload\n' +
        ' * @property {boolean} progress\n' +
        ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
        ' * @property {string} [logging]\n' +
        ' * @property {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @typedef {Object} Status\n' +
        ' * @property {boolean} isUnloading\n' +
        ' * @property {string} currentHash\n' +
        ' * @property {string} [previousHash]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @type {Status}\n' +
        ' */\n' +
        '\n' +
        'var status = {\n' +
        '  isUnloading: false,\n' +
        '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
        '  // eslint-disable-next-line camelcase\n' +
        '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
        '};\n' +
        '/** @type {Options} */\n' +
        '\n' +
        'var options = {\n' +
        '  hot: false,\n' +
        '  liveReload: false,\n' +
        '  progress: false,\n' +
        '  overlay: false\n' +
        '};\n' +
        'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
        '\n' +
        'if (parsedResourceQuery.hot === "true") {\n' +
        '  options.hot = true;\n' +
        '  log.info("Hot Module Replacement enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery["live-reload"] === "true") {\n' +
        '  options.liveReload = true;\n' +
        '  log.info("Live Reloading enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery.logging) {\n' +
        '  options.logging = parsedResourceQuery.logging;\n' +
        '}\n' +
        '\n' +
        'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
        '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} level\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function setAllLogLevel(level) {\n' +
        '  // This is needed because the HMR logger operate separately from dev server logger\n' +
        '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
        '  setLogLevel(level);\n' +
        '}\n' +
        '\n' +
        'if (options.logging) {\n' +
        '  setAllLogLevel(options.logging);\n' +
        '}\n' +
        '\n' +
        'self.addEventListener("beforeunload", function () {\n' +
        '  status.isUnloading = true;\n' +
        '});\n' +
        'var onSocketMessage = {\n' +
        '  hot: function hot() {\n' +
        '    if (parsedResourceQuery.hot === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.hot = true;\n' +
        '    log.info("Hot Module Replacement enabled.");\n' +
        '  },\n' +
        '  liveReload: function liveReload() {\n' +
        '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.liveReload = true;\n' +
        '    log.info("Live Reloading enabled.");\n' +
        '  },\n' +
        '  invalid: function invalid() {\n' +
        `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Invalid");\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} hash\n' +
        '   */\n' +
        '  hash: function hash(_hash) {\n' +
        '    status.previousHash = status.currentHash;\n' +
        '    status.currentHash = _hash;\n' +
        '  },\n' +
        '  logging: setAllLogLevel,\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  overlay: function overlay(value) {\n' +
        '    if (typeof document === "undefined") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.overlay = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {number} value\n' +
        '   */\n' +
        '  reconnect: function reconnect(value) {\n' +
        '    if (parsedResourceQuery.reconnect === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.reconnect = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  progress: function progress(value) {\n' +
        '    options.progress = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
        '   */\n' +
        '  "progress-update": function progressUpdate(data) {\n' +
        '    if (options.progress) {\n' +
        '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Progress", data);\n' +
        '  },\n' +
        '  "still-ok": function stillOk() {\n' +
        '    log.info("Nothing changed.");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("StillOk");\n' +
        '  },\n' +
        '  ok: function ok() {\n' +
        '    sendMessage("Ok");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        "  // TODO: remove in v5 in favor of 'static-changed'\n" +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "content-changed": function contentChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "static-changed": function staticChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} warnings\n' +
        '   * @param {any} params\n' +
        '   */\n' +
        '  warnings: function warnings(_warnings, params) {\n' +
        '    log.warn("Warnings while compiling.");\n' +
        '\n' +
        '    var printableWarnings = _warnings.map(function (error) {\n' +
        '      var _formatProblem = formatProblem("warning", error),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Warnings", printableWarnings);\n' +
        '\n' +
        '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
        '      log.warn(printableWarnings[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
        '\n' +
        '    if (needShowOverlayForWarnings) {\n' +
        '      show("warning", _warnings);\n' +
        '    }\n' +
        '\n' +
        '    if (params && params.preventReloading) {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} errors\n' +
        '   */\n' +
        '  errors: function errors(_errors) {\n' +
        '    log.error("Errors while compiling. Reload prevented.");\n' +
        '\n' +
        '    var printableErrors = _errors.map(function (error) {\n' +
        '      var _formatProblem2 = formatProblem("error", error),\n' +
        '          header = _formatProblem2.header,\n' +
        '          body = _formatProblem2.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Errors", printableErrors);\n' +
        '\n' +
        '    for (var i = 0; i < printableErrors.length; i++) {\n' +
        '      log.error(printableErrors[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
        '\n' +
        '    if (needShowOverlayForErrors) {\n' +
        '      show("error", _errors);\n' +
        '    }\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error} error\n' +
        '   */\n' +
        '  error: function error(_error) {\n' +
        '    log.error(_error);\n' +
        '  },\n' +
        '  close: function close() {\n' +
        '    log.info("Disconnected!");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Close");\n' +
        '  }\n' +
        '};\n' +
        'var socketURL = createSocketURL(parsedResourceQuery);\n' +
        'socket(socketURL, onSocketMessage, options.reconnect);',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency]
    ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1001,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [
      [HarmonyCompatibilityDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency]
    ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    rawRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js',
      request: undefined,
      query: '?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/index.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/index.js',
      __innerRequest: './client/index.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __resourceQuery, __webpack_hash__ */\n' +
        '/// <reference types="webpack/module" />\n' +
        'import webpackHotLog from "webpack/hot/log.js";\n' +
        'import stripAnsi from "./modules/strip-ansi/index.js";\n' +
        'import parseURL from "./utils/parseURL.js";\n' +
        'import socket from "./socket.js";\n' +
        'import { formatProblem, show, hide } from "./overlay.js";\n' +
        'import { log, setLogLevel } from "./utils/log.js";\n' +
        'import sendMessage from "./utils/sendMessage.js";\n' +
        'import reloadApp from "./utils/reloadApp.js";\n' +
        'import createSocketURL from "./utils/createSocketURL.js";\n' +
        '/**\n' +
        ' * @typedef {Object} Options\n' +
        ' * @property {boolean} hot\n' +
        ' * @property {boolean} liveReload\n' +
        ' * @property {boolean} progress\n' +
        ' * @property {boolean | { warnings?: boolean, errors?: boolean }} overlay\n' +
        ' * @property {string} [logging]\n' +
        ' * @property {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @typedef {Object} Status\n' +
        ' * @property {boolean} isUnloading\n' +
        ' * @property {string} currentHash\n' +
        ' * @property {string} [previousHash]\n' +
        ' */\n' +
        '\n' +
        '/**\n' +
        ' * @type {Status}\n' +
        ' */\n' +
        '\n' +
        'var status = {\n' +
        '  isUnloading: false,\n' +
        '  // TODO Workaround for webpack v4, `__webpack_hash__` is not replaced without HotModuleReplacement\n' +
        '  // eslint-disable-next-line camelcase\n' +
        '  currentHash: typeof __webpack_hash__ !== "undefined" ? __webpack_hash__ : ""\n' +
        '};\n' +
        '/** @type {Options} */\n' +
        '\n' +
        'var options = {\n' +
        '  hot: false,\n' +
        '  liveReload: false,\n' +
        '  progress: false,\n' +
        '  overlay: false\n' +
        '};\n' +
        'var parsedResourceQuery = parseURL(__resourceQuery);\n' +
        '\n' +
        'if (parsedResourceQuery.hot === "true") {\n' +
        '  options.hot = true;\n' +
        '  log.info("Hot Module Replacement enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery["live-reload"] === "true") {\n' +
        '  options.liveReload = true;\n' +
        '  log.info("Live Reloading enabled.");\n' +
        '}\n' +
        '\n' +
        'if (parsedResourceQuery.logging) {\n' +
        '  options.logging = parsedResourceQuery.logging;\n' +
        '}\n' +
        '\n' +
        'if (typeof parsedResourceQuery.reconnect !== "undefined") {\n' +
        '  options.reconnect = Number(parsedResourceQuery.reconnect);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} level\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function setAllLogLevel(level) {\n' +
        '  // This is needed because the HMR logger operate separately from dev server logger\n' +
        '  webpackHotLog.setLogLevel(level === "verbose" || level === "log" ? "info" : level);\n' +
        '  setLogLevel(level);\n' +
        '}\n' +
        '\n' +
        'if (options.logging) {\n' +
        '  setAllLogLevel(options.logging);\n' +
        '}\n' +
        '\n' +
        'self.addEventListener("beforeunload", function () {\n' +
        '  status.isUnloading = true;\n' +
        '});\n' +
        'var onSocketMessage = {\n' +
        '  hot: function hot() {\n' +
        '    if (parsedResourceQuery.hot === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.hot = true;\n' +
        '    log.info("Hot Module Replacement enabled.");\n' +
        '  },\n' +
        '  liveReload: function liveReload() {\n' +
        '    if (parsedResourceQuery["live-reload"] === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.liveReload = true;\n' +
        '    log.info("Live Reloading enabled.");\n' +
        '  },\n' +
        '  invalid: function invalid() {\n' +
        `    log.info("App updated. Recompiling..."); // Fixes #1042. overlay doesn't clear if errors are fixed but warnings remain.\n` +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Invalid");\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} hash\n' +
        '   */\n' +
        '  hash: function hash(_hash) {\n' +
        '    status.previousHash = status.currentHash;\n' +
        '    status.currentHash = _hash;\n' +
        '  },\n' +
        '  logging: setAllLogLevel,\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  overlay: function overlay(value) {\n' +
        '    if (typeof document === "undefined") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.overlay = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {number} value\n' +
        '   */\n' +
        '  reconnect: function reconnect(value) {\n' +
        '    if (parsedResourceQuery.reconnect === "false") {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    options.reconnect = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {boolean} value\n' +
        '   */\n' +
        '  progress: function progress(value) {\n' +
        '    options.progress = value;\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {{ pluginName?: string, percent: number, msg: string }} data\n' +
        '   */\n' +
        '  "progress-update": function progressUpdate(data) {\n' +
        '    if (options.progress) {\n' +
        '      log.info("".concat(data.pluginName ? "[".concat(data.pluginName, "] ") : "").concat(data.percent, "% - ").concat(data.msg, "."));\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Progress", data);\n' +
        '  },\n' +
        '  "still-ok": function stillOk() {\n' +
        '    log.info("Nothing changed.");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("StillOk");\n' +
        '  },\n' +
        '  ok: function ok() {\n' +
        '    sendMessage("Ok");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        "  // TODO: remove in v5 in favor of 'static-changed'\n" +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "content-changed": function contentChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {string} file\n' +
        '   */\n' +
        '  "static-changed": function staticChanged(file) {\n' +
        '    log.info("".concat(file ? "\\"".concat(file, "\\"") : "Content", " from static directory was changed. Reloading..."));\n' +
        '    self.location.reload();\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} warnings\n' +
        '   * @param {any} params\n' +
        '   */\n' +
        '  warnings: function warnings(_warnings, params) {\n' +
        '    log.warn("Warnings while compiling.");\n' +
        '\n' +
        '    var printableWarnings = _warnings.map(function (error) {\n' +
        '      var _formatProblem = formatProblem("warning", error),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Warnings", printableWarnings);\n' +
        '\n' +
        '    for (var i = 0; i < printableWarnings.length; i++) {\n' +
        '      log.warn(printableWarnings[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForWarnings = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.warnings;\n' +
        '\n' +
        '    if (needShowOverlayForWarnings) {\n' +
        '      show("warning", _warnings);\n' +
        '    }\n' +
        '\n' +
        '    if (params && params.preventReloading) {\n' +
        '      return;\n' +
        '    }\n' +
        '\n' +
        '    reloadApp(options, status);\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error[]} errors\n' +
        '   */\n' +
        '  errors: function errors(_errors) {\n' +
        '    log.error("Errors while compiling. Reload prevented.");\n' +
        '\n' +
        '    var printableErrors = _errors.map(function (error) {\n' +
        '      var _formatProblem2 = formatProblem("error", error),\n' +
        '          header = _formatProblem2.header,\n' +
        '          body = _formatProblem2.body;\n' +
        '\n' +
        '      return "".concat(header, "\\n").concat(stripAnsi(body));\n' +
        '    });\n' +
        '\n' +
        '    sendMessage("Errors", printableErrors);\n' +
        '\n' +
        '    for (var i = 0; i < printableErrors.length; i++) {\n' +
        '      log.error(printableErrors[i]);\n' +
        '    }\n' +
        '\n' +
        '    var needShowOverlayForErrors = typeof options.overlay === "boolean" ? options.overlay : options.overlay && options.overlay.errors;\n' +
        '\n' +
        '    if (needShowOverlayForErrors) {\n' +
        '      show("error", _errors);\n' +
        '    }\n' +
        '  },\n' +
        '\n' +
        '  /**\n' +
        '   * @param {Error} error\n' +
        '   */\n' +
        '  error: function error(_error) {\n' +
        '    log.error(_error);\n' +
        '  },\n' +
        '  close: function close() {\n' +
        '    log.info("Disconnected!");\n' +
        '\n' +
        '    if (options.overlay) {\n' +
        '      hide();\n' +
        '    }\n' +
        '\n' +
        '    sendMessage("Close");\n' +
        '  }\n' +
        '};\n' +
        'var socketURL = createSocketURL(parsedResourceQuery);\n' +
        'socket(socketURL, onSocketMessage, options.reconnect);',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 5,
      _statTestedSnapshotsCached: 0,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 101,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 6,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  },
  lastHarmonyImportOrder: 8
}
source :  ./header/header.js
 parser.state :  {
  source: 'import "./header/header.js";',
  current: NormalModule {
    dependencies: [],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/src/appson',
    layer: null,
    needId: true,
    debugId: 1002,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: [LazySet],
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/src/appson/appson.js',
    rawRequest: './src/appson/appson.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: undefined,
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/src/appson/appson.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/src/appson/appson.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder',
      relativePath: './src/appson/appson.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './src/appson/appson.js',
      __innerRequest: './src/appson/appson.js'
    },
    matchResource: undefined,
    loaders: [ [Object] ],
    error: null,
    _source: SourceMapSource {
      _valueAsString: 'import "./header/header.js";',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!./src/appson/appson.js',
      _hasSourceMap: true,
      _sourceMapAsObject: [Object],
      _sourceMapAsString: undefined,
      _sourceMapAsBuffer: undefined,
      _hasOriginalSource: false,
      _originalSourceAsString: undefined,
      _originalSourceAsBuffer: undefined,
      _hasInnerSourceMap: false,
      _innerSourceMapAsObject: undefined,
      _innerSourceMapAsString: undefined,
      _innerSourceMapAsBuffer: undefined,
      _removeOriginalSource: undefined
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/src/appson',
    layer: null,
    needId: true,
    debugId: 1002,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: [LazySet],
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/src/appson/appson.js',
    rawRequest: './src/appson/appson.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: undefined,
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/src/appson/appson.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/src/appson/appson.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder',
      relativePath: './src/appson/appson.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './src/appson/appson.js',
      __innerRequest: './src/appson/appson.js'
    },
    matchResource: undefined,
    loaders: [ [Object] ],
    error: null,
    _source: SourceMapSource {
      _valueAsString: 'import "./header/header.js";',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!./src/appson/appson.js',
      _hasSourceMap: true,
      _sourceMapAsObject: [Object],
      _sourceMapAsString: undefined,
      _sourceMapAsBuffer: undefined,
      _hasOriginalSource: false,
      _originalSourceAsString: undefined,
      _originalSourceAsBuffer: undefined,
      _hasInnerSourceMap: false,
      _innerSourceMapAsObject: undefined,
      _innerSourceMapAsString: undefined,
      _innerSourceMapAsBuffer: undefined,
      _removeOriginalSource: undefined
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 11,
      _statTestedSnapshotsCached: 0,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 102,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 12,
      _willEnsureProcessing: true,
      _needProcessing: true,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log-apply-result.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  }
}
source :  ./clients/WebSocketClient.js
 parser.state :  {
  source: '/* global __webpack_dev_server_client__ */\n' +
    'import WebSocketClient from "./clients/WebSocketClient.js";\n' +
    'import { log } from "./utils/log.js"; // this WebsocketClient is here as a default fallback, in case the client is not injected\n' +
    '\n' +
    '/* eslint-disable camelcase */\n' +
    '\n' +
    'var Client = // eslint-disable-next-line no-nested-ternary\n' +
    'typeof __webpack_dev_server_client__ !== "undefined" ? typeof __webpack_dev_server_client__.default !== "undefined" ? __webpack_dev_server_client__.default : __webpack_dev_server_client__ : WebSocketClient;\n' +
    '/* eslint-enable camelcase */\n' +
    '\n' +
    'var retries = 0;\n' +
    'var maxRetries = 10;\n' +
    'var client = null;\n' +
    '/**\n' +
    ' * @param {string} url\n' +
    ' * @param {{ [handler: string]: (data?: any, params?: any) => any }} handlers\n' +
    ' * @param {number} [reconnect]\n' +
    ' */\n' +
    '\n' +
    'var socket = function initSocket(url, handlers, reconnect) {\n' +
    '  client = new Client(url);\n' +
    '  client.onOpen(function () {\n' +
    '    retries = 0;\n' +
    '\n' +
    '    if (typeof reconnect !== "undefined") {\n' +
    '      maxRetries = reconnect;\n' +
    '    }\n' +
    '  });\n' +
    '  client.onClose(function () {\n' +
    '    if (retries === 0) {\n' +
    '      handlers.close();\n' +
    '    } // Try to reconnect.\n' +
    '\n' +
    '\n' +
    '    client = null; // After 10 retries stop trying, to prevent logspam.\n' +
    '\n' +
    '    if (retries < maxRetries) {\n' +
    '      // Exponentially increase timeout to reconnect.\n' +
    '      // Respectfully copied from the package `got`.\n' +
    '      // eslint-disable-next-line no-restricted-properties\n' +
    '      var retryInMs = 1000 * Math.pow(2, retries) + Math.random() * 100;\n' +
    '      retries += 1;\n' +
    '      log.info("Trying to reconnect...");\n' +
    '      setTimeout(function () {\n' +
    '        socket(url, handlers, reconnect);\n' +
    '      }, retryInMs);\n' +
    '    }\n' +
    '  });\n' +
    '  client.onMessage(\n' +
    '  /**\n' +
    '   * @param {any} data\n' +
    '   */\n' +
    '  function (data) {\n' +
    '    var message = JSON.parse(data);\n' +
    '\n' +
    '    if (handlers[message.type]) {\n' +
    '      handlers[message.type](message.data, message.params);\n' +
    '    }\n' +
    '  });\n' +
    '};\n' +
    '\n' +
    'export default socket;',
  current: NormalModule {
    dependencies: [],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1005,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js',
    rawRequest: './socket.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: undefined,
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/socket.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/socket.js',
      __innerRequest: './client/socket.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __webpack_dev_server_client__ */\n' +
        'import WebSocketClient from "./clients/WebSocketClient.js";\n' +
        'import { log } from "./utils/log.js"; // this WebsocketClient is here as a default fallback, in case the client is not injected\n' +
        '\n' +
        '/* eslint-disable camelcase */\n' +
        '\n' +
        'var Client = // eslint-disable-next-line no-nested-ternary\n' +
        'typeof __webpack_dev_server_client__ !== "undefined" ? typeof __webpack_dev_server_client__.default !== "undefined" ? __webpack_dev_server_client__.default : __webpack_dev_server_client__ : WebSocketClient;\n' +
        '/* eslint-enable camelcase */\n' +
        '\n' +
        'var retries = 0;\n' +
        'var maxRetries = 10;\n' +
        'var client = null;\n' +
        '/**\n' +
        ' * @param {string} url\n' +
        ' * @param {{ [handler: string]: (data?: any, params?: any) => any }} handlers\n' +
        ' * @param {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        'var socket = function initSocket(url, handlers, reconnect) {\n' +
        '  client = new Client(url);\n' +
        '  client.onOpen(function () {\n' +
        '    retries = 0;\n' +
        '\n' +
        '    if (typeof reconnect !== "undefined") {\n' +
        '      maxRetries = reconnect;\n' +
        '    }\n' +
        '  });\n' +
        '  client.onClose(function () {\n' +
        '    if (retries === 0) {\n' +
        '      handlers.close();\n' +
        '    } // Try to reconnect.\n' +
        '\n' +
        '\n' +
        '    client = null; // After 10 retries stop trying, to prevent logspam.\n' +
        '\n' +
        '    if (retries < maxRetries) {\n' +
        '      // Exponentially increase timeout to reconnect.\n' +
        '      // Respectfully copied from the package `got`.\n' +
        '      // eslint-disable-next-line no-restricted-properties\n' +
        '      var retryInMs = 1000 * Math.pow(2, retries) + Math.random() * 100;\n' +
        '      retries += 1;\n' +
        '      log.info("Trying to reconnect...");\n' +
        '      setTimeout(function () {\n' +
        '        socket(url, handlers, reconnect);\n' +
        '      }, retryInMs);\n' +
        '    }\n' +
        '  });\n' +
        '  client.onMessage(\n' +
        '  /**\n' +
        '   * @param {any} data\n' +
        '   */\n' +
        '  function (data) {\n' +
        '    var message = JSON.parse(data);\n' +
        '\n' +
        '    if (handlers[message.type]) {\n' +
        '      handlers[message.type](message.data, message.params);\n' +
        '    }\n' +
        '  });\n' +
        '};\n' +
        '\n' +
        'export default socket;',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/socket.js'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1005,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js',
    rawRequest: './socket.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: undefined,
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/socket.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/socket.js',
      __innerRequest: './client/socket.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __webpack_dev_server_client__ */\n' +
        'import WebSocketClient from "./clients/WebSocketClient.js";\n' +
        'import { log } from "./utils/log.js"; // this WebsocketClient is here as a default fallback, in case the client is not injected\n' +
        '\n' +
        '/* eslint-disable camelcase */\n' +
        '\n' +
        'var Client = // eslint-disable-next-line no-nested-ternary\n' +
        'typeof __webpack_dev_server_client__ !== "undefined" ? typeof __webpack_dev_server_client__.default !== "undefined" ? __webpack_dev_server_client__.default : __webpack_dev_server_client__ : WebSocketClient;\n' +
        '/* eslint-enable camelcase */\n' +
        '\n' +
        'var retries = 0;\n' +
        'var maxRetries = 10;\n' +
        'var client = null;\n' +
        '/**\n' +
        ' * @param {string} url\n' +
        ' * @param {{ [handler: string]: (data?: any, params?: any) => any }} handlers\n' +
        ' * @param {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        'var socket = function initSocket(url, handlers, reconnect) {\n' +
        '  client = new Client(url);\n' +
        '  client.onOpen(function () {\n' +
        '    retries = 0;\n' +
        '\n' +
        '    if (typeof reconnect !== "undefined") {\n' +
        '      maxRetries = reconnect;\n' +
        '    }\n' +
        '  });\n' +
        '  client.onClose(function () {\n' +
        '    if (retries === 0) {\n' +
        '      handlers.close();\n' +
        '    } // Try to reconnect.\n' +
        '\n' +
        '\n' +
        '    client = null; // After 10 retries stop trying, to prevent logspam.\n' +
        '\n' +
        '    if (retries < maxRetries) {\n' +
        '      // Exponentially increase timeout to reconnect.\n' +
        '      // Respectfully copied from the package `got`.\n' +
        '      // eslint-disable-next-line no-restricted-properties\n' +
        '      var retryInMs = 1000 * Math.pow(2, retries) + Math.random() * 100;\n' +
        '      retries += 1;\n' +
        '      log.info("Trying to reconnect...");\n' +
        '      setTimeout(function () {\n' +
        '        socket(url, handlers, reconnect);\n' +
        '      }, retryInMs);\n' +
        '    }\n' +
        '  });\n' +
        '  client.onMessage(\n' +
        '  /**\n' +
        '   * @param {any} data\n' +
        '   */\n' +
        '  function (data) {\n' +
        '    var message = JSON.parse(data);\n' +
        '\n' +
        '    if (handlers[message.type]) {\n' +
        '      handlers[message.type](message.data, message.params);\n' +
        '    }\n' +
        '  });\n' +
        '};\n' +
        '\n' +
        'export default socket;',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/socket.js'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 20,
      _statTestedSnapshotsCached: 0,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 103,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 14,
      _willEnsureProcessing: true,
      _needProcessing: true,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log-apply-result.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/emitter.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/sendMessage.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/createSocketURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/strip-ansi/index.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  }
}
source :  ./utils/log.js
 parser.state :  {
  source: '/* global __webpack_dev_server_client__ */\n' +
    'import WebSocketClient from "./clients/WebSocketClient.js";\n' +
    'import { log } from "./utils/log.js"; // this WebsocketClient is here as a default fallback, in case the client is not injected\n' +
    '\n' +
    '/* eslint-disable camelcase */\n' +
    '\n' +
    'var Client = // eslint-disable-next-line no-nested-ternary\n' +
    'typeof __webpack_dev_server_client__ !== "undefined" ? typeof __webpack_dev_server_client__.default !== "undefined" ? __webpack_dev_server_client__.default : __webpack_dev_server_client__ : WebSocketClient;\n' +
    '/* eslint-enable camelcase */\n' +
    '\n' +
    'var retries = 0;\n' +
    'var maxRetries = 10;\n' +
    'var client = null;\n' +
    '/**\n' +
    ' * @param {string} url\n' +
    ' * @param {{ [handler: string]: (data?: any, params?: any) => any }} handlers\n' +
    ' * @param {number} [reconnect]\n' +
    ' */\n' +
    '\n' +
    'var socket = function initSocket(url, handlers, reconnect) {\n' +
    '  client = new Client(url);\n' +
    '  client.onOpen(function () {\n' +
    '    retries = 0;\n' +
    '\n' +
    '    if (typeof reconnect !== "undefined") {\n' +
    '      maxRetries = reconnect;\n' +
    '    }\n' +
    '  });\n' +
    '  client.onClose(function () {\n' +
    '    if (retries === 0) {\n' +
    '      handlers.close();\n' +
    '    } // Try to reconnect.\n' +
    '\n' +
    '\n' +
    '    client = null; // After 10 retries stop trying, to prevent logspam.\n' +
    '\n' +
    '    if (retries < maxRetries) {\n' +
    '      // Exponentially increase timeout to reconnect.\n' +
    '      // Respectfully copied from the package `got`.\n' +
    '      // eslint-disable-next-line no-restricted-properties\n' +
    '      var retryInMs = 1000 * Math.pow(2, retries) + Math.random() * 100;\n' +
    '      retries += 1;\n' +
    '      log.info("Trying to reconnect...");\n' +
    '      setTimeout(function () {\n' +
    '        socket(url, handlers, reconnect);\n' +
    '      }, retryInMs);\n' +
    '    }\n' +
    '  });\n' +
    '  client.onMessage(\n' +
    '  /**\n' +
    '   * @param {any} data\n' +
    '   */\n' +
    '  function (data) {\n' +
    '    var message = JSON.parse(data);\n' +
    '\n' +
    '    if (handlers[message.type]) {\n' +
    '      handlers[message.type](message.data, message.params);\n' +
    '    }\n' +
    '  });\n' +
    '};\n' +
    '\n' +
    'export default socket;',
  current: NormalModule {
    dependencies: [ [HarmonyImportSideEffectDependency] ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1005,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency], [ConstDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js',
    rawRequest: './socket.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/socket.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/socket.js',
      __innerRequest: './client/socket.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __webpack_dev_server_client__ */\n' +
        'import WebSocketClient from "./clients/WebSocketClient.js";\n' +
        'import { log } from "./utils/log.js"; // this WebsocketClient is here as a default fallback, in case the client is not injected\n' +
        '\n' +
        '/* eslint-disable camelcase */\n' +
        '\n' +
        'var Client = // eslint-disable-next-line no-nested-ternary\n' +
        'typeof __webpack_dev_server_client__ !== "undefined" ? typeof __webpack_dev_server_client__.default !== "undefined" ? __webpack_dev_server_client__.default : __webpack_dev_server_client__ : WebSocketClient;\n' +
        '/* eslint-enable camelcase */\n' +
        '\n' +
        'var retries = 0;\n' +
        'var maxRetries = 10;\n' +
        'var client = null;\n' +
        '/**\n' +
        ' * @param {string} url\n' +
        ' * @param {{ [handler: string]: (data?: any, params?: any) => any }} handlers\n' +
        ' * @param {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        'var socket = function initSocket(url, handlers, reconnect) {\n' +
        '  client = new Client(url);\n' +
        '  client.onOpen(function () {\n' +
        '    retries = 0;\n' +
        '\n' +
        '    if (typeof reconnect !== "undefined") {\n' +
        '      maxRetries = reconnect;\n' +
        '    }\n' +
        '  });\n' +
        '  client.onClose(function () {\n' +
        '    if (retries === 0) {\n' +
        '      handlers.close();\n' +
        '    } // Try to reconnect.\n' +
        '\n' +
        '\n' +
        '    client = null; // After 10 retries stop trying, to prevent logspam.\n' +
        '\n' +
        '    if (retries < maxRetries) {\n' +
        '      // Exponentially increase timeout to reconnect.\n' +
        '      // Respectfully copied from the package `got`.\n' +
        '      // eslint-disable-next-line no-restricted-properties\n' +
        '      var retryInMs = 1000 * Math.pow(2, retries) + Math.random() * 100;\n' +
        '      retries += 1;\n' +
        '      log.info("Trying to reconnect...");\n' +
        '      setTimeout(function () {\n' +
        '        socket(url, handlers, reconnect);\n' +
        '      }, retryInMs);\n' +
        '    }\n' +
        '  });\n' +
        '  client.onMessage(\n' +
        '  /**\n' +
        '   * @param {any} data\n' +
        '   */\n' +
        '  function (data) {\n' +
        '    var message = JSON.parse(data);\n' +
        '\n' +
        '    if (handlers[message.type]) {\n' +
        '      handlers[message.type](message.data, message.params);\n' +
        '    }\n' +
        '  });\n' +
        '};\n' +
        '\n' +
        'export default socket;',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/socket.js'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [ [HarmonyImportSideEffectDependency] ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1005,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency], [ConstDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js',
    rawRequest: './socket.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/socket.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/socket.js',
      __innerRequest: './client/socket.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '/* global __webpack_dev_server_client__ */\n' +
        'import WebSocketClient from "./clients/WebSocketClient.js";\n' +
        'import { log } from "./utils/log.js"; // this WebsocketClient is here as a default fallback, in case the client is not injected\n' +
        '\n' +
        '/* eslint-disable camelcase */\n' +
        '\n' +
        'var Client = // eslint-disable-next-line no-nested-ternary\n' +
        'typeof __webpack_dev_server_client__ !== "undefined" ? typeof __webpack_dev_server_client__.default !== "undefined" ? __webpack_dev_server_client__.default : __webpack_dev_server_client__ : WebSocketClient;\n' +
        '/* eslint-enable camelcase */\n' +
        '\n' +
        'var retries = 0;\n' +
        'var maxRetries = 10;\n' +
        'var client = null;\n' +
        '/**\n' +
        ' * @param {string} url\n' +
        ' * @param {{ [handler: string]: (data?: any, params?: any) => any }} handlers\n' +
        ' * @param {number} [reconnect]\n' +
        ' */\n' +
        '\n' +
        'var socket = function initSocket(url, handlers, reconnect) {\n' +
        '  client = new Client(url);\n' +
        '  client.onOpen(function () {\n' +
        '    retries = 0;\n' +
        '\n' +
        '    if (typeof reconnect !== "undefined") {\n' +
        '      maxRetries = reconnect;\n' +
        '    }\n' +
        '  });\n' +
        '  client.onClose(function () {\n' +
        '    if (retries === 0) {\n' +
        '      handlers.close();\n' +
        '    } // Try to reconnect.\n' +
        '\n' +
        '\n' +
        '    client = null; // After 10 retries stop trying, to prevent logspam.\n' +
        '\n' +
        '    if (retries < maxRetries) {\n' +
        '      // Exponentially increase timeout to reconnect.\n' +
        '      // Respectfully copied from the package `got`.\n' +
        '      // eslint-disable-next-line no-restricted-properties\n' +
        '      var retryInMs = 1000 * Math.pow(2, retries) + Math.random() * 100;\n' +
        '      retries += 1;\n' +
        '      log.info("Trying to reconnect...");\n' +
        '      setTimeout(function () {\n' +
        '        socket(url, handlers, reconnect);\n' +
        '      }, retryInMs);\n' +
        '    }\n' +
        '  });\n' +
        '  client.onMessage(\n' +
        '  /**\n' +
        '   * @param {any} data\n' +
        '   */\n' +
        '  function (data) {\n' +
        '    var message = JSON.parse(data);\n' +
        '\n' +
        '    if (handlers[message.type]) {\n' +
        '      handlers[message.type](message.data, message.params);\n' +
        '    }\n' +
        '  });\n' +
        '};\n' +
        '\n' +
        'export default socket;',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/socket.js'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 20,
      _statTestedSnapshotsCached: 0,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 103,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 14,
      _willEnsureProcessing: true,
      _needProcessing: true,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log-apply-result.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/emitter.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/sendMessage.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/createSocketURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/strip-ansi/index.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  },
  lastHarmonyImportOrder: 1
}
source :  ansi-html-community
 parser.state :  {
  source: '// The error overlay is inspired (and mostly copied) from Create React App (https://github.com/facebookincubator/create-react-app)\n' +
    '// They, in turn, got inspired by webpack-hot-middleware (https://github.com/glenjamin/webpack-hot-middleware).\n' +
    'import ansiHTML from "ansi-html-community";\n' +
    'import { encode } from "html-entities";\n' +
    'var colors = {\n' +
    '  reset: ["transparent", "transparent"],\n' +
    '  black: "181818",\n' +
    '  red: "E36049",\n' +
    '  green: "B3CB74",\n' +
    '  yellow: "FFD080",\n' +
    '  blue: "7CAFC2",\n' +
    '  magenta: "7FACCA",\n' +
    '  cyan: "C3C2EF",\n' +
    '  lightgrey: "EBE7E3",\n' +
    '  darkgrey: "6D7891"\n' +
    '};\n' +
    '/** @type {HTMLIFrameElement | null | undefined} */\n' +
    '\n' +
    'var iframeContainerElement;\n' +
    '/** @type {HTMLDivElement | null | undefined} */\n' +
    '\n' +
    'var containerElement;\n' +
    '/** @type {Array<(element: HTMLDivElement) => void>} */\n' +
    '\n' +
    'var onLoadQueue = [];\n' +
    'ansiHTML.setColors(colors);\n' +
    '\n' +
    'function createContainer() {\n' +
    '  iframeContainerElement = document.createElement("iframe");\n' +
    '  iframeContainerElement.id = "webpack-dev-server-client-overlay";\n' +
    '  iframeContainerElement.src = "about:blank";\n' +
    '  iframeContainerElement.style.position = "fixed";\n' +
    '  iframeContainerElement.style.left = 0;\n' +
    '  iframeContainerElement.style.top = 0;\n' +
    '  iframeContainerElement.style.right = 0;\n' +
    '  iframeContainerElement.style.bottom = 0;\n' +
    '  iframeContainerElement.style.width = "100vw";\n' +
    '  iframeContainerElement.style.height = "100vh";\n' +
    '  iframeContainerElement.style.border = "none";\n' +
    '  iframeContainerElement.style.zIndex = 9999999999;\n' +
    '\n' +
    '  iframeContainerElement.onload = function () {\n' +
    '    containerElement =\n' +
    '    /** @type {Document} */\n' +
    '\n' +
    '    /** @type {HTMLIFrameElement} */\n' +
    '    iframeContainerElement.contentDocument.createElement("div");\n' +
    '    containerElement.id = "webpack-dev-server-client-overlay-div";\n' +
    '    containerElement.style.position = "fixed";\n' +
    '    containerElement.style.boxSizing = "border-box";\n' +
    '    containerElement.style.left = 0;\n' +
    '    containerElement.style.top = 0;\n' +
    '    containerElement.style.right = 0;\n' +
    '    containerElement.style.bottom = 0;\n' +
    '    containerElement.style.width = "100vw";\n' +
    '    containerElement.style.height = "100vh";\n' +
    '    containerElement.style.backgroundColor = "rgba(0, 0, 0, 0.85)";\n' +
    '    containerElement.style.color = "#E8E8E8";\n' +
    '    containerElement.style.fontFamily = "Menlo, Consolas, monospace";\n' +
    '    containerElement.style.fontSize = "large";\n' +
    '    containerElement.style.padding = "2rem";\n' +
    '    containerElement.style.lineHeight = "1.2";\n' +
    '    containerElement.style.whiteSpace = "pre-wrap";\n' +
    '    containerElement.style.overflow = "auto";\n' +
    '    var headerElement = document.createElement("span");\n' +
    '    headerElement.innerText = "Compiled with problems:";\n' +
    '    var closeButtonElement = document.createElement("button");\n' +
    '    closeButtonElement.innerText = "X";\n' +
    '    closeButtonElement.style.background = "transparent";\n' +
    '    closeButtonElement.style.border = "none";\n' +
    '    closeButtonElement.style.fontSize = "20px";\n' +
    '    closeButtonElement.style.fontWeight = "bold";\n' +
    '    closeButtonElement.style.color = "white";\n' +
    '    closeButtonElement.style.cursor = "pointer";\n' +
    '    closeButtonElement.style.cssFloat = "right"; // @ts-ignore\n' +
    '\n' +
    '    closeButtonElement.style.styleFloat = "right";\n' +
    '    closeButtonElement.addEventListener("click", function () {\n' +
    '      hide();\n' +
    '    });\n' +
    '    containerElement.appendChild(headerElement);\n' +
    '    containerElement.appendChild(closeButtonElement);\n' +
    '    containerElement.appendChild(document.createElement("br"));\n' +
    '    containerElement.appendChild(document.createElement("br"));\n' +
    '    /** @type {Document} */\n' +
    '\n' +
    '    /** @type {HTMLIFrameElement} */\n' +
    '    iframeContainerElement.contentDocument.body.appendChild(containerElement);\n' +
    '    onLoadQueue.forEach(function (onLoad) {\n' +
    '      onLoad(\n' +
    '      /** @type {HTMLDivElement} */\n' +
    '      containerElement);\n' +
    '    });\n' +
    '    onLoadQueue = [];\n' +
    '    /** @type {HTMLIFrameElement} */\n' +
    '\n' +
    '    iframeContainerElement.onload = null;\n' +
    '  };\n' +
    '\n' +
    '  document.body.appendChild(iframeContainerElement);\n' +
    '}\n' +
    '/**\n' +
    ' * @param {(element: HTMLDivElement) => void} callback\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function ensureOverlayExists(callback) {\n' +
    '  if (containerElement) {\n' +
    '    // Everything is ready, call the callback right away.\n' +
    '    callback(containerElement);\n' +
    '    return;\n' +
    '  }\n' +
    '\n' +
    '  onLoadQueue.push(callback);\n' +
    '\n' +
    '  if (iframeContainerElement) {\n' +
    '    return;\n' +
    '  }\n' +
    '\n' +
    '  createContainer();\n' +
    '} // Successful compilation.\n' +
    '\n' +
    '\n' +
    'function hide() {\n' +
    '  if (!iframeContainerElement) {\n' +
    '    return;\n' +
    '  } // Clean up and reset internal state.\n' +
    '\n' +
    '\n' +
    '  document.body.removeChild(iframeContainerElement);\n' +
    '  iframeContainerElement = null;\n' +
    '  containerElement = null;\n' +
    '}\n' +
    '/**\n' +
    ' * @param {string} type\n' +
    ' * @param {string  | { file?: string, moduleName?: string, loc?: string, message?: string }} item\n' +
    ' * @returns {{ header: string, body: string }}\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function formatProblem(type, item) {\n' +
    '  var header = type === "warning" ? "WARNING" : "ERROR";\n' +
    '  var body = "";\n' +
    '\n' +
    '  if (typeof item === "string") {\n' +
    '    body += item;\n' +
    '  } else {\n' +
    '    var file = item.file || ""; // eslint-disable-next-line no-nested-ternary\n' +
    '\n' +
    '    var moduleName = item.moduleName ? item.moduleName.indexOf("!") !== -1 ? "".concat(item.moduleName.replace(/^(\\s|\\S)*!/, ""), " (").concat(item.moduleName, ")") : "".concat(item.moduleName) : "";\n' +
    '    var loc = item.loc;\n' +
    '    header += "".concat(moduleName || file ? " in ".concat(moduleName ? "".concat(moduleName).concat(file ? " (".concat(file, ")") : "") : file).concat(loc ? " ".concat(loc) : "") : "");\n' +
    '    body += item.message || "";\n' +
    '  }\n' +
    '\n' +
    '  return {\n' +
    '    header: header,\n' +
    '    body: body\n' +
    '  };\n' +
    '} // Compilation with errors (e.g. syntax error or missing modules).\n' +
    '\n' +
    '/**\n' +
    ' * @param {string} type\n' +
    ' * @param {Array<string  | { file?: string, moduleName?: string, loc?: string, message?: string }>} messages\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function show(type, messages) {\n' +
    '  ensureOverlayExists(function () {\n' +
    '    messages.forEach(function (message) {\n' +
    '      var entryElement = document.createElement("div");\n' +
    '      var typeElement = document.createElement("span");\n' +
    '\n' +
    '      var _formatProblem = formatProblem(type, message),\n' +
    '          header = _formatProblem.header,\n' +
    '          body = _formatProblem.body;\n' +
    '\n' +
    '      typeElement.innerText = header;\n' +
    '      typeElement.style.color = "#".concat(colors.red); // Make it look similar to our terminal.\n' +
    '\n' +
    '      var text = ansiHTML(encode(body));\n' +
    '      var messageTextNode = document.createElement("div");\n' +
    '      messageTextNode.innerHTML = text;\n' +
    '      entryElement.appendChild(typeElement);\n' +
    '      entryElement.appendChild(document.createElement("br"));\n' +
    '      entryElement.appendChild(document.createElement("br"));\n' +
    '      entryElement.appendChild(messageTextNode);\n' +
    '      entryElement.appendChild(document.createElement("br"));\n' +
    '      entryElement.appendChild(document.createElement("br"));\n' +
    '      /** @type {HTMLDivElement} */\n' +
    '\n' +
    '      containerElement.appendChild(entryElement);\n' +
    '    });\n' +
    '  });\n' +
    '}\n' +
    '\n' +
    'export { formatProblem, show, hide };',
  current: NormalModule {
    dependencies: [],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1006,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js',
    rawRequest: './overlay.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: undefined,
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/overlay.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/overlay.js',
      __innerRequest: './client/overlay.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '// The error overlay is inspired (and mostly copied) from Create React App (https://github.com/facebookincubator/create-react-app)\n' +
        '// They, in turn, got inspired by webpack-hot-middleware (https://github.com/glenjamin/webpack-hot-middleware).\n' +
        'import ansiHTML from "ansi-html-community";\n' +
        'import { encode } from "html-entities";\n' +
        'var colors = {\n' +
        '  reset: ["transparent", "transparent"],\n' +
        '  black: "181818",\n' +
        '  red: "E36049",\n' +
        '  green: "B3CB74",\n' +
        '  yellow: "FFD080",\n' +
        '  blue: "7CAFC2",\n' +
        '  magenta: "7FACCA",\n' +
        '  cyan: "C3C2EF",\n' +
        '  lightgrey: "EBE7E3",\n' +
        '  darkgrey: "6D7891"\n' +
        '};\n' +
        '/** @type {HTMLIFrameElement | null | undefined} */\n' +
        '\n' +
        'var iframeContainerElement;\n' +
        '/** @type {HTMLDivElement | null | undefined} */\n' +
        '\n' +
        'var containerElement;\n' +
        '/** @type {Array<(element: HTMLDivElement) => void>} */\n' +
        '\n' +
        'var onLoadQueue = [];\n' +
        'ansiHTML.setColors(colors);\n' +
        '\n' +
        'function createContainer() {\n' +
        '  iframeContainerElement = document.createElement("iframe");\n' +
        '  iframeContainerElement.id = "webpack-dev-server-client-overlay";\n' +
        '  iframeContainerElement.src = "about:blank";\n' +
        '  iframeContainerElement.style.position = "fixed";\n' +
        '  iframeContainerElement.style.left = 0;\n' +
        '  iframeContainerElement.style.top = 0;\n' +
        '  iframeContainerElement.style.right = 0;\n' +
        '  iframeContainerElement.style.bottom = 0;\n' +
        '  iframeContainerElement.style.width = "100vw";\n' +
        '  iframeContainerElement.style.height = "100vh";\n' +
        '  iframeContainerElement.style.border = "none";\n' +
        '  iframeContainerElement.style.zIndex = 9999999999;\n' +
        '\n' +
        '  iframeContainerElement.onload = function () {\n' +
        '    containerElement =\n' +
        '    /** @type {Document} */\n' +
        '\n' +
        '    /** @type {HTMLIFrameElement} */\n' +
        '    iframeContainerElement.contentDocument.createElement("div");\n' +
        '    containerElement.id = "webpack-dev-server-client-overlay-div";\n' +
        '    containerElement.style.position = "fixed";\n' +
        '    containerElement.style.boxSizing = "border-box";\n' +
        '    containerElement.style.left = 0;\n' +
        '    containerElement.style.top = 0;\n' +
        '    containerElement.style.right = 0;\n' +
        '    containerElement.style.bottom = 0;\n' +
        '    containerElement.style.width = "100vw";\n' +
        '    containerElement.style.height = "100vh";\n' +
        '    containerElement.style.backgroundColor = "rgba(0, 0, 0, 0.85)";\n' +
        '    containerElement.style.color = "#E8E8E8";\n' +
        '    containerElement.style.fontFamily = "Menlo, Consolas, monospace";\n' +
        '    containerElement.style.fontSize = "large";\n' +
        '    containerElement.style.padding = "2rem";\n' +
        '    containerElement.style.lineHeight = "1.2";\n' +
        '    containerElement.style.whiteSpace = "pre-wrap";\n' +
        '    containerElement.style.overflow = "auto";\n' +
        '    var headerElement = document.createElement("span");\n' +
        '    headerElement.innerText = "Compiled with problems:";\n' +
        '    var closeButtonElement = document.createElement("button");\n' +
        '    closeButtonElement.innerText = "X";\n' +
        '    closeButtonElement.style.background = "transparent";\n' +
        '    closeButtonElement.style.border = "none";\n' +
        '    closeButtonElement.style.fontSize = "20px";\n' +
        '    closeButtonElement.style.fontWeight = "bold";\n' +
        '    closeButtonElement.style.color = "white";\n' +
        '    closeButtonElement.style.cursor = "pointer";\n' +
        '    closeButtonElement.style.cssFloat = "right"; // @ts-ignore\n' +
        '\n' +
        '    closeButtonElement.style.styleFloat = "right";\n' +
        '    closeButtonElement.addEventListener("click", function () {\n' +
        '      hide();\n' +
        '    });\n' +
        '    containerElement.appendChild(headerElement);\n' +
        '    containerElement.appendChild(closeButtonElement);\n' +
        '    containerElement.appendChild(document.createElement("br"));\n' +
        '    containerElement.appendChild(document.createElement("br"));\n' +
        '    /** @type {Document} */\n' +
        '\n' +
        '    /** @type {HTMLIFrameElement} */\n' +
        '    iframeContainerElement.contentDocument.body.appendChild(containerElement);\n' +
        '    onLoadQueue.forEach(function (onLoad) {\n' +
        '      onLoad(\n' +
        '      /** @type {HTMLDivElement} */\n' +
        '      containerElement);\n' +
        '    });\n' +
        '    onLoadQueue = [];\n' +
        '    /** @type {HTMLIFrameElement} */\n' +
        '\n' +
        '    iframeContainerElement.onload = null;\n' +
        '  };\n' +
        '\n' +
        '  document.body.appendChild(iframeContainerElement);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {(element: HTMLDivElement) => void} callback\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function ensureOverlayExists(callback) {\n' +
        '  if (containerElement) {\n' +
        '    // Everything is ready, call the callback right away.\n' +
        '    callback(containerElement);\n' +
        '    return;\n' +
        '  }\n' +
        '\n' +
        '  onLoadQueue.push(callback);\n' +
        '\n' +
        '  if (iframeContainerElement) {\n' +
        '    return;\n' +
        '  }\n' +
        '\n' +
        '  createContainer();\n' +
        '} // Successful compilation.\n' +
        '\n' +
        '\n' +
        'function hide() {\n' +
        '  if (!iframeContainerElement) {\n' +
        '    return;\n' +
        '  } // Clean up and reset internal state.\n' +
        '\n' +
        '\n' +
        '  document.body.removeChild(iframeContainerElement);\n' +
        '  iframeContainerElement = null;\n' +
        '  containerElement = null;\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} type\n' +
        ' * @param {string  | { file?: string, moduleName?: string, loc?: string, message?: string }} item\n' +
        ' * @returns {{ header: string, body: string }}\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function formatProblem(type, item) {\n' +
        '  var header = type === "warning" ? "WARNING" : "ERROR";\n' +
        '  var body = "";\n' +
        '\n' +
        '  if (typeof item === "string") {\n' +
        '    body += item;\n' +
        '  } else {\n' +
        '    var file = item.file || ""; // eslint-disable-next-line no-nested-ternary\n' +
        '\n' +
        '    var moduleName = item.moduleName ? item.moduleName.indexOf("!") !== -1 ? "".concat(item.moduleName.replace(/^(\\s|\\S)*!/, ""), " (").concat(item.moduleName, ")") : "".concat(item.moduleName) : "";\n' +
        '    var loc = item.loc;\n' +
        '    header += "".concat(moduleName || file ? " in ".concat(moduleName ? "".concat(moduleName).concat(file ? " (".concat(file, ")") : "") : file).concat(loc ? " ".concat(loc) : "") : "");\n' +
        '    body += item.message || "";\n' +
        '  }\n' +
        '\n' +
        '  return {\n' +
        '    header: header,\n' +
        '    body: body\n' +
        '  };\n' +
        '} // Compilation with errors (e.g. syntax error or missing modules).\n' +
        '\n' +
        '/**\n' +
        ' * @param {string} type\n' +
        ' * @param {Array<string  | { file?: string, moduleName?: string, loc?: string, message?: string }>} messages\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function show(type, messages) {\n' +
        '  ensureOverlayExists(function () {\n' +
        '    messages.forEach(function (message) {\n' +
        '      var entryElement = document.createElement("div");\n' +
        '      var typeElement = document.createElement("span");\n' +
        '\n' +
        '      var _formatProblem = formatProblem(type, message),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      typeElement.innerText = header;\n' +
        '      typeElement.style.color = "#".concat(colors.red); // Make it look similar to our terminal.\n' +
        '\n' +
        '      var text = ansiHTML(encode(body));\n' +
        '      var messageTextNode = document.createElement("div");\n' +
        '      messageTextNode.innerHTML = text;\n' +
        '      entryElement.appendChild(typeElement);\n' +
        '      entryElement.appendChild(document.createElement("br"));\n' +
        '      entryElement.appendChild(document.createElement("br"));\n' +
        '      entryElement.appendChild(messageTextNode);\n' +
        '      entryElement.appendChild(document.createElement("br"));\n' +
        '      entryElement.appendChild(document.createElement("br"));\n' +
        '      /** @type {HTMLDivElement} */\n' +
        '\n' +
        '      containerElement.appendChild(entryElement);\n' +
        '    });\n' +
        '  });\n' +
        '}\n' +
        '\n' +
        'export { formatProblem, show, hide };',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/overlay.js'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1006,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js',
    rawRequest: './overlay.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: undefined,
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/overlay.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/overlay.js',
      __innerRequest: './client/overlay.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '// The error overlay is inspired (and mostly copied) from Create React App (https://github.com/facebookincubator/create-react-app)\n' +
        '// They, in turn, got inspired by webpack-hot-middleware (https://github.com/glenjamin/webpack-hot-middleware).\n' +
        'import ansiHTML from "ansi-html-community";\n' +
        'import { encode } from "html-entities";\n' +
        'var colors = {\n' +
        '  reset: ["transparent", "transparent"],\n' +
        '  black: "181818",\n' +
        '  red: "E36049",\n' +
        '  green: "B3CB74",\n' +
        '  yellow: "FFD080",\n' +
        '  blue: "7CAFC2",\n' +
        '  magenta: "7FACCA",\n' +
        '  cyan: "C3C2EF",\n' +
        '  lightgrey: "EBE7E3",\n' +
        '  darkgrey: "6D7891"\n' +
        '};\n' +
        '/** @type {HTMLIFrameElement | null | undefined} */\n' +
        '\n' +
        'var iframeContainerElement;\n' +
        '/** @type {HTMLDivElement | null | undefined} */\n' +
        '\n' +
        'var containerElement;\n' +
        '/** @type {Array<(element: HTMLDivElement) => void>} */\n' +
        '\n' +
        'var onLoadQueue = [];\n' +
        'ansiHTML.setColors(colors);\n' +
        '\n' +
        'function createContainer() {\n' +
        '  iframeContainerElement = document.createElement("iframe");\n' +
        '  iframeContainerElement.id = "webpack-dev-server-client-overlay";\n' +
        '  iframeContainerElement.src = "about:blank";\n' +
        '  iframeContainerElement.style.position = "fixed";\n' +
        '  iframeContainerElement.style.left = 0;\n' +
        '  iframeContainerElement.style.top = 0;\n' +
        '  iframeContainerElement.style.right = 0;\n' +
        '  iframeContainerElement.style.bottom = 0;\n' +
        '  iframeContainerElement.style.width = "100vw";\n' +
        '  iframeContainerElement.style.height = "100vh";\n' +
        '  iframeContainerElement.style.border = "none";\n' +
        '  iframeContainerElement.style.zIndex = 9999999999;\n' +
        '\n' +
        '  iframeContainerElement.onload = function () {\n' +
        '    containerElement =\n' +
        '    /** @type {Document} */\n' +
        '\n' +
        '    /** @type {HTMLIFrameElement} */\n' +
        '    iframeContainerElement.contentDocument.createElement("div");\n' +
        '    containerElement.id = "webpack-dev-server-client-overlay-div";\n' +
        '    containerElement.style.position = "fixed";\n' +
        '    containerElement.style.boxSizing = "border-box";\n' +
        '    containerElement.style.left = 0;\n' +
        '    containerElement.style.top = 0;\n' +
        '    containerElement.style.right = 0;\n' +
        '    containerElement.style.bottom = 0;\n' +
        '    containerElement.style.width = "100vw";\n' +
        '    containerElement.style.height = "100vh";\n' +
        '    containerElement.style.backgroundColor = "rgba(0, 0, 0, 0.85)";\n' +
        '    containerElement.style.color = "#E8E8E8";\n' +
        '    containerElement.style.fontFamily = "Menlo, Consolas, monospace";\n' +
        '    containerElement.style.fontSize = "large";\n' +
        '    containerElement.style.padding = "2rem";\n' +
        '    containerElement.style.lineHeight = "1.2";\n' +
        '    containerElement.style.whiteSpace = "pre-wrap";\n' +
        '    containerElement.style.overflow = "auto";\n' +
        '    var headerElement = document.createElement("span");\n' +
        '    headerElement.innerText = "Compiled with problems:";\n' +
        '    var closeButtonElement = document.createElement("button");\n' +
        '    closeButtonElement.innerText = "X";\n' +
        '    closeButtonElement.style.background = "transparent";\n' +
        '    closeButtonElement.style.border = "none";\n' +
        '    closeButtonElement.style.fontSize = "20px";\n' +
        '    closeButtonElement.style.fontWeight = "bold";\n' +
        '    closeButtonElement.style.color = "white";\n' +
        '    closeButtonElement.style.cursor = "pointer";\n' +
        '    closeButtonElement.style.cssFloat = "right"; // @ts-ignore\n' +
        '\n' +
        '    closeButtonElement.style.styleFloat = "right";\n' +
        '    closeButtonElement.addEventListener("click", function () {\n' +
        '      hide();\n' +
        '    });\n' +
        '    containerElement.appendChild(headerElement);\n' +
        '    containerElement.appendChild(closeButtonElement);\n' +
        '    containerElement.appendChild(document.createElement("br"));\n' +
        '    containerElement.appendChild(document.createElement("br"));\n' +
        '    /** @type {Document} */\n' +
        '\n' +
        '    /** @type {HTMLIFrameElement} */\n' +
        '    iframeContainerElement.contentDocument.body.appendChild(containerElement);\n' +
        '    onLoadQueue.forEach(function (onLoad) {\n' +
        '      onLoad(\n' +
        '      /** @type {HTMLDivElement} */\n' +
        '      containerElement);\n' +
        '    });\n' +
        '    onLoadQueue = [];\n' +
        '    /** @type {HTMLIFrameElement} */\n' +
        '\n' +
        '    iframeContainerElement.onload = null;\n' +
        '  };\n' +
        '\n' +
        '  document.body.appendChild(iframeContainerElement);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {(element: HTMLDivElement) => void} callback\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function ensureOverlayExists(callback) {\n' +
        '  if (containerElement) {\n' +
        '    // Everything is ready, call the callback right away.\n' +
        '    callback(containerElement);\n' +
        '    return;\n' +
        '  }\n' +
        '\n' +
        '  onLoadQueue.push(callback);\n' +
        '\n' +
        '  if (iframeContainerElement) {\n' +
        '    return;\n' +
        '  }\n' +
        '\n' +
        '  createContainer();\n' +
        '} // Successful compilation.\n' +
        '\n' +
        '\n' +
        'function hide() {\n' +
        '  if (!iframeContainerElement) {\n' +
        '    return;\n' +
        '  } // Clean up and reset internal state.\n' +
        '\n' +
        '\n' +
        '  document.body.removeChild(iframeContainerElement);\n' +
        '  iframeContainerElement = null;\n' +
        '  containerElement = null;\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} type\n' +
        ' * @param {string  | { file?: string, moduleName?: string, loc?: string, message?: string }} item\n' +
        ' * @returns {{ header: string, body: string }}\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function formatProblem(type, item) {\n' +
        '  var header = type === "warning" ? "WARNING" : "ERROR";\n' +
        '  var body = "";\n' +
        '\n' +
        '  if (typeof item === "string") {\n' +
        '    body += item;\n' +
        '  } else {\n' +
        '    var file = item.file || ""; // eslint-disable-next-line no-nested-ternary\n' +
        '\n' +
        '    var moduleName = item.moduleName ? item.moduleName.indexOf("!") !== -1 ? "".concat(item.moduleName.replace(/^(\\s|\\S)*!/, ""), " (").concat(item.moduleName, ")") : "".concat(item.moduleName) : "";\n' +
        '    var loc = item.loc;\n' +
        '    header += "".concat(moduleName || file ? " in ".concat(moduleName ? "".concat(moduleName).concat(file ? " (".concat(file, ")") : "") : file).concat(loc ? " ".concat(loc) : "") : "");\n' +
        '    body += item.message || "";\n' +
        '  }\n' +
        '\n' +
        '  return {\n' +
        '    header: header,\n' +
        '    body: body\n' +
        '  };\n' +
        '} // Compilation with errors (e.g. syntax error or missing modules).\n' +
        '\n' +
        '/**\n' +
        ' * @param {string} type\n' +
        ' * @param {Array<string  | { file?: string, moduleName?: string, loc?: string, message?: string }>} messages\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function show(type, messages) {\n' +
        '  ensureOverlayExists(function () {\n' +
        '    messages.forEach(function (message) {\n' +
        '      var entryElement = document.createElement("div");\n' +
        '      var typeElement = document.createElement("span");\n' +
        '\n' +
        '      var _formatProblem = formatProblem(type, message),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      typeElement.innerText = header;\n' +
        '      typeElement.style.color = "#".concat(colors.red); // Make it look similar to our terminal.\n' +
        '\n' +
        '      var text = ansiHTML(encode(body));\n' +
        '      var messageTextNode = document.createElement("div");\n' +
        '      messageTextNode.innerHTML = text;\n' +
        '      entryElement.appendChild(typeElement);\n' +
        '      entryElement.appendChild(document.createElement("br"));\n' +
        '      entryElement.appendChild(document.createElement("br"));\n' +
        '      entryElement.appendChild(messageTextNode);\n' +
        '      entryElement.appendChild(document.createElement("br"));\n' +
        '      entryElement.appendChild(document.createElement("br"));\n' +
        '      /** @type {HTMLDivElement} */\n' +
        '\n' +
        '      containerElement.appendChild(entryElement);\n' +
        '    });\n' +
        '  });\n' +
        '}\n' +
        '\n' +
        'export { formatProblem, show, hide };',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/overlay.js'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 22,
      _statTestedSnapshotsCached: 0,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 103,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 12,
      _willEnsureProcessing: true,
      _needProcessing: true,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log-apply-result.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/emitter.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/sendMessage.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/createSocketURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/strip-ansi/index.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  }
}
source :  html-entities
 parser.state :  {
  source: '// The error overlay is inspired (and mostly copied) from Create React App (https://github.com/facebookincubator/create-react-app)\n' +
    '// They, in turn, got inspired by webpack-hot-middleware (https://github.com/glenjamin/webpack-hot-middleware).\n' +
    'import ansiHTML from "ansi-html-community";\n' +
    'import { encode } from "html-entities";\n' +
    'var colors = {\n' +
    '  reset: ["transparent", "transparent"],\n' +
    '  black: "181818",\n' +
    '  red: "E36049",\n' +
    '  green: "B3CB74",\n' +
    '  yellow: "FFD080",\n' +
    '  blue: "7CAFC2",\n' +
    '  magenta: "7FACCA",\n' +
    '  cyan: "C3C2EF",\n' +
    '  lightgrey: "EBE7E3",\n' +
    '  darkgrey: "6D7891"\n' +
    '};\n' +
    '/** @type {HTMLIFrameElement | null | undefined} */\n' +
    '\n' +
    'var iframeContainerElement;\n' +
    '/** @type {HTMLDivElement | null | undefined} */\n' +
    '\n' +
    'var containerElement;\n' +
    '/** @type {Array<(element: HTMLDivElement) => void>} */\n' +
    '\n' +
    'var onLoadQueue = [];\n' +
    'ansiHTML.setColors(colors);\n' +
    '\n' +
    'function createContainer() {\n' +
    '  iframeContainerElement = document.createElement("iframe");\n' +
    '  iframeContainerElement.id = "webpack-dev-server-client-overlay";\n' +
    '  iframeContainerElement.src = "about:blank";\n' +
    '  iframeContainerElement.style.position = "fixed";\n' +
    '  iframeContainerElement.style.left = 0;\n' +
    '  iframeContainerElement.style.top = 0;\n' +
    '  iframeContainerElement.style.right = 0;\n' +
    '  iframeContainerElement.style.bottom = 0;\n' +
    '  iframeContainerElement.style.width = "100vw";\n' +
    '  iframeContainerElement.style.height = "100vh";\n' +
    '  iframeContainerElement.style.border = "none";\n' +
    '  iframeContainerElement.style.zIndex = 9999999999;\n' +
    '\n' +
    '  iframeContainerElement.onload = function () {\n' +
    '    containerElement =\n' +
    '    /** @type {Document} */\n' +
    '\n' +
    '    /** @type {HTMLIFrameElement} */\n' +
    '    iframeContainerElement.contentDocument.createElement("div");\n' +
    '    containerElement.id = "webpack-dev-server-client-overlay-div";\n' +
    '    containerElement.style.position = "fixed";\n' +
    '    containerElement.style.boxSizing = "border-box";\n' +
    '    containerElement.style.left = 0;\n' +
    '    containerElement.style.top = 0;\n' +
    '    containerElement.style.right = 0;\n' +
    '    containerElement.style.bottom = 0;\n' +
    '    containerElement.style.width = "100vw";\n' +
    '    containerElement.style.height = "100vh";\n' +
    '    containerElement.style.backgroundColor = "rgba(0, 0, 0, 0.85)";\n' +
    '    containerElement.style.color = "#E8E8E8";\n' +
    '    containerElement.style.fontFamily = "Menlo, Consolas, monospace";\n' +
    '    containerElement.style.fontSize = "large";\n' +
    '    containerElement.style.padding = "2rem";\n' +
    '    containerElement.style.lineHeight = "1.2";\n' +
    '    containerElement.style.whiteSpace = "pre-wrap";\n' +
    '    containerElement.style.overflow = "auto";\n' +
    '    var headerElement = document.createElement("span");\n' +
    '    headerElement.innerText = "Compiled with problems:";\n' +
    '    var closeButtonElement = document.createElement("button");\n' +
    '    closeButtonElement.innerText = "X";\n' +
    '    closeButtonElement.style.background = "transparent";\n' +
    '    closeButtonElement.style.border = "none";\n' +
    '    closeButtonElement.style.fontSize = "20px";\n' +
    '    closeButtonElement.style.fontWeight = "bold";\n' +
    '    closeButtonElement.style.color = "white";\n' +
    '    closeButtonElement.style.cursor = "pointer";\n' +
    '    closeButtonElement.style.cssFloat = "right"; // @ts-ignore\n' +
    '\n' +
    '    closeButtonElement.style.styleFloat = "right";\n' +
    '    closeButtonElement.addEventListener("click", function () {\n' +
    '      hide();\n' +
    '    });\n' +
    '    containerElement.appendChild(headerElement);\n' +
    '    containerElement.appendChild(closeButtonElement);\n' +
    '    containerElement.appendChild(document.createElement("br"));\n' +
    '    containerElement.appendChild(document.createElement("br"));\n' +
    '    /** @type {Document} */\n' +
    '\n' +
    '    /** @type {HTMLIFrameElement} */\n' +
    '    iframeContainerElement.contentDocument.body.appendChild(containerElement);\n' +
    '    onLoadQueue.forEach(function (onLoad) {\n' +
    '      onLoad(\n' +
    '      /** @type {HTMLDivElement} */\n' +
    '      containerElement);\n' +
    '    });\n' +
    '    onLoadQueue = [];\n' +
    '    /** @type {HTMLIFrameElement} */\n' +
    '\n' +
    '    iframeContainerElement.onload = null;\n' +
    '  };\n' +
    '\n' +
    '  document.body.appendChild(iframeContainerElement);\n' +
    '}\n' +
    '/**\n' +
    ' * @param {(element: HTMLDivElement) => void} callback\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function ensureOverlayExists(callback) {\n' +
    '  if (containerElement) {\n' +
    '    // Everything is ready, call the callback right away.\n' +
    '    callback(containerElement);\n' +
    '    return;\n' +
    '  }\n' +
    '\n' +
    '  onLoadQueue.push(callback);\n' +
    '\n' +
    '  if (iframeContainerElement) {\n' +
    '    return;\n' +
    '  }\n' +
    '\n' +
    '  createContainer();\n' +
    '} // Successful compilation.\n' +
    '\n' +
    '\n' +
    'function hide() {\n' +
    '  if (!iframeContainerElement) {\n' +
    '    return;\n' +
    '  } // Clean up and reset internal state.\n' +
    '\n' +
    '\n' +
    '  document.body.removeChild(iframeContainerElement);\n' +
    '  iframeContainerElement = null;\n' +
    '  containerElement = null;\n' +
    '}\n' +
    '/**\n' +
    ' * @param {string} type\n' +
    ' * @param {string  | { file?: string, moduleName?: string, loc?: string, message?: string }} item\n' +
    ' * @returns {{ header: string, body: string }}\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function formatProblem(type, item) {\n' +
    '  var header = type === "warning" ? "WARNING" : "ERROR";\n' +
    '  var body = "";\n' +
    '\n' +
    '  if (typeof item === "string") {\n' +
    '    body += item;\n' +
    '  } else {\n' +
    '    var file = item.file || ""; // eslint-disable-next-line no-nested-ternary\n' +
    '\n' +
    '    var moduleName = item.moduleName ? item.moduleName.indexOf("!") !== -1 ? "".concat(item.moduleName.replace(/^(\\s|\\S)*!/, ""), " (").concat(item.moduleName, ")") : "".concat(item.moduleName) : "";\n' +
    '    var loc = item.loc;\n' +
    '    header += "".concat(moduleName || file ? " in ".concat(moduleName ? "".concat(moduleName).concat(file ? " (".concat(file, ")") : "") : file).concat(loc ? " ".concat(loc) : "") : "");\n' +
    '    body += item.message || "";\n' +
    '  }\n' +
    '\n' +
    '  return {\n' +
    '    header: header,\n' +
    '    body: body\n' +
    '  };\n' +
    '} // Compilation with errors (e.g. syntax error or missing modules).\n' +
    '\n' +
    '/**\n' +
    ' * @param {string} type\n' +
    ' * @param {Array<string  | { file?: string, moduleName?: string, loc?: string, message?: string }>} messages\n' +
    ' */\n' +
    '\n' +
    '\n' +
    'function show(type, messages) {\n' +
    '  ensureOverlayExists(function () {\n' +
    '    messages.forEach(function (message) {\n' +
    '      var entryElement = document.createElement("div");\n' +
    '      var typeElement = document.createElement("span");\n' +
    '\n' +
    '      var _formatProblem = formatProblem(type, message),\n' +
    '          header = _formatProblem.header,\n' +
    '          body = _formatProblem.body;\n' +
    '\n' +
    '      typeElement.innerText = header;\n' +
    '      typeElement.style.color = "#".concat(colors.red); // Make it look similar to our terminal.\n' +
    '\n' +
    '      var text = ansiHTML(encode(body));\n' +
    '      var messageTextNode = document.createElement("div");\n' +
    '      messageTextNode.innerHTML = text;\n' +
    '      entryElement.appendChild(typeElement);\n' +
    '      entryElement.appendChild(document.createElement("br"));\n' +
    '      entryElement.appendChild(document.createElement("br"));\n' +
    '      entryElement.appendChild(messageTextNode);\n' +
    '      entryElement.appendChild(document.createElement("br"));\n' +
    '      entryElement.appendChild(document.createElement("br"));\n' +
    '      /** @type {HTMLDivElement} */\n' +
    '\n' +
    '      containerElement.appendChild(entryElement);\n' +
    '    });\n' +
    '  });\n' +
    '}\n' +
    '\n' +
    'export { formatProblem, show, hide };',
  current: NormalModule {
    dependencies: [ [HarmonyImportSideEffectDependency] ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1006,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency], [ConstDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js',
    rawRequest: './overlay.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/overlay.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/overlay.js',
      __innerRequest: './client/overlay.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '// The error overlay is inspired (and mostly copied) from Create React App (https://github.com/facebookincubator/create-react-app)\n' +
        '// They, in turn, got inspired by webpack-hot-middleware (https://github.com/glenjamin/webpack-hot-middleware).\n' +
        'import ansiHTML from "ansi-html-community";\n' +
        'import { encode } from "html-entities";\n' +
        'var colors = {\n' +
        '  reset: ["transparent", "transparent"],\n' +
        '  black: "181818",\n' +
        '  red: "E36049",\n' +
        '  green: "B3CB74",\n' +
        '  yellow: "FFD080",\n' +
        '  blue: "7CAFC2",\n' +
        '  magenta: "7FACCA",\n' +
        '  cyan: "C3C2EF",\n' +
        '  lightgrey: "EBE7E3",\n' +
        '  darkgrey: "6D7891"\n' +
        '};\n' +
        '/** @type {HTMLIFrameElement | null | undefined} */\n' +
        '\n' +
        'var iframeContainerElement;\n' +
        '/** @type {HTMLDivElement | null | undefined} */\n' +
        '\n' +
        'var containerElement;\n' +
        '/** @type {Array<(element: HTMLDivElement) => void>} */\n' +
        '\n' +
        'var onLoadQueue = [];\n' +
        'ansiHTML.setColors(colors);\n' +
        '\n' +
        'function createContainer() {\n' +
        '  iframeContainerElement = document.createElement("iframe");\n' +
        '  iframeContainerElement.id = "webpack-dev-server-client-overlay";\n' +
        '  iframeContainerElement.src = "about:blank";\n' +
        '  iframeContainerElement.style.position = "fixed";\n' +
        '  iframeContainerElement.style.left = 0;\n' +
        '  iframeContainerElement.style.top = 0;\n' +
        '  iframeContainerElement.style.right = 0;\n' +
        '  iframeContainerElement.style.bottom = 0;\n' +
        '  iframeContainerElement.style.width = "100vw";\n' +
        '  iframeContainerElement.style.height = "100vh";\n' +
        '  iframeContainerElement.style.border = "none";\n' +
        '  iframeContainerElement.style.zIndex = 9999999999;\n' +
        '\n' +
        '  iframeContainerElement.onload = function () {\n' +
        '    containerElement =\n' +
        '    /** @type {Document} */\n' +
        '\n' +
        '    /** @type {HTMLIFrameElement} */\n' +
        '    iframeContainerElement.contentDocument.createElement("div");\n' +
        '    containerElement.id = "webpack-dev-server-client-overlay-div";\n' +
        '    containerElement.style.position = "fixed";\n' +
        '    containerElement.style.boxSizing = "border-box";\n' +
        '    containerElement.style.left = 0;\n' +
        '    containerElement.style.top = 0;\n' +
        '    containerElement.style.right = 0;\n' +
        '    containerElement.style.bottom = 0;\n' +
        '    containerElement.style.width = "100vw";\n' +
        '    containerElement.style.height = "100vh";\n' +
        '    containerElement.style.backgroundColor = "rgba(0, 0, 0, 0.85)";\n' +
        '    containerElement.style.color = "#E8E8E8";\n' +
        '    containerElement.style.fontFamily = "Menlo, Consolas, monospace";\n' +
        '    containerElement.style.fontSize = "large";\n' +
        '    containerElement.style.padding = "2rem";\n' +
        '    containerElement.style.lineHeight = "1.2";\n' +
        '    containerElement.style.whiteSpace = "pre-wrap";\n' +
        '    containerElement.style.overflow = "auto";\n' +
        '    var headerElement = document.createElement("span");\n' +
        '    headerElement.innerText = "Compiled with problems:";\n' +
        '    var closeButtonElement = document.createElement("button");\n' +
        '    closeButtonElement.innerText = "X";\n' +
        '    closeButtonElement.style.background = "transparent";\n' +
        '    closeButtonElement.style.border = "none";\n' +
        '    closeButtonElement.style.fontSize = "20px";\n' +
        '    closeButtonElement.style.fontWeight = "bold";\n' +
        '    closeButtonElement.style.color = "white";\n' +
        '    closeButtonElement.style.cursor = "pointer";\n' +
        '    closeButtonElement.style.cssFloat = "right"; // @ts-ignore\n' +
        '\n' +
        '    closeButtonElement.style.styleFloat = "right";\n' +
        '    closeButtonElement.addEventListener("click", function () {\n' +
        '      hide();\n' +
        '    });\n' +
        '    containerElement.appendChild(headerElement);\n' +
        '    containerElement.appendChild(closeButtonElement);\n' +
        '    containerElement.appendChild(document.createElement("br"));\n' +
        '    containerElement.appendChild(document.createElement("br"));\n' +
        '    /** @type {Document} */\n' +
        '\n' +
        '    /** @type {HTMLIFrameElement} */\n' +
        '    iframeContainerElement.contentDocument.body.appendChild(containerElement);\n' +
        '    onLoadQueue.forEach(function (onLoad) {\n' +
        '      onLoad(\n' +
        '      /** @type {HTMLDivElement} */\n' +
        '      containerElement);\n' +
        '    });\n' +
        '    onLoadQueue = [];\n' +
        '    /** @type {HTMLIFrameElement} */\n' +
        '\n' +
        '    iframeContainerElement.onload = null;\n' +
        '  };\n' +
        '\n' +
        '  document.body.appendChild(iframeContainerElement);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {(element: HTMLDivElement) => void} callback\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function ensureOverlayExists(callback) {\n' +
        '  if (containerElement) {\n' +
        '    // Everything is ready, call the callback right away.\n' +
        '    callback(containerElement);\n' +
        '    return;\n' +
        '  }\n' +
        '\n' +
        '  onLoadQueue.push(callback);\n' +
        '\n' +
        '  if (iframeContainerElement) {\n' +
        '    return;\n' +
        '  }\n' +
        '\n' +
        '  createContainer();\n' +
        '} // Successful compilation.\n' +
        '\n' +
        '\n' +
        'function hide() {\n' +
        '  if (!iframeContainerElement) {\n' +
        '    return;\n' +
        '  } // Clean up and reset internal state.\n' +
        '\n' +
        '\n' +
        '  document.body.removeChild(iframeContainerElement);\n' +
        '  iframeContainerElement = null;\n' +
        '  containerElement = null;\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} type\n' +
        ' * @param {string  | { file?: string, moduleName?: string, loc?: string, message?: string }} item\n' +
        ' * @returns {{ header: string, body: string }}\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function formatProblem(type, item) {\n' +
        '  var header = type === "warning" ? "WARNING" : "ERROR";\n' +
        '  var body = "";\n' +
        '\n' +
        '  if (typeof item === "string") {\n' +
        '    body += item;\n' +
        '  } else {\n' +
        '    var file = item.file || ""; // eslint-disable-next-line no-nested-ternary\n' +
        '\n' +
        '    var moduleName = item.moduleName ? item.moduleName.indexOf("!") !== -1 ? "".concat(item.moduleName.replace(/^(\\s|\\S)*!/, ""), " (").concat(item.moduleName, ")") : "".concat(item.moduleName) : "";\n' +
        '    var loc = item.loc;\n' +
        '    header += "".concat(moduleName || file ? " in ".concat(moduleName ? "".concat(moduleName).concat(file ? " (".concat(file, ")") : "") : file).concat(loc ? " ".concat(loc) : "") : "");\n' +
        '    body += item.message || "";\n' +
        '  }\n' +
        '\n' +
        '  return {\n' +
        '    header: header,\n' +
        '    body: body\n' +
        '  };\n' +
        '} // Compilation with errors (e.g. syntax error or missing modules).\n' +
        '\n' +
        '/**\n' +
        ' * @param {string} type\n' +
        ' * @param {Array<string  | { file?: string, moduleName?: string, loc?: string, message?: string }>} messages\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function show(type, messages) {\n' +
        '  ensureOverlayExists(function () {\n' +
        '    messages.forEach(function (message) {\n' +
        '      var entryElement = document.createElement("div");\n' +
        '      var typeElement = document.createElement("span");\n' +
        '\n' +
        '      var _formatProblem = formatProblem(type, message),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      typeElement.innerText = header;\n' +
        '      typeElement.style.color = "#".concat(colors.red); // Make it look similar to our terminal.\n' +
        '\n' +
        '      var text = ansiHTML(encode(body));\n' +
        '      var messageTextNode = document.createElement("div");\n' +
        '      messageTextNode.innerHTML = text;\n' +
        '      entryElement.appendChild(typeElement);\n' +
        '      entryElement.appendChild(document.createElement("br"));\n' +
        '      entryElement.appendChild(document.createElement("br"));\n' +
        '      entryElement.appendChild(messageTextNode);\n' +
        '      entryElement.appendChild(document.createElement("br"));\n' +
        '      entryElement.appendChild(document.createElement("br"));\n' +
        '      /** @type {HTMLDivElement} */\n' +
        '\n' +
        '      containerElement.appendChild(entryElement);\n' +
        '    });\n' +
        '  });\n' +
        '}\n' +
        '\n' +
        'export { formatProblem, show, hide };',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/overlay.js'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [ [HarmonyImportSideEffectDependency] ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client',
    layer: null,
    needId: true,
    debugId: 1006,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency], [ConstDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js',
    rawRequest: './overlay.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/overlay.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/overlay.js',
      __innerRequest: './client/overlay.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: '// The error overlay is inspired (and mostly copied) from Create React App (https://github.com/facebookincubator/create-react-app)\n' +
        '// They, in turn, got inspired by webpack-hot-middleware (https://github.com/glenjamin/webpack-hot-middleware).\n' +
        'import ansiHTML from "ansi-html-community";\n' +
        'import { encode } from "html-entities";\n' +
        'var colors = {\n' +
        '  reset: ["transparent", "transparent"],\n' +
        '  black: "181818",\n' +
        '  red: "E36049",\n' +
        '  green: "B3CB74",\n' +
        '  yellow: "FFD080",\n' +
        '  blue: "7CAFC2",\n' +
        '  magenta: "7FACCA",\n' +
        '  cyan: "C3C2EF",\n' +
        '  lightgrey: "EBE7E3",\n' +
        '  darkgrey: "6D7891"\n' +
        '};\n' +
        '/** @type {HTMLIFrameElement | null | undefined} */\n' +
        '\n' +
        'var iframeContainerElement;\n' +
        '/** @type {HTMLDivElement | null | undefined} */\n' +
        '\n' +
        'var containerElement;\n' +
        '/** @type {Array<(element: HTMLDivElement) => void>} */\n' +
        '\n' +
        'var onLoadQueue = [];\n' +
        'ansiHTML.setColors(colors);\n' +
        '\n' +
        'function createContainer() {\n' +
        '  iframeContainerElement = document.createElement("iframe");\n' +
        '  iframeContainerElement.id = "webpack-dev-server-client-overlay";\n' +
        '  iframeContainerElement.src = "about:blank";\n' +
        '  iframeContainerElement.style.position = "fixed";\n' +
        '  iframeContainerElement.style.left = 0;\n' +
        '  iframeContainerElement.style.top = 0;\n' +
        '  iframeContainerElement.style.right = 0;\n' +
        '  iframeContainerElement.style.bottom = 0;\n' +
        '  iframeContainerElement.style.width = "100vw";\n' +
        '  iframeContainerElement.style.height = "100vh";\n' +
        '  iframeContainerElement.style.border = "none";\n' +
        '  iframeContainerElement.style.zIndex = 9999999999;\n' +
        '\n' +
        '  iframeContainerElement.onload = function () {\n' +
        '    containerElement =\n' +
        '    /** @type {Document} */\n' +
        '\n' +
        '    /** @type {HTMLIFrameElement} */\n' +
        '    iframeContainerElement.contentDocument.createElement("div");\n' +
        '    containerElement.id = "webpack-dev-server-client-overlay-div";\n' +
        '    containerElement.style.position = "fixed";\n' +
        '    containerElement.style.boxSizing = "border-box";\n' +
        '    containerElement.style.left = 0;\n' +
        '    containerElement.style.top = 0;\n' +
        '    containerElement.style.right = 0;\n' +
        '    containerElement.style.bottom = 0;\n' +
        '    containerElement.style.width = "100vw";\n' +
        '    containerElement.style.height = "100vh";\n' +
        '    containerElement.style.backgroundColor = "rgba(0, 0, 0, 0.85)";\n' +
        '    containerElement.style.color = "#E8E8E8";\n' +
        '    containerElement.style.fontFamily = "Menlo, Consolas, monospace";\n' +
        '    containerElement.style.fontSize = "large";\n' +
        '    containerElement.style.padding = "2rem";\n' +
        '    containerElement.style.lineHeight = "1.2";\n' +
        '    containerElement.style.whiteSpace = "pre-wrap";\n' +
        '    containerElement.style.overflow = "auto";\n' +
        '    var headerElement = document.createElement("span");\n' +
        '    headerElement.innerText = "Compiled with problems:";\n' +
        '    var closeButtonElement = document.createElement("button");\n' +
        '    closeButtonElement.innerText = "X";\n' +
        '    closeButtonElement.style.background = "transparent";\n' +
        '    closeButtonElement.style.border = "none";\n' +
        '    closeButtonElement.style.fontSize = "20px";\n' +
        '    closeButtonElement.style.fontWeight = "bold";\n' +
        '    closeButtonElement.style.color = "white";\n' +
        '    closeButtonElement.style.cursor = "pointer";\n' +
        '    closeButtonElement.style.cssFloat = "right"; // @ts-ignore\n' +
        '\n' +
        '    closeButtonElement.style.styleFloat = "right";\n' +
        '    closeButtonElement.addEventListener("click", function () {\n' +
        '      hide();\n' +
        '    });\n' +
        '    containerElement.appendChild(headerElement);\n' +
        '    containerElement.appendChild(closeButtonElement);\n' +
        '    containerElement.appendChild(document.createElement("br"));\n' +
        '    containerElement.appendChild(document.createElement("br"));\n' +
        '    /** @type {Document} */\n' +
        '\n' +
        '    /** @type {HTMLIFrameElement} */\n' +
        '    iframeContainerElement.contentDocument.body.appendChild(containerElement);\n' +
        '    onLoadQueue.forEach(function (onLoad) {\n' +
        '      onLoad(\n' +
        '      /** @type {HTMLDivElement} */\n' +
        '      containerElement);\n' +
        '    });\n' +
        '    onLoadQueue = [];\n' +
        '    /** @type {HTMLIFrameElement} */\n' +
        '\n' +
        '    iframeContainerElement.onload = null;\n' +
        '  };\n' +
        '\n' +
        '  document.body.appendChild(iframeContainerElement);\n' +
        '}\n' +
        '/**\n' +
        ' * @param {(element: HTMLDivElement) => void} callback\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function ensureOverlayExists(callback) {\n' +
        '  if (containerElement) {\n' +
        '    // Everything is ready, call the callback right away.\n' +
        '    callback(containerElement);\n' +
        '    return;\n' +
        '  }\n' +
        '\n' +
        '  onLoadQueue.push(callback);\n' +
        '\n' +
        '  if (iframeContainerElement) {\n' +
        '    return;\n' +
        '  }\n' +
        '\n' +
        '  createContainer();\n' +
        '} // Successful compilation.\n' +
        '\n' +
        '\n' +
        'function hide() {\n' +
        '  if (!iframeContainerElement) {\n' +
        '    return;\n' +
        '  } // Clean up and reset internal state.\n' +
        '\n' +
        '\n' +
        '  document.body.removeChild(iframeContainerElement);\n' +
        '  iframeContainerElement = null;\n' +
        '  containerElement = null;\n' +
        '}\n' +
        '/**\n' +
        ' * @param {string} type\n' +
        ' * @param {string  | { file?: string, moduleName?: string, loc?: string, message?: string }} item\n' +
        ' * @returns {{ header: string, body: string }}\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function formatProblem(type, item) {\n' +
        '  var header = type === "warning" ? "WARNING" : "ERROR";\n' +
        '  var body = "";\n' +
        '\n' +
        '  if (typeof item === "string") {\n' +
        '    body += item;\n' +
        '  } else {\n' +
        '    var file = item.file || ""; // eslint-disable-next-line no-nested-ternary\n' +
        '\n' +
        '    var moduleName = item.moduleName ? item.moduleName.indexOf("!") !== -1 ? "".concat(item.moduleName.replace(/^(\\s|\\S)*!/, ""), " (").concat(item.moduleName, ")") : "".concat(item.moduleName) : "";\n' +
        '    var loc = item.loc;\n' +
        '    header += "".concat(moduleName || file ? " in ".concat(moduleName ? "".concat(moduleName).concat(file ? " (".concat(file, ")") : "") : file).concat(loc ? " ".concat(loc) : "") : "");\n' +
        '    body += item.message || "";\n' +
        '  }\n' +
        '\n' +
        '  return {\n' +
        '    header: header,\n' +
        '    body: body\n' +
        '  };\n' +
        '} // Compilation with errors (e.g. syntax error or missing modules).\n' +
        '\n' +
        '/**\n' +
        ' * @param {string} type\n' +
        ' * @param {Array<string  | { file?: string, moduleName?: string, loc?: string, message?: string }>} messages\n' +
        ' */\n' +
        '\n' +
        '\n' +
        'function show(type, messages) {\n' +
        '  ensureOverlayExists(function () {\n' +
        '    messages.forEach(function (message) {\n' +
        '      var entryElement = document.createElement("div");\n' +
        '      var typeElement = document.createElement("span");\n' +
        '\n' +
        '      var _formatProblem = formatProblem(type, message),\n' +
        '          header = _formatProblem.header,\n' +
        '          body = _formatProblem.body;\n' +
        '\n' +
        '      typeElement.innerText = header;\n' +
        '      typeElement.style.color = "#".concat(colors.red); // Make it look similar to our terminal.\n' +
        '\n' +
        '      var text = ansiHTML(encode(body));\n' +
        '      var messageTextNode = document.createElement("div");\n' +
        '      messageTextNode.innerHTML = text;\n' +
        '      entryElement.appendChild(typeElement);\n' +
        '      entryElement.appendChild(document.createElement("br"));\n' +
        '      entryElement.appendChild(document.createElement("br"));\n' +
        '      entryElement.appendChild(messageTextNode);\n' +
        '      entryElement.appendChild(document.createElement("br"));\n' +
        '      entryElement.appendChild(document.createElement("br"));\n' +
        '      /** @type {HTMLDivElement} */\n' +
        '\n' +
        '      containerElement.appendChild(entryElement);\n' +
        '    });\n' +
        '  });\n' +
        '}\n' +
        '\n' +
        'export { formatProblem, show, hide };',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/overlay.js'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 22,
      _statTestedSnapshotsCached: 0,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 103,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 12,
      _willEnsureProcessing: true,
      _needProcessing: true,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log-apply-result.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/emitter.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/sendMessage.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/createSocketURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/strip-ansi/index.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  },
  lastHarmonyImportOrder: 1
}
source :  ./getCurrentScriptSource.js
 parser.state :  {
  source: 'import getCurrentScriptSource from "./getCurrentScriptSource.js";\n' +
    '/**\n' +
    ' * @param {string} resourceQuery\n' +
    ' * @returns {{ [key: string]: string | boolean }}\n' +
    ' */\n' +
    '\n' +
    'function parseURL(resourceQuery) {\n' +
    '  /** @type {{ [key: string]: string }} */\n' +
    '  var options = {};\n' +
    '\n' +
    '  if (typeof resourceQuery === "string" && resourceQuery !== "") {\n' +
    '    var searchParams = resourceQuery.substr(1).split("&");\n' +
    '\n' +
    '    for (var i = 0; i < searchParams.length; i++) {\n' +
    '      var pair = searchParams[i].split("=");\n' +
    '      options[pair[0]] = decodeURIComponent(pair[1]);\n' +
    '    }\n' +
    '  } else {\n' +
    '    // Else, get the url from the <script> this file was called with.\n' +
    '    var scriptSource = getCurrentScriptSource();\n' +
    '    var scriptSourceURL;\n' +
    '\n' +
    '    try {\n' +
    '      // The placeholder `baseURL` with `window.location.href`,\n' +
    '      // is to allow parsing of path-relative or protocol-relative URLs,\n' +
    '      // and will have no effect if `scriptSource` is a fully valid URL.\n' +
    '      scriptSourceURL = new URL(scriptSource, self.location.href);\n' +
    '    } catch (error) {// URL parsing failed, do nothing.\n' +
    '      // We will still proceed to see if we can recover using `resourceQuery`\n' +
    '    }\n' +
    '\n' +
    '    if (scriptSourceURL) {\n' +
    '      options = scriptSourceURL;\n' +
    '      options.fromCurrentScript = true;\n' +
    '    }\n' +
    '  }\n' +
    '\n' +
    '  return options;\n' +
    '}\n' +
    '\n' +
    'export default parseURL;',
  current: NormalModule {
    dependencies: [],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils',
    layer: null,
    needId: true,
    debugId: 1008,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js',
    rawRequest: './utils/parseURL.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: undefined,
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/utils/parseURL.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/utils/parseURL.js',
      __innerRequest: './client/utils/parseURL.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: 'import getCurrentScriptSource from "./getCurrentScriptSource.js";\n' +
        '/**\n' +
        ' * @param {string} resourceQuery\n' +
        ' * @returns {{ [key: string]: string | boolean }}\n' +
        ' */\n' +
        '\n' +
        'function parseURL(resourceQuery) {\n' +
        '  /** @type {{ [key: string]: string }} */\n' +
        '  var options = {};\n' +
        '\n' +
        '  if (typeof resourceQuery === "string" && resourceQuery !== "") {\n' +
        '    var searchParams = resourceQuery.substr(1).split("&");\n' +
        '\n' +
        '    for (var i = 0; i < searchParams.length; i++) {\n' +
        '      var pair = searchParams[i].split("=");\n' +
        '      options[pair[0]] = decodeURIComponent(pair[1]);\n' +
        '    }\n' +
        '  } else {\n' +
        '    // Else, get the url from the <script> this file was called with.\n' +
        '    var scriptSource = getCurrentScriptSource();\n' +
        '    var scriptSourceURL;\n' +
        '\n' +
        '    try {\n' +
        '      // The placeholder `baseURL` with `window.location.href`,\n' +
        '      // is to allow parsing of path-relative or protocol-relative URLs,\n' +
        '      // and will have no effect if `scriptSource` is a fully valid URL.\n' +
        '      scriptSourceURL = new URL(scriptSource, self.location.href);\n' +
        '    } catch (error) {// URL parsing failed, do nothing.\n' +
        '      // We will still proceed to see if we can recover using `resourceQuery`\n' +
        '    }\n' +
        '\n' +
        '    if (scriptSourceURL) {\n' +
        '      options = scriptSourceURL;\n' +
        '      options.fromCurrentScript = true;\n' +
        '    }\n' +
        '  }\n' +
        '\n' +
        '  return options;\n' +
        '}\n' +
        '\n' +
        'export default parseURL;',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/utils/parseURL.js'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils',
    layer: null,
    needId: true,
    debugId: 1008,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js',
    rawRequest: './utils/parseURL.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: undefined,
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/utils/parseURL.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/utils/parseURL.js',
      __innerRequest: './client/utils/parseURL.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: 'import getCurrentScriptSource from "./getCurrentScriptSource.js";\n' +
        '/**\n' +
        ' * @param {string} resourceQuery\n' +
        ' * @returns {{ [key: string]: string | boolean }}\n' +
        ' */\n' +
        '\n' +
        'function parseURL(resourceQuery) {\n' +
        '  /** @type {{ [key: string]: string }} */\n' +
        '  var options = {};\n' +
        '\n' +
        '  if (typeof resourceQuery === "string" && resourceQuery !== "") {\n' +
        '    var searchParams = resourceQuery.substr(1).split("&");\n' +
        '\n' +
        '    for (var i = 0; i < searchParams.length; i++) {\n' +
        '      var pair = searchParams[i].split("=");\n' +
        '      options[pair[0]] = decodeURIComponent(pair[1]);\n' +
        '    }\n' +
        '  } else {\n' +
        '    // Else, get the url from the <script> this file was called with.\n' +
        '    var scriptSource = getCurrentScriptSource();\n' +
        '    var scriptSourceURL;\n' +
        '\n' +
        '    try {\n' +
        '      // The placeholder `baseURL` with `window.location.href`,\n' +
        '      // is to allow parsing of path-relative or protocol-relative URLs,\n' +
        '      // and will have no effect if `scriptSource` is a fully valid URL.\n' +
        '      scriptSourceURL = new URL(scriptSource, self.location.href);\n' +
        '    } catch (error) {// URL parsing failed, do nothing.\n' +
        '      // We will still proceed to see if we can recover using `resourceQuery`\n' +
        '    }\n' +
        '\n' +
        '    if (scriptSourceURL) {\n' +
        '      options = scriptSourceURL;\n' +
        '      options.fromCurrentScript = true;\n' +
        '    }\n' +
        '  }\n' +
        '\n' +
        '  return options;\n' +
        '}\n' +
        '\n' +
        'export default parseURL;',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/utils/parseURL.js'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 24,
      _statTestedSnapshotsCached: 2,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 106,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 18,
      _willEnsureProcessing: true,
      _needProcessing: true,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log-apply-result.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/emitter.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/sendMessage.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/createSocketURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/strip-ansi/index.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  }
}
source :  webpack/hot/emitter.js
 parser.state :  {
  source: 'import hotEmitter from "webpack/hot/emitter.js";\n' +
    'import { log } from "./log.js";\n' +
    '/** @typedef {import("../index").Options} Options\n' +
    '/** @typedef {import("../index").Status} Status\n' +
    '\n' +
    '/**\n' +
    ' * @param {Options} options\n' +
    ' * @param {Status} status\n' +
    ' */\n' +
    '\n' +
    'function reloadApp(_ref, status) {\n' +
    '  var hot = _ref.hot,\n' +
    '      liveReload = _ref.liveReload;\n' +
    '\n' +
    '  if (status.isUnloading) {\n' +
    '    return;\n' +
    '  }\n' +
    '\n' +
    '  var currentHash = status.currentHash,\n' +
    '      previousHash = status.previousHash;\n' +
    '  var isInitial = currentHash.indexOf(\n' +
    '  /** @type {string} */\n' +
    '  previousHash) >= 0;\n' +
    '\n' +
    '  if (isInitial) {\n' +
    '    return;\n' +
    '  }\n' +
    '  /**\n' +
    '   * @param {Window} rootWindow\n' +
    '   * @param {number} intervalId\n' +
    '   */\n' +
    '\n' +
    '\n' +
    '  function applyReload(rootWindow, intervalId) {\n' +
    '    clearInterval(intervalId);\n' +
    '    log.info("App updated. Reloading...");\n' +
    '    rootWindow.location.reload();\n' +
    '  }\n' +
    '\n' +
    '  var search = self.location.search.toLowerCase();\n' +
    '  var allowToHot = search.indexOf("webpack-dev-server-hot=false") === -1;\n' +
    '  var allowToLiveReload = search.indexOf("webpack-dev-server-live-reload=false") === -1;\n' +
    '\n' +
    '  if (hot && allowToHot) {\n' +
    '    log.info("App hot update...");\n' +
    '    hotEmitter.emit("webpackHotUpdate", status.currentHash);\n' +
    '\n' +
    '    if (typeof self !== "undefined" && self.window) {\n' +
    '      // broadcast update to window\n' +
    '      self.postMessage("webpackHotUpdate".concat(status.currentHash), "*");\n' +
    '    }\n' +
    "  } // allow refreshing the page only if liveReload isn't disabled\n" +
    '  else if (liveReload && allowToLiveReload) {\n' +
    "    var rootWindow = self; // use parent window for reload (in case we're in an iframe with no valid src)\n" +
    '\n' +
    '    var intervalId = self.setInterval(function () {\n' +
    '      if (rootWindow.location.protocol !== "about:") {\n' +
    '        // reload immediately if protocol is valid\n' +
    '        applyReload(rootWindow, intervalId);\n' +
    '      } else {\n' +
    '        rootWindow = rootWindow.parent;\n' +
    '\n' +
    '        if (rootWindow.parent === rootWindow) {\n' +
    "          // if parent equals current window we've reached the root which would continue forever, so trigger a reload anyways\n" +
    '          applyReload(rootWindow, intervalId);\n' +
    '        }\n' +
    '      }\n' +
    '    });\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'export default reloadApp;',
  current: NormalModule {
    dependencies: [],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils',
    layer: null,
    needId: true,
    debugId: 1011,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js',
    rawRequest: './utils/reloadApp.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: undefined,
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/utils/reloadApp.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/utils/reloadApp.js',
      __innerRequest: './client/utils/reloadApp.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: 'import hotEmitter from "webpack/hot/emitter.js";\n' +
        'import { log } from "./log.js";\n' +
        '/** @typedef {import("../index").Options} Options\n' +
        '/** @typedef {import("../index").Status} Status\n' +
        '\n' +
        '/**\n' +
        ' * @param {Options} options\n' +
        ' * @param {Status} status\n' +
        ' */\n' +
        '\n' +
        'function reloadApp(_ref, status) {\n' +
        '  var hot = _ref.hot,\n' +
        '      liveReload = _ref.liveReload;\n' +
        '\n' +
        '  if (status.isUnloading) {\n' +
        '    return;\n' +
        '  }\n' +
        '\n' +
        '  var currentHash = status.currentHash,\n' +
        '      previousHash = status.previousHash;\n' +
        '  var isInitial = currentHash.indexOf(\n' +
        '  /** @type {string} */\n' +
        '  previousHash) >= 0;\n' +
        '\n' +
        '  if (isInitial) {\n' +
        '    return;\n' +
        '  }\n' +
        '  /**\n' +
        '   * @param {Window} rootWindow\n' +
        '   * @param {number} intervalId\n' +
        '   */\n' +
        '\n' +
        '\n' +
        '  function applyReload(rootWindow, intervalId) {\n' +
        '    clearInterval(intervalId);\n' +
        '    log.info("App updated. Reloading...");\n' +
        '    rootWindow.location.reload();\n' +
        '  }\n' +
        '\n' +
        '  var search = self.location.search.toLowerCase();\n' +
        '  var allowToHot = search.indexOf("webpack-dev-server-hot=false") === -1;\n' +
        '  var allowToLiveReload = search.indexOf("webpack-dev-server-live-reload=false") === -1;\n' +
        '\n' +
        '  if (hot && allowToHot) {\n' +
        '    log.info("App hot update...");\n' +
        '    hotEmitter.emit("webpackHotUpdate", status.currentHash);\n' +
        '\n' +
        '    if (typeof self !== "undefined" && self.window) {\n' +
        '      // broadcast update to window\n' +
        '      self.postMessage("webpackHotUpdate".concat(status.currentHash), "*");\n' +
        '    }\n' +
        "  } // allow refreshing the page only if liveReload isn't disabled\n" +
        '  else if (liveReload && allowToLiveReload) {\n' +
        "    var rootWindow = self; // use parent window for reload (in case we're in an iframe with no valid src)\n" +
        '\n' +
        '    var intervalId = self.setInterval(function () {\n' +
        '      if (rootWindow.location.protocol !== "about:") {\n' +
        '        // reload immediately if protocol is valid\n' +
        '        applyReload(rootWindow, intervalId);\n' +
        '      } else {\n' +
        '        rootWindow = rootWindow.parent;\n' +
        '\n' +
        '        if (rootWindow.parent === rootWindow) {\n' +
        "          // if parent equals current window we've reached the root which would continue forever, so trigger a reload anyways\n" +
        '          applyReload(rootWindow, intervalId);\n' +
        '        }\n' +
        '      }\n' +
        '    });\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'export default reloadApp;',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/utils/reloadApp.js'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils',
    layer: null,
    needId: true,
    debugId: 1011,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js',
    rawRequest: './utils/reloadApp.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: undefined,
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/utils/reloadApp.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/utils/reloadApp.js',
      __innerRequest: './client/utils/reloadApp.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: 'import hotEmitter from "webpack/hot/emitter.js";\n' +
        'import { log } from "./log.js";\n' +
        '/** @typedef {import("../index").Options} Options\n' +
        '/** @typedef {import("../index").Status} Status\n' +
        '\n' +
        '/**\n' +
        ' * @param {Options} options\n' +
        ' * @param {Status} status\n' +
        ' */\n' +
        '\n' +
        'function reloadApp(_ref, status) {\n' +
        '  var hot = _ref.hot,\n' +
        '      liveReload = _ref.liveReload;\n' +
        '\n' +
        '  if (status.isUnloading) {\n' +
        '    return;\n' +
        '  }\n' +
        '\n' +
        '  var currentHash = status.currentHash,\n' +
        '      previousHash = status.previousHash;\n' +
        '  var isInitial = currentHash.indexOf(\n' +
        '  /** @type {string} */\n' +
        '  previousHash) >= 0;\n' +
        '\n' +
        '  if (isInitial) {\n' +
        '    return;\n' +
        '  }\n' +
        '  /**\n' +
        '   * @param {Window} rootWindow\n' +
        '   * @param {number} intervalId\n' +
        '   */\n' +
        '\n' +
        '\n' +
        '  function applyReload(rootWindow, intervalId) {\n' +
        '    clearInterval(intervalId);\n' +
        '    log.info("App updated. Reloading...");\n' +
        '    rootWindow.location.reload();\n' +
        '  }\n' +
        '\n' +
        '  var search = self.location.search.toLowerCase();\n' +
        '  var allowToHot = search.indexOf("webpack-dev-server-hot=false") === -1;\n' +
        '  var allowToLiveReload = search.indexOf("webpack-dev-server-live-reload=false") === -1;\n' +
        '\n' +
        '  if (hot && allowToHot) {\n' +
        '    log.info("App hot update...");\n' +
        '    hotEmitter.emit("webpackHotUpdate", status.currentHash);\n' +
        '\n' +
        '    if (typeof self !== "undefined" && self.window) {\n' +
        '      // broadcast update to window\n' +
        '      self.postMessage("webpackHotUpdate".concat(status.currentHash), "*");\n' +
        '    }\n' +
        "  } // allow refreshing the page only if liveReload isn't disabled\n" +
        '  else if (liveReload && allowToLiveReload) {\n' +
        "    var rootWindow = self; // use parent window for reload (in case we're in an iframe with no valid src)\n" +
        '\n' +
        '    var intervalId = self.setInterval(function () {\n' +
        '      if (rootWindow.location.protocol !== "about:") {\n' +
        '        // reload immediately if protocol is valid\n' +
        '        applyReload(rootWindow, intervalId);\n' +
        '      } else {\n' +
        '        rootWindow = rootWindow.parent;\n' +
        '\n' +
        '        if (rootWindow.parent === rootWindow) {\n' +
        "          // if parent equals current window we've reached the root which would continue forever, so trigger a reload anyways\n" +
        '          applyReload(rootWindow, intervalId);\n' +
        '        }\n' +
        '      }\n' +
        '    });\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'export default reloadApp;',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/utils/reloadApp.js'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 26,
      _statTestedSnapshotsCached: 2,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 106,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 16,
      _willEnsureProcessing: true,
      _needProcessing: true,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log-apply-result.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/emitter.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/sendMessage.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/createSocketURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/strip-ansi/index.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  }
}
source :  ./log.js
 parser.state :  {
  source: 'import hotEmitter from "webpack/hot/emitter.js";\n' +
    'import { log } from "./log.js";\n' +
    '/** @typedef {import("../index").Options} Options\n' +
    '/** @typedef {import("../index").Status} Status\n' +
    '\n' +
    '/**\n' +
    ' * @param {Options} options\n' +
    ' * @param {Status} status\n' +
    ' */\n' +
    '\n' +
    'function reloadApp(_ref, status) {\n' +
    '  var hot = _ref.hot,\n' +
    '      liveReload = _ref.liveReload;\n' +
    '\n' +
    '  if (status.isUnloading) {\n' +
    '    return;\n' +
    '  }\n' +
    '\n' +
    '  var currentHash = status.currentHash,\n' +
    '      previousHash = status.previousHash;\n' +
    '  var isInitial = currentHash.indexOf(\n' +
    '  /** @type {string} */\n' +
    '  previousHash) >= 0;\n' +
    '\n' +
    '  if (isInitial) {\n' +
    '    return;\n' +
    '  }\n' +
    '  /**\n' +
    '   * @param {Window} rootWindow\n' +
    '   * @param {number} intervalId\n' +
    '   */\n' +
    '\n' +
    '\n' +
    '  function applyReload(rootWindow, intervalId) {\n' +
    '    clearInterval(intervalId);\n' +
    '    log.info("App updated. Reloading...");\n' +
    '    rootWindow.location.reload();\n' +
    '  }\n' +
    '\n' +
    '  var search = self.location.search.toLowerCase();\n' +
    '  var allowToHot = search.indexOf("webpack-dev-server-hot=false") === -1;\n' +
    '  var allowToLiveReload = search.indexOf("webpack-dev-server-live-reload=false") === -1;\n' +
    '\n' +
    '  if (hot && allowToHot) {\n' +
    '    log.info("App hot update...");\n' +
    '    hotEmitter.emit("webpackHotUpdate", status.currentHash);\n' +
    '\n' +
    '    if (typeof self !== "undefined" && self.window) {\n' +
    '      // broadcast update to window\n' +
    '      self.postMessage("webpackHotUpdate".concat(status.currentHash), "*");\n' +
    '    }\n' +
    "  } // allow refreshing the page only if liveReload isn't disabled\n" +
    '  else if (liveReload && allowToLiveReload) {\n' +
    "    var rootWindow = self; // use parent window for reload (in case we're in an iframe with no valid src)\n" +
    '\n' +
    '    var intervalId = self.setInterval(function () {\n' +
    '      if (rootWindow.location.protocol !== "about:") {\n' +
    '        // reload immediately if protocol is valid\n' +
    '        applyReload(rootWindow, intervalId);\n' +
    '      } else {\n' +
    '        rootWindow = rootWindow.parent;\n' +
    '\n' +
    '        if (rootWindow.parent === rootWindow) {\n' +
    "          // if parent equals current window we've reached the root which would continue forever, so trigger a reload anyways\n" +
    '          applyReload(rootWindow, intervalId);\n' +
    '        }\n' +
    '      }\n' +
    '    });\n' +
    '  }\n' +
    '}\n' +
    '\n' +
    'export default reloadApp;',
  current: NormalModule {
    dependencies: [ [HarmonyImportSideEffectDependency] ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils',
    layer: null,
    needId: true,
    debugId: 1011,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency], [ConstDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js',
    rawRequest: './utils/reloadApp.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/utils/reloadApp.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/utils/reloadApp.js',
      __innerRequest: './client/utils/reloadApp.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: 'import hotEmitter from "webpack/hot/emitter.js";\n' +
        'import { log } from "./log.js";\n' +
        '/** @typedef {import("../index").Options} Options\n' +
        '/** @typedef {import("../index").Status} Status\n' +
        '\n' +
        '/**\n' +
        ' * @param {Options} options\n' +
        ' * @param {Status} status\n' +
        ' */\n' +
        '\n' +
        'function reloadApp(_ref, status) {\n' +
        '  var hot = _ref.hot,\n' +
        '      liveReload = _ref.liveReload;\n' +
        '\n' +
        '  if (status.isUnloading) {\n' +
        '    return;\n' +
        '  }\n' +
        '\n' +
        '  var currentHash = status.currentHash,\n' +
        '      previousHash = status.previousHash;\n' +
        '  var isInitial = currentHash.indexOf(\n' +
        '  /** @type {string} */\n' +
        '  previousHash) >= 0;\n' +
        '\n' +
        '  if (isInitial) {\n' +
        '    return;\n' +
        '  }\n' +
        '  /**\n' +
        '   * @param {Window} rootWindow\n' +
        '   * @param {number} intervalId\n' +
        '   */\n' +
        '\n' +
        '\n' +
        '  function applyReload(rootWindow, intervalId) {\n' +
        '    clearInterval(intervalId);\n' +
        '    log.info("App updated. Reloading...");\n' +
        '    rootWindow.location.reload();\n' +
        '  }\n' +
        '\n' +
        '  var search = self.location.search.toLowerCase();\n' +
        '  var allowToHot = search.indexOf("webpack-dev-server-hot=false") === -1;\n' +
        '  var allowToLiveReload = search.indexOf("webpack-dev-server-live-reload=false") === -1;\n' +
        '\n' +
        '  if (hot && allowToHot) {\n' +
        '    log.info("App hot update...");\n' +
        '    hotEmitter.emit("webpackHotUpdate", status.currentHash);\n' +
        '\n' +
        '    if (typeof self !== "undefined" && self.window) {\n' +
        '      // broadcast update to window\n' +
        '      self.postMessage("webpackHotUpdate".concat(status.currentHash), "*");\n' +
        '    }\n' +
        "  } // allow refreshing the page only if liveReload isn't disabled\n" +
        '  else if (liveReload && allowToLiveReload) {\n' +
        "    var rootWindow = self; // use parent window for reload (in case we're in an iframe with no valid src)\n" +
        '\n' +
        '    var intervalId = self.setInterval(function () {\n' +
        '      if (rootWindow.location.protocol !== "about:") {\n' +
        '        // reload immediately if protocol is valid\n' +
        '        applyReload(rootWindow, intervalId);\n' +
        '      } else {\n' +
        '        rootWindow = rootWindow.parent;\n' +
        '\n' +
        '        if (rootWindow.parent === rootWindow) {\n' +
        "          // if parent equals current window we've reached the root which would continue forever, so trigger a reload anyways\n" +
        '          applyReload(rootWindow, intervalId);\n' +
        '        }\n' +
        '      }\n' +
        '    });\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'export default reloadApp;',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/utils/reloadApp.js'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [ [HarmonyImportSideEffectDependency] ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils',
    layer: null,
    needId: true,
    debugId: 1011,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency], [ConstDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js',
    rawRequest: './utils/reloadApp.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/utils/reloadApp.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/utils/reloadApp.js',
      __innerRequest: './client/utils/reloadApp.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: 'import hotEmitter from "webpack/hot/emitter.js";\n' +
        'import { log } from "./log.js";\n' +
        '/** @typedef {import("../index").Options} Options\n' +
        '/** @typedef {import("../index").Status} Status\n' +
        '\n' +
        '/**\n' +
        ' * @param {Options} options\n' +
        ' * @param {Status} status\n' +
        ' */\n' +
        '\n' +
        'function reloadApp(_ref, status) {\n' +
        '  var hot = _ref.hot,\n' +
        '      liveReload = _ref.liveReload;\n' +
        '\n' +
        '  if (status.isUnloading) {\n' +
        '    return;\n' +
        '  }\n' +
        '\n' +
        '  var currentHash = status.currentHash,\n' +
        '      previousHash = status.previousHash;\n' +
        '  var isInitial = currentHash.indexOf(\n' +
        '  /** @type {string} */\n' +
        '  previousHash) >= 0;\n' +
        '\n' +
        '  if (isInitial) {\n' +
        '    return;\n' +
        '  }\n' +
        '  /**\n' +
        '   * @param {Window} rootWindow\n' +
        '   * @param {number} intervalId\n' +
        '   */\n' +
        '\n' +
        '\n' +
        '  function applyReload(rootWindow, intervalId) {\n' +
        '    clearInterval(intervalId);\n' +
        '    log.info("App updated. Reloading...");\n' +
        '    rootWindow.location.reload();\n' +
        '  }\n' +
        '\n' +
        '  var search = self.location.search.toLowerCase();\n' +
        '  var allowToHot = search.indexOf("webpack-dev-server-hot=false") === -1;\n' +
        '  var allowToLiveReload = search.indexOf("webpack-dev-server-live-reload=false") === -1;\n' +
        '\n' +
        '  if (hot && allowToHot) {\n' +
        '    log.info("App hot update...");\n' +
        '    hotEmitter.emit("webpackHotUpdate", status.currentHash);\n' +
        '\n' +
        '    if (typeof self !== "undefined" && self.window) {\n' +
        '      // broadcast update to window\n' +
        '      self.postMessage("webpackHotUpdate".concat(status.currentHash), "*");\n' +
        '    }\n' +
        "  } // allow refreshing the page only if liveReload isn't disabled\n" +
        '  else if (liveReload && allowToLiveReload) {\n' +
        "    var rootWindow = self; // use parent window for reload (in case we're in an iframe with no valid src)\n" +
        '\n' +
        '    var intervalId = self.setInterval(function () {\n' +
        '      if (rootWindow.location.protocol !== "about:") {\n' +
        '        // reload immediately if protocol is valid\n' +
        '        applyReload(rootWindow, intervalId);\n' +
        '      } else {\n' +
        '        rootWindow = rootWindow.parent;\n' +
        '\n' +
        '        if (rootWindow.parent === rootWindow) {\n' +
        "          // if parent equals current window we've reached the root which would continue forever, so trigger a reload anyways\n" +
        '          applyReload(rootWindow, intervalId);\n' +
        '        }\n' +
        '      }\n' +
        '    });\n' +
        '  }\n' +
        '}\n' +
        '\n' +
        'export default reloadApp;',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/utils/reloadApp.js'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 26,
      _statTestedSnapshotsCached: 2,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 106,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 16,
      _willEnsureProcessing: true,
      _needProcessing: true,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log-apply-result.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/emitter.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/sendMessage.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/createSocketURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/strip-ansi/index.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  },
  lastHarmonyImportOrder: 1
}
source :  ../modules/logger/index.js
 parser.state :  {
  source: 'import logger from "../modules/logger/index.js";\n' +
    'var name = "webpack-dev-server"; // default level is set on the client side, so it does not need\n' +
    '// to be set by the CLI or API\n' +
    '\n' +
    'var defaultLevel = "info"; // options new options, merge with old options\n' +
    '\n' +
    '/**\n' +
    ' * @param {false | true | "none" | "error" | "warn" | "info" | "log" | "verbose"} level\n' +
    ' * @returns {void}\n' +
    ' */\n' +
    '\n' +
    'function setLogLevel(level) {\n' +
    '  logger.configureDefaultLogger({\n' +
    '    level: level\n' +
    '  });\n' +
    '}\n' +
    '\n' +
    'setLogLevel(defaultLevel);\n' +
    'var log = logger.getLogger(name);\n' +
    'export { log, setLogLevel };',
  current: NormalModule {
    dependencies: [],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils',
    layer: null,
    needId: true,
    debugId: 1010,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js',
    rawRequest: './utils/log.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: undefined,
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/utils/log.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/utils/log.js',
      __innerRequest: './client/utils/log.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: 'import logger from "../modules/logger/index.js";\n' +
        'var name = "webpack-dev-server"; // default level is set on the client side, so it does not need\n' +
        '// to be set by the CLI or API\n' +
        '\n' +
        'var defaultLevel = "info"; // options new options, merge with old options\n' +
        '\n' +
        '/**\n' +
        ' * @param {false | true | "none" | "error" | "warn" | "info" | "log" | "verbose"} level\n' +
        ' * @returns {void}\n' +
        ' */\n' +
        '\n' +
        'function setLogLevel(level) {\n' +
        '  logger.configureDefaultLogger({\n' +
        '    level: level\n' +
        '  });\n' +
        '}\n' +
        '\n' +
        'setLogLevel(defaultLevel);\n' +
        'var log = logger.getLogger(name);\n' +
        'export { log, setLogLevel };',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/utils/log.js'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils',
    layer: null,
    needId: true,
    debugId: 1010,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js',
    rawRequest: './utils/log.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: undefined,
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/utils/log.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/utils/log.js',
      __innerRequest: './client/utils/log.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: 'import logger from "../modules/logger/index.js";\n' +
        'var name = "webpack-dev-server"; // default level is set on the client side, so it does not need\n' +
        '// to be set by the CLI or API\n' +
        '\n' +
        'var defaultLevel = "info"; // options new options, merge with old options\n' +
        '\n' +
        '/**\n' +
        ' * @param {false | true | "none" | "error" | "warn" | "info" | "log" | "verbose"} level\n' +
        ' * @returns {void}\n' +
        ' */\n' +
        '\n' +
        'function setLogLevel(level) {\n' +
        '  logger.configureDefaultLogger({\n' +
        '    level: level\n' +
        '  });\n' +
        '}\n' +
        '\n' +
        'setLogLevel(defaultLevel);\n' +
        'var log = logger.getLogger(name);\n' +
        'export { log, setLogLevel };',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/utils/log.js'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 27,
      _statTestedSnapshotsCached: 2,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 106,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 15,
      _willEnsureProcessing: true,
      _needProcessing: true,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log-apply-result.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/emitter.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/sendMessage.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/createSocketURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/strip-ansi/index.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  }
}
source :  ./header.scss
 parser.state :  {
  source: 'import "./header.scss";\n' +
    'import "./header.html";\n' +
    'import "./nav.html";\n' +
    'import "./topbar.html";',
  current: NormalModule {
    dependencies: [],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/src/appson/header',
    layer: null,
    needId: true,
    debugId: 1019,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: [LazySet],
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    rawRequest: './header/header.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: undefined,
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder',
      relativePath: './src/appson/header/header.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './src/appson/header/header.js',
      __innerRequest: './src/appson/header/header.js'
    },
    matchResource: undefined,
    loaders: [ [Object] ],
    error: null,
    _source: SourceMapSource {
      _valueAsString: 'import "./header.scss";\n' +
        'import "./header.html";\n' +
        'import "./nav.html";\n' +
        'import "./topbar.html";',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!./src/appson/header/header.js',
      _hasSourceMap: true,
      _sourceMapAsObject: [Object],
      _sourceMapAsString: undefined,
      _sourceMapAsBuffer: undefined,
      _hasOriginalSource: false,
      _originalSourceAsString: undefined,
      _originalSourceAsBuffer: undefined,
      _hasInnerSourceMap: false,
      _innerSourceMapAsObject: undefined,
      _innerSourceMapAsString: undefined,
      _innerSourceMapAsBuffer: undefined,
      _removeOriginalSource: undefined
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/src/appson/header',
    layer: null,
    needId: true,
    debugId: 1019,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: [LazySet],
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    rawRequest: './header/header.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: undefined,
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder',
      relativePath: './src/appson/header/header.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './src/appson/header/header.js',
      __innerRequest: './src/appson/header/header.js'
    },
    matchResource: undefined,
    loaders: [ [Object] ],
    error: null,
    _source: SourceMapSource {
      _valueAsString: 'import "./header.scss";\n' +
        'import "./header.html";\n' +
        'import "./nav.html";\n' +
        'import "./topbar.html";',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!./src/appson/header/header.js',
      _hasSourceMap: true,
      _sourceMapAsObject: [Object],
      _sourceMapAsString: undefined,
      _sourceMapAsBuffer: undefined,
      _hasOriginalSource: false,
      _originalSourceAsString: undefined,
      _originalSourceAsBuffer: undefined,
      _hasInnerSourceMap: false,
      _innerSourceMapAsObject: undefined,
      _innerSourceMapAsString: undefined,
      _innerSourceMapAsBuffer: undefined,
      _removeOriginalSource: undefined
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 37,
      _statTestedSnapshotsCached: 3,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 108,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 15,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log-apply-result.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/emitter.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/sendMessage.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/createSocketURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/strip-ansi/index.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/header/header.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/clients/WebSocketClient.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/logger/index.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  }
}
source :  ./header.html
 parser.state :  {
  source: 'import "./header.scss";\n' +
    'import "./header.html";\n' +
    'import "./nav.html";\n' +
    'import "./topbar.html";',
  current: NormalModule {
    dependencies: [ [HarmonyImportSideEffectDependency] ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/src/appson/header',
    layer: null,
    needId: true,
    debugId: 1019,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: [LazySet],
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency], [ConstDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    rawRequest: './header/header.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder',
      relativePath: './src/appson/header/header.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './src/appson/header/header.js',
      __innerRequest: './src/appson/header/header.js'
    },
    matchResource: undefined,
    loaders: [ [Object] ],
    error: null,
    _source: SourceMapSource {
      _valueAsString: 'import "./header.scss";\n' +
        'import "./header.html";\n' +
        'import "./nav.html";\n' +
        'import "./topbar.html";',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!./src/appson/header/header.js',
      _hasSourceMap: true,
      _sourceMapAsObject: [Object],
      _sourceMapAsString: undefined,
      _sourceMapAsBuffer: undefined,
      _hasOriginalSource: false,
      _originalSourceAsString: undefined,
      _originalSourceAsBuffer: undefined,
      _hasInnerSourceMap: false,
      _innerSourceMapAsObject: undefined,
      _innerSourceMapAsString: undefined,
      _innerSourceMapAsBuffer: undefined,
      _removeOriginalSource: undefined
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [ [HarmonyImportSideEffectDependency] ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/src/appson/header',
    layer: null,
    needId: true,
    debugId: 1019,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: [LazySet],
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency], [ConstDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    rawRequest: './header/header.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder',
      relativePath: './src/appson/header/header.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './src/appson/header/header.js',
      __innerRequest: './src/appson/header/header.js'
    },
    matchResource: undefined,
    loaders: [ [Object] ],
    error: null,
    _source: SourceMapSource {
      _valueAsString: 'import "./header.scss";\n' +
        'import "./header.html";\n' +
        'import "./nav.html";\n' +
        'import "./topbar.html";',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!./src/appson/header/header.js',
      _hasSourceMap: true,
      _sourceMapAsObject: [Object],
      _sourceMapAsString: undefined,
      _sourceMapAsBuffer: undefined,
      _hasOriginalSource: false,
      _originalSourceAsString: undefined,
      _originalSourceAsBuffer: undefined,
      _hasInnerSourceMap: false,
      _innerSourceMapAsObject: undefined,
      _innerSourceMapAsString: undefined,
      _innerSourceMapAsBuffer: undefined,
      _removeOriginalSource: undefined
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 37,
      _statTestedSnapshotsCached: 3,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 108,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 15,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log-apply-result.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/emitter.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/sendMessage.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/createSocketURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/strip-ansi/index.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/header/header.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/clients/WebSocketClient.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/logger/index.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  },
  lastHarmonyImportOrder: 1
}
source :  ./nav.html
 parser.state :  {
  source: 'import "./header.scss";\n' +
    'import "./header.html";\n' +
    'import "./nav.html";\n' +
    'import "./topbar.html";',
  current: NormalModule {
    dependencies: [
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency]
    ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/src/appson/header',
    layer: null,
    needId: true,
    debugId: 1019,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: [LazySet],
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [
      [HarmonyCompatibilityDependency],
      [ConstDependency],
      [ConstDependency]
    ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    rawRequest: './header/header.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder',
      relativePath: './src/appson/header/header.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './src/appson/header/header.js',
      __innerRequest: './src/appson/header/header.js'
    },
    matchResource: undefined,
    loaders: [ [Object] ],
    error: null,
    _source: SourceMapSource {
      _valueAsString: 'import "./header.scss";\n' +
        'import "./header.html";\n' +
        'import "./nav.html";\n' +
        'import "./topbar.html";',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!./src/appson/header/header.js',
      _hasSourceMap: true,
      _sourceMapAsObject: [Object],
      _sourceMapAsString: undefined,
      _sourceMapAsBuffer: undefined,
      _hasOriginalSource: false,
      _originalSourceAsString: undefined,
      _originalSourceAsBuffer: undefined,
      _hasInnerSourceMap: false,
      _innerSourceMapAsObject: undefined,
      _innerSourceMapAsString: undefined,
      _innerSourceMapAsBuffer: undefined,
      _removeOriginalSource: undefined
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency]
    ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/src/appson/header',
    layer: null,
    needId: true,
    debugId: 1019,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: [LazySet],
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [
      [HarmonyCompatibilityDependency],
      [ConstDependency],
      [ConstDependency]
    ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    rawRequest: './header/header.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder',
      relativePath: './src/appson/header/header.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './src/appson/header/header.js',
      __innerRequest: './src/appson/header/header.js'
    },
    matchResource: undefined,
    loaders: [ [Object] ],
    error: null,
    _source: SourceMapSource {
      _valueAsString: 'import "./header.scss";\n' +
        'import "./header.html";\n' +
        'import "./nav.html";\n' +
        'import "./topbar.html";',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!./src/appson/header/header.js',
      _hasSourceMap: true,
      _sourceMapAsObject: [Object],
      _sourceMapAsString: undefined,
      _sourceMapAsBuffer: undefined,
      _hasOriginalSource: false,
      _originalSourceAsString: undefined,
      _originalSourceAsBuffer: undefined,
      _hasInnerSourceMap: false,
      _innerSourceMapAsObject: undefined,
      _innerSourceMapAsString: undefined,
      _innerSourceMapAsBuffer: undefined,
      _removeOriginalSource: undefined
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 37,
      _statTestedSnapshotsCached: 3,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 108,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 15,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log-apply-result.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/emitter.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/sendMessage.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/createSocketURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/strip-ansi/index.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/header/header.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/clients/WebSocketClient.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/logger/index.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  },
  lastHarmonyImportOrder: 2
}
source :  ./topbar.html
 parser.state :  {
  source: 'import "./header.scss";\n' +
    'import "./header.html";\n' +
    'import "./nav.html";\n' +
    'import "./topbar.html";',
  current: NormalModule {
    dependencies: [
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency]
    ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/src/appson/header',
    layer: null,
    needId: true,
    debugId: 1019,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: [LazySet],
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [
      [HarmonyCompatibilityDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency]
    ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    rawRequest: './header/header.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder',
      relativePath: './src/appson/header/header.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './src/appson/header/header.js',
      __innerRequest: './src/appson/header/header.js'
    },
    matchResource: undefined,
    loaders: [ [Object] ],
    error: null,
    _source: SourceMapSource {
      _valueAsString: 'import "./header.scss";\n' +
        'import "./header.html";\n' +
        'import "./nav.html";\n' +
        'import "./topbar.html";',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!./src/appson/header/header.js',
      _hasSourceMap: true,
      _sourceMapAsObject: [Object],
      _sourceMapAsString: undefined,
      _sourceMapAsBuffer: undefined,
      _hasOriginalSource: false,
      _originalSourceAsString: undefined,
      _originalSourceAsBuffer: undefined,
      _hasInnerSourceMap: false,
      _innerSourceMapAsObject: undefined,
      _innerSourceMapAsString: undefined,
      _innerSourceMapAsBuffer: undefined,
      _removeOriginalSource: undefined
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency],
      [HarmonyImportSideEffectDependency]
    ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/src/appson/header',
    layer: null,
    needId: true,
    debugId: 1019,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: [LazySet],
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [
      [HarmonyCompatibilityDependency],
      [ConstDependency],
      [ConstDependency],
      [ConstDependency]
    ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    rawRequest: './header/header.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder',
      relativePath: './src/appson/header/header.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './src/appson/header/header.js',
      __innerRequest: './src/appson/header/header.js'
    },
    matchResource: undefined,
    loaders: [ [Object] ],
    error: null,
    _source: SourceMapSource {
      _valueAsString: 'import "./header.scss";\n' +
        'import "./header.html";\n' +
        'import "./nav.html";\n' +
        'import "./topbar.html";',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!./src/appson/header/header.js',
      _hasSourceMap: true,
      _sourceMapAsObject: [Object],
      _sourceMapAsString: undefined,
      _sourceMapAsBuffer: undefined,
      _hasOriginalSource: false,
      _originalSourceAsString: undefined,
      _originalSourceAsBuffer: undefined,
      _hasInnerSourceMap: false,
      _innerSourceMapAsObject: undefined,
      _innerSourceMapAsString: undefined,
      _innerSourceMapAsBuffer: undefined,
      _removeOriginalSource: undefined
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 37,
      _statTestedSnapshotsCached: 3,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 108,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 15,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log-apply-result.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/emitter.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/sendMessage.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/createSocketURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/strip-ansi/index.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/header/header.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/clients/WebSocketClient.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/logger/index.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  },
  lastHarmonyImportOrder: 3
}
source :  ../utils/log.js
 parser.state :  {
  source: 'function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n' +
    '\n' +
    'function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n' +
    '\n' +
    'function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n' +
    '\n' +
    'import { log } from "../utils/log.js";\n' +
    '\n' +
    'var WebSocketClient = /*#__PURE__*/function () {\n' +
    '  /**\n' +
    '   * @param {string} url\n' +
    '   */\n' +
    '  function WebSocketClient(url) {\n' +
    '    _classCallCheck(this, WebSocketClient);\n' +
    '\n' +
    '    this.client = new WebSocket(url);\n' +
    '\n' +
    '    this.client.onerror = function (error) {\n' +
    '      log.error(error);\n' +
    '    };\n' +
    '  }\n' +
    '  /**\n' +
    '   * @param {(...args: any[]) => void} f\n' +
    '   */\n' +
    '\n' +
    '\n' +
    '  _createClass(WebSocketClient, [{\n' +
    '    key: "onOpen",\n' +
    '    value: function onOpen(f) {\n' +
    '      this.client.onopen = f;\n' +
    '    }\n' +
    '    /**\n' +
    '     * @param {(...args: any[]) => void} f\n' +
    '     */\n' +
    '\n' +
    '  }, {\n' +
    '    key: "onClose",\n' +
    '    value: function onClose(f) {\n' +
    '      this.client.onclose = f;\n' +
    '    } // call f with the message string as the first argument\n' +
    '\n' +
    '    /**\n' +
    '     * @param {(...args: any[]) => void} f\n' +
    '     */\n' +
    '\n' +
    '  }, {\n' +
    '    key: "onMessage",\n' +
    '    value: function onMessage(f) {\n' +
    '      this.client.onmessage = function (e) {\n' +
    '        f(e.data);\n' +
    '      };\n' +
    '    }\n' +
    '  }]);\n' +
    '\n' +
    '  return WebSocketClient;\n' +
    '}();\n' +
    '\n' +
    'export { WebSocketClient as default };',
  current: NormalModule {
    dependencies: [],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/clients',
    layer: null,
    needId: true,
    debugId: 1021,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/clients/WebSocketClient.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/clients/WebSocketClient.js',
    rawRequest: './clients/WebSocketClient.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/clients/WebSocketClient.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/clients/WebSocketClient.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/clients/WebSocketClient.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/clients/WebSocketClient.js',
      __innerRequest: './client/clients/WebSocketClient.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: 'function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n' +
        '\n' +
        'function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n' +
        '\n' +
        'function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n' +
        '\n' +
        'import { log } from "../utils/log.js";\n' +
        '\n' +
        'var WebSocketClient = /*#__PURE__*/function () {\n' +
        '  /**\n' +
        '   * @param {string} url\n' +
        '   */\n' +
        '  function WebSocketClient(url) {\n' +
        '    _classCallCheck(this, WebSocketClient);\n' +
        '\n' +
        '    this.client = new WebSocket(url);\n' +
        '\n' +
        '    this.client.onerror = function (error) {\n' +
        '      log.error(error);\n' +
        '    };\n' +
        '  }\n' +
        '  /**\n' +
        '   * @param {(...args: any[]) => void} f\n' +
        '   */\n' +
        '\n' +
        '\n' +
        '  _createClass(WebSocketClient, [{\n' +
        '    key: "onOpen",\n' +
        '    value: function onOpen(f) {\n' +
        '      this.client.onopen = f;\n' +
        '    }\n' +
        '    /**\n' +
        '     * @param {(...args: any[]) => void} f\n' +
        '     */\n' +
        '\n' +
        '  }, {\n' +
        '    key: "onClose",\n' +
        '    value: function onClose(f) {\n' +
        '      this.client.onclose = f;\n' +
        '    } // call f with the message string as the first argument\n' +
        '\n' +
        '    /**\n' +
        '     * @param {(...args: any[]) => void} f\n' +
        '     */\n' +
        '\n' +
        '  }, {\n' +
        '    key: "onMessage",\n' +
        '    value: function onMessage(f) {\n' +
        '      this.client.onmessage = function (e) {\n' +
        '        f(e.data);\n' +
        '      };\n' +
        '    }\n' +
        '  }]);\n' +
        '\n' +
        '  return WebSocketClient;\n' +
        '}();\n' +
        '\n' +
        'export { WebSocketClient as default };',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/clients/WebSocketClient.js'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/clients',
    layer: null,
    needId: true,
    debugId: 1021,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: undefined,
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/clients/WebSocketClient.js',
    userRequest: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/clients/WebSocketClient.js',
    rawRequest: './clients/WebSocketClient.js',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/clients/WebSocketClient.js',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/clients/WebSocketClient.js',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server',
      relativePath: './client/clients/WebSocketClient.js',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './client/clients/WebSocketClient.js',
      __innerRequest: './client/clients/WebSocketClient.js'
    },
    matchResource: undefined,
    loaders: [],
    error: null,
    _source: OriginalSource {
      _value: 'function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n' +
        '\n' +
        'function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n' +
        '\n' +
        'function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }\n' +
        '\n' +
        'import { log } from "../utils/log.js";\n' +
        '\n' +
        'var WebSocketClient = /*#__PURE__*/function () {\n' +
        '  /**\n' +
        '   * @param {string} url\n' +
        '   */\n' +
        '  function WebSocketClient(url) {\n' +
        '    _classCallCheck(this, WebSocketClient);\n' +
        '\n' +
        '    this.client = new WebSocket(url);\n' +
        '\n' +
        '    this.client.onerror = function (error) {\n' +
        '      log.error(error);\n' +
        '    };\n' +
        '  }\n' +
        '  /**\n' +
        '   * @param {(...args: any[]) => void} f\n' +
        '   */\n' +
        '\n' +
        '\n' +
        '  _createClass(WebSocketClient, [{\n' +
        '    key: "onOpen",\n' +
        '    value: function onOpen(f) {\n' +
        '      this.client.onopen = f;\n' +
        '    }\n' +
        '    /**\n' +
        '     * @param {(...args: any[]) => void} f\n' +
        '     */\n' +
        '\n' +
        '  }, {\n' +
        '    key: "onClose",\n' +
        '    value: function onClose(f) {\n' +
        '      this.client.onclose = f;\n' +
        '    } // call f with the message string as the first argument\n' +
        '\n' +
        '    /**\n' +
        '     * @param {(...args: any[]) => void} f\n' +
        '     */\n' +
        '\n' +
        '  }, {\n' +
        '    key: "onMessage",\n' +
        '    value: function onMessage(f) {\n' +
        '      this.client.onmessage = function (e) {\n' +
        '        f(e.data);\n' +
        '      };\n' +
        '    }\n' +
        '  }]);\n' +
        '\n' +
        '  return WebSocketClient;\n' +
        '}();\n' +
        '\n' +
        'export { WebSocketClient as default };',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/webpack-dev-server/client/clients/WebSocketClient.js'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 39,
      _statTestedSnapshotsCached: 3,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 108,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 17,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log-apply-result.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/emitter.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/sendMessage.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/createSocketURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/strip-ansi/index.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/header/header.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/clients/WebSocketClient.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/logger/index.js' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  }
}
source :  ../../../node_modules/css-loader/dist/runtime/sourceMaps.js
 parser.state :  {
  source: '// Imports\n' +
    'import ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from "../../../node_modules/css-loader/dist/runtime/sourceMaps.js";\n' +
    'import ___CSS_LOADER_API_IMPORT___ from "../../../node_modules/css-loader/dist/runtime/api.js";\n' +
    'var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n' +
    '// Module\n' +
    '___CSS_LOADER_EXPORT___.push([module.id, "", "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);\n' +
    '// Exports\n' +
    'export default ___CSS_LOADER_EXPORT___;\n',
  current: NormalModule {
    dependencies: [],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/src/appson/header',
    layer: null,
    needId: true,
    debugId: 1035,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: [LazySet],
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!/siteweb/AppVuejs/theme-builder/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!/siteweb/AppVuejs/theme-builder/node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!/siteweb/AppVuejs/theme-builder/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
    userRequest: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss.webpack[javascript/auto]!=!/siteweb/AppVuejs/theme-builder/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!/siteweb/AppVuejs/theme-builder/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!/siteweb/AppVuejs/theme-builder/node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!/siteweb/AppVuejs/theme-builder/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
    rawRequest: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss.webpack[javascript/auto]!=!!!/siteweb/AppVuejs/theme-builder/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!/siteweb/AppVuejs/theme-builder/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!/siteweb/AppVuejs/theme-builder/node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!/siteweb/AppVuejs/theme-builder/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: undefined,
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder',
      relativePath: './src/appson/header/header.scss',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './src/appson/header/header.scss',
      __innerRequest: './src/appson/header/header.scss'
    },
    matchResource: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
    loaders: [ [Object], [Object], [Object], [Object] ],
    error: null,
    _source: OriginalSource {
      _value: '// Imports\n' +
        'import ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from "../../../node_modules/css-loader/dist/runtime/sourceMaps.js";\n' +
        'import ___CSS_LOADER_API_IMPORT___ from "../../../node_modules/css-loader/dist/runtime/api.js";\n' +
        'var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n' +
        '// Module\n' +
        '___CSS_LOADER_EXPORT___.push([module.id, "", "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);\n' +
        '// Exports\n' +
        'export default ___CSS_LOADER_EXPORT___;\n',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!./src/appson/header/header.scss'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/src/appson/header',
    layer: null,
    needId: true,
    debugId: 1035,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: [LazySet],
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!/siteweb/AppVuejs/theme-builder/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!/siteweb/AppVuejs/theme-builder/node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!/siteweb/AppVuejs/theme-builder/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
    userRequest: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss.webpack[javascript/auto]!=!/siteweb/AppVuejs/theme-builder/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!/siteweb/AppVuejs/theme-builder/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!/siteweb/AppVuejs/theme-builder/node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!/siteweb/AppVuejs/theme-builder/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
    rawRequest: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss.webpack[javascript/auto]!=!!!/siteweb/AppVuejs/theme-builder/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!/siteweb/AppVuejs/theme-builder/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!/siteweb/AppVuejs/theme-builder/node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!/siteweb/AppVuejs/theme-builder/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: undefined,
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder',
      relativePath: './src/appson/header/header.scss',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './src/appson/header/header.scss',
      __innerRequest: './src/appson/header/header.scss'
    },
    matchResource: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
    loaders: [ [Object], [Object], [Object], [Object] ],
    error: null,
    _source: OriginalSource {
      _value: '// Imports\n' +
        'import ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from "../../../node_modules/css-loader/dist/runtime/sourceMaps.js";\n' +
        'import ___CSS_LOADER_API_IMPORT___ from "../../../node_modules/css-loader/dist/runtime/api.js";\n' +
        'var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n' +
        '// Module\n' +
        '___CSS_LOADER_EXPORT___.push([module.id, "", "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);\n' +
        '// Exports\n' +
        'export default ___CSS_LOADER_EXPORT___;\n',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!./src/appson/header/header.scss'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 72,
      _statTestedSnapshotsCached: 3,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 103,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 4,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log-apply-result.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/emitter.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/sendMessage.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/createSocketURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/strip-ansi/index.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/header/header.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/clients/WebSocketClient.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/logger/index.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/ansi-html-community/index.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/html-entities/lib/index.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/events/events.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[1].use[0]!/siteweb/AppVuejs/theme-builder/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!/siteweb/AppVuejs/theme-builder/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!/siteweb/AppVuejs/theme-builder/node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!/siteweb/AppVuejs/theme-builder/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/html-loader/dist/cjs.js??ruleSet[1].rules[3].use[0]!/siteweb/AppVuejs/theme-builder/src/appson/header/header.html' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/html-loader/dist/cjs.js??ruleSet[1].rules[3].use[0]!/siteweb/AppVuejs/theme-builder/src/appson/header/nav.html' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/html-loader/dist/cjs.js??ruleSet[1].rules[3].use[0]!/siteweb/AppVuejs/theme-builder/src/appson/header/topbar.html' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/html-entities/lib/named-references.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/html-entities/lib/numeric-unicode-map.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/html-entities/lib/surrogate-pairs.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!/siteweb/AppVuejs/theme-builder/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!/siteweb/AppVuejs/theme-builder/node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!/siteweb/AppVuejs/theme-builder/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  }
}
source :  ../../../node_modules/css-loader/dist/runtime/api.js
 parser.state :  {
  source: '// Imports\n' +
    'import ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from "../../../node_modules/css-loader/dist/runtime/sourceMaps.js";\n' +
    'import ___CSS_LOADER_API_IMPORT___ from "../../../node_modules/css-loader/dist/runtime/api.js";\n' +
    'var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n' +
    '// Module\n' +
    '___CSS_LOADER_EXPORT___.push([module.id, "", "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);\n' +
    '// Exports\n' +
    'export default ___CSS_LOADER_EXPORT___;\n',
  current: NormalModule {
    dependencies: [ [HarmonyImportSideEffectDependency] ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/src/appson/header',
    layer: null,
    needId: true,
    debugId: 1035,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: [LazySet],
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency], [ConstDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!/siteweb/AppVuejs/theme-builder/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!/siteweb/AppVuejs/theme-builder/node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!/siteweb/AppVuejs/theme-builder/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
    userRequest: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss.webpack[javascript/auto]!=!/siteweb/AppVuejs/theme-builder/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!/siteweb/AppVuejs/theme-builder/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!/siteweb/AppVuejs/theme-builder/node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!/siteweb/AppVuejs/theme-builder/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
    rawRequest: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss.webpack[javascript/auto]!=!!!/siteweb/AppVuejs/theme-builder/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!/siteweb/AppVuejs/theme-builder/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!/siteweb/AppVuejs/theme-builder/node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!/siteweb/AppVuejs/theme-builder/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder',
      relativePath: './src/appson/header/header.scss',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './src/appson/header/header.scss',
      __innerRequest: './src/appson/header/header.scss'
    },
    matchResource: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
    loaders: [ [Object], [Object], [Object], [Object] ],
    error: null,
    _source: OriginalSource {
      _value: '// Imports\n' +
        'import ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from "../../../node_modules/css-loader/dist/runtime/sourceMaps.js";\n' +
        'import ___CSS_LOADER_API_IMPORT___ from "../../../node_modules/css-loader/dist/runtime/api.js";\n' +
        'var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n' +
        '// Module\n' +
        '___CSS_LOADER_EXPORT___.push([module.id, "", "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);\n' +
        '// Exports\n' +
        'export default ___CSS_LOADER_EXPORT___;\n',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!./src/appson/header/header.scss'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  module: NormalModule {
    dependencies: [ [HarmonyImportSideEffectDependency] ],
    blocks: [],
    parent: undefined,
    type: 'javascript/auto',
    context: '/siteweb/AppVuejs/theme-builder/src/appson/header',
    layer: null,
    needId: true,
    debugId: 1035,
    resolveOptions: {},
    factoryMeta: undefined,
    useSourceMap: true,
    useSimpleSourceMap: false,
    _warnings: undefined,
    _errors: undefined,
    buildMeta: { exportsType: 'namespace' },
    buildInfo: {
      cacheable: true,
      parsed: true,
      fileDependencies: [LazySet],
      contextDependencies: [LazySet],
      missingDependencies: [LazySet],
      buildDependencies: [LazySet],
      valueDependencies: [Map],
      hash: undefined,
      assets: undefined,
      assetsInfo: undefined,
      strict: true,
      exportsArgument: '__webpack_exports__'
    },
    presentationalDependencies: [ [HarmonyCompatibilityDependency], [ConstDependency] ],
    request: '/siteweb/AppVuejs/theme-builder/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!/siteweb/AppVuejs/theme-builder/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!/siteweb/AppVuejs/theme-builder/node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!/siteweb/AppVuejs/theme-builder/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
    userRequest: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss.webpack[javascript/auto]!=!/siteweb/AppVuejs/theme-builder/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!/siteweb/AppVuejs/theme-builder/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!/siteweb/AppVuejs/theme-builder/node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!/siteweb/AppVuejs/theme-builder/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
    rawRequest: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss.webpack[javascript/auto]!=!!!/siteweb/AppVuejs/theme-builder/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!/siteweb/AppVuejs/theme-builder/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!/siteweb/AppVuejs/theme-builder/node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!/siteweb/AppVuejs/theme-builder/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
    binary: false,
    parser: JavascriptParser {
      hooks: [Object],
      sourceType: 'auto',
      scope: [Object],
      state: [Circular],
      comments: [Array],
      semicolons: Set {},
      statementPath: [Array],
      prevStatement: [Node],
      currentTagData: undefined
    },
    parserOptions: undefined,
    generator: JavascriptGenerator {},
    generatorOptions: undefined,
    resource: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
    resourceResolveData: {
      _ResolverCachePluginCacheMiss: true,
      context: [Object],
      path: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
      request: undefined,
      query: '',
      fragment: '',
      module: false,
      directory: false,
      file: false,
      internal: false,
      fullySpecified: false,
      descriptionFilePath: '/siteweb/AppVuejs/theme-builder/package.json',
      descriptionFileData: [Object],
      descriptionFileRoot: '/siteweb/AppVuejs/theme-builder',
      relativePath: './src/appson/header/header.scss',
      __innerRequest_request: undefined,
      __innerRequest_relativePath: './src/appson/header/header.scss',
      __innerRequest: './src/appson/header/header.scss'
    },
    matchResource: '/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss',
    loaders: [ [Object], [Object], [Object], [Object] ],
    error: null,
    _source: OriginalSource {
      _value: '// Imports\n' +
        'import ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from "../../../node_modules/css-loader/dist/runtime/sourceMaps.js";\n' +
        'import ___CSS_LOADER_API_IMPORT___ from "../../../node_modules/css-loader/dist/runtime/api.js";\n' +
        'var ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n' +
        '// Module\n' +
        '___CSS_LOADER_EXPORT___.push([module.id, "", "",{"version":3,"sources":[],"names":[],"mappings":"","sourceRoot":""}]);\n' +
        '// Exports\n' +
        'export default ___CSS_LOADER_EXPORT___;\n',
      _valueAsBuffer: undefined,
      _name: 'webpack://./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!./src/appson/header/header.scss'
    },
    _sourceSizes: undefined,
    _sourceTypes: undefined,
    _lastSuccessfulBuildMeta: {},
    _forceBuild: false,
    _isEvaluatingSideEffects: false,
    _addedSideEffectsBailout: undefined,
    _ast: null
  },
  compilation: Compilation {
    _backCompat: true,
    hooks: {
      buildModule: [SyncHook],
      rebuildModule: [SyncHook],
      failedModule: [SyncHook],
      succeedModule: [SyncHook],
      stillValidModule: [SyncHook],
      addEntry: [SyncHook],
      failedEntry: [SyncHook],
      succeedEntry: [SyncHook],
      dependencyReferencedExports: [SyncWaterfallHook],
      executeModule: [SyncHook],
      prepareModuleExecution: [AsyncParallelHook],
      finishModules: [AsyncSeriesHook],
      finishRebuildingModule: [AsyncSeriesHook],
      unseal: [SyncHook],
      seal: [SyncHook],
      beforeChunks: [SyncHook],
      afterChunks: [SyncHook],
      optimizeDependencies: [SyncBailHook],
      afterOptimizeDependencies: [SyncHook],
      optimize: [SyncHook],
      optimizeModules: [SyncBailHook],
      afterOptimizeModules: [SyncHook],
      optimizeChunks: [SyncBailHook],
      afterOptimizeChunks: [SyncHook],
      optimizeTree: [AsyncSeriesHook],
      afterOptimizeTree: [SyncHook],
      optimizeChunkModules: [AsyncSeriesBailHook],
      afterOptimizeChunkModules: [SyncHook],
      shouldRecord: [SyncBailHook],
      additionalChunkRuntimeRequirements: [SyncHook],
      runtimeRequirementInChunk: [HookMap],
      additionalModuleRuntimeRequirements: [SyncHook],
      runtimeRequirementInModule: [HookMap],
      additionalTreeRuntimeRequirements: [SyncHook],
      runtimeRequirementInTree: [HookMap],
      runtimeModule: [SyncHook],
      reviveModules: [SyncHook],
      beforeModuleIds: [SyncHook],
      moduleIds: [SyncHook],
      optimizeModuleIds: [SyncHook],
      afterOptimizeModuleIds: [SyncHook],
      reviveChunks: [SyncHook],
      beforeChunkIds: [SyncHook],
      chunkIds: [SyncHook],
      optimizeChunkIds: [SyncHook],
      afterOptimizeChunkIds: [SyncHook],
      recordModules: [SyncHook],
      recordChunks: [SyncHook],
      optimizeCodeGeneration: [SyncHook],
      beforeModuleHash: [SyncHook],
      afterModuleHash: [SyncHook],
      beforeCodeGeneration: [SyncHook],
      afterCodeGeneration: [SyncHook],
      beforeRuntimeRequirements: [SyncHook],
      afterRuntimeRequirements: [SyncHook],
      beforeHash: [SyncHook],
      contentHash: [SyncHook],
      afterHash: [SyncHook],
      recordHash: [SyncHook],
      record: [SyncHook],
      beforeModuleAssets: [SyncHook],
      shouldGenerateChunkAssets: [SyncBailHook],
      beforeChunkAssets: [SyncHook],
      additionalChunkAssets: [Object],
      additionalAssets: [Object],
      optimizeChunkAssets: [Object],
      afterOptimizeChunkAssets: [Object],
      optimizeAssets: [AsyncSeriesHook],
      afterOptimizeAssets: [SyncHook],
      processAssets: [AsyncSeriesHook],
      afterProcessAssets: [SyncHook],
      processAdditionalAssets: [AsyncSeriesHook],
      needAdditionalSeal: [SyncBailHook],
      afterSeal: [AsyncSeriesHook],
      renderManifest: [SyncWaterfallHook],
      fullHash: [SyncHook],
      chunkHash: [SyncHook],
      moduleAsset: [SyncHook],
      chunkAsset: [SyncHook],
      assetPath: [SyncWaterfallHook],
      needAdditionalPass: [SyncBailHook],
      childCompiler: [SyncHook],
      log: [SyncBailHook],
      processWarnings: [SyncWaterfallHook],
      processErrors: [SyncWaterfallHook],
      statsPreset: [HookMap],
      statsNormalize: [SyncHook],
      statsFactory: [SyncHook],
      statsPrinter: [SyncHook],
      normalModuleLoader: [Getter]
    },
    name: undefined,
    startTime: undefined,
    endTime: undefined,
    compiler: Compiler {
      hooks: [Object],
      webpack: [Function],
      name: undefined,
      parentCompilation: undefined,
      root: [Circular],
      outputPath: '/siteweb/AppVuejs/theme-builder/dist/appson',
      watching: [Watching],
      outputFileSystem: [Object],
      intermediateFileSystem: [Object],
      inputFileSystem: [CachedInputFileSystem],
      watchFileSystem: [NodeWatchFileSystem],
      recordsInputPath: null,
      recordsOutputPath: null,
      records: {},
      managedPaths: [Set],
      immutablePaths: Set {},
      modifiedFiles: undefined,
      removedFiles: undefined,
      fileTimestamps: undefined,
      contextTimestamps: undefined,
      fsStartTime: 1647022481584,
      resolverFactory: [ResolverFactory],
      infrastructureLogger: [Function: logger],
      options: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      requestShortener: [RequestShortener],
      cache: [Cache],
      moduleMemCaches: undefined,
      compilerPath: '',
      running: true,
      idle: false,
      watchMode: true,
      _backCompat: true,
      _lastCompilation: [Circular],
      _lastNormalModuleFactory: [NormalModuleFactory],
      _assetEmittingSourceCache: [WeakMap],
      _assetEmittingWrittenFiles: Map {},
      _assetEmittingPreviousFiles: Set {}
    },
    resolverFactory: ResolverFactory { hooks: [Object], cache: [Map] },
    inputFileSystem: CachedInputFileSystem {
      fileSystem: [Object],
      _lstatBackend: [CacheBackend],
      lstat: [Function: bound provide],
      lstatSync: [Function: bound provideSync],
      _statBackend: [CacheBackend],
      stat: [Function: bound provide],
      statSync: [Function: bound provideSync],
      _readdirBackend: [CacheBackend],
      readdir: [Function: bound provide],
      readdirSync: [Function: bound provideSync],
      _readFileBackend: [CacheBackend],
      readFile: [Function: bound provide],
      readFileSync: [Function: bound provideSync],
      _readJsonBackend: [CacheBackend],
      readJson: [Function: bound provide],
      readJsonSync: [Function: bound provideSync],
      _readlinkBackend: [CacheBackend],
      readlink: [Function: bound provide],
      readlinkSync: [Function: bound provideSync]
    },
    fileSystemInfo: FileSystemInfo {
      fs: [CachedInputFileSystem],
      logger: [WebpackLogger],
      _remainingLogs: 40,
      _loggedPaths: Set {},
      _hashFunction: 'md4',
      _snapshotCache: [WeakMap],
      _fileTimestampsOptimization: [SnapshotOptimization],
      _fileHashesOptimization: [SnapshotOptimization],
      _fileTshsOptimization: [SnapshotOptimization],
      _contextTimestampsOptimization: [SnapshotOptimization],
      _contextHashesOptimization: [SnapshotOptimization],
      _contextTshsOptimization: [SnapshotOptimization],
      _missingExistenceOptimization: [SnapshotOptimization],
      _managedItemInfoOptimization: [SnapshotOptimization],
      _managedFilesOptimization: [SnapshotOptimization],
      _managedContextsOptimization: [SnapshotOptimization],
      _managedMissingOptimization: [SnapshotOptimization],
      _fileTimestamps: [StackedCacheMap],
      _fileHashes: Map {},
      _fileTshs: Map {},
      _contextTimestamps: [StackedCacheMap],
      _contextHashes: Map {},
      _contextTshs: Map {},
      _managedItems: [Map],
      fileTimestampQueue: [AsyncQueue],
      fileHashQueue: [AsyncQueue],
      contextTimestampQueue: [AsyncQueue],
      contextHashQueue: [AsyncQueue],
      contextTshQueue: [AsyncQueue],
      managedItemQueue: [AsyncQueue],
      managedItemDirectoryQueue: [AsyncQueue],
      managedPaths: [Array],
      managedPathsWithSlash: [Array],
      managedPathsRegExps: [],
      immutablePaths: [],
      immutablePathsWithSlash: [],
      immutablePathsRegExps: [],
      _cachedDeprecatedFileTimestamps: undefined,
      _cachedDeprecatedContextTimestamps: undefined,
      _warnAboutExperimentalEsmTracking: false,
      _statCreatedSnapshots: 72,
      _statTestedSnapshotsCached: 3,
      _statTestedSnapshotsNotCached: 0,
      _statTestedChildrenCached: 0,
      _statTestedChildrenNotCached: 0,
      _statTestedEntries: 0
    },
    valueCacheVersions: Map {
      'webpack/DefinePlugin process.env.NODE_ENV' => '"development"',
      'webpack/DefinePlugin_hash' => '9e418625'
    },
    requestShortener: RequestShortener { contextify: [Function: boundFn] },
    compilerPath: '',
    logger: WebpackLogger {
      getChildLogger: [Function],
      [Symbol(webpack logger raw log method)]: [Function]
    },
    options: {
      amd: undefined,
      bail: undefined,
      cache: [Object],
      context: '/siteweb/AppVuejs/theme-builder',
      dependencies: undefined,
      devServer: [Object],
      devtool: 'inline-source-map',
      entry: [Object],
      experiments: [Object],
      externals: undefined,
      externalsPresets: [Object],
      externalsType: 'var',
      ignoreWarnings: undefined,
      infrastructureLogging: [Object],
      loader: [Object],
      mode: 'development',
      module: [Object],
      name: undefined,
      node: [Object],
      optimization: [Object],
      output: [Object],
      parallelism: 100,
      performance: false,
      plugins: [Array],
      profile: false,
      recordsInputPath: false,
      recordsOutputPath: false,
      resolve: [Object],
      resolveLoader: [Object],
      snapshot: [Object],
      stats: [Object],
      target: 'browserslist',
      watch: false,
      watchOptions: {}
    },
    outputOptions: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    bail: false,
    profile: false,
    params: {
      normalModuleFactory: [NormalModuleFactory],
      contextModuleFactory: [ContextModuleFactory]
    },
    mainTemplate: MainTemplate {
      _outputOptions: [Object],
      hooks: [Object],
      renderCurrentHashCode: [Function: deprecated],
      getPublicPath: [Function: deprecated],
      getAssetPath: [Function: deprecated],
      getAssetPathWithInfo: [Function: deprecated]
    },
    chunkTemplate: ChunkTemplate { _outputOptions: [Object], hooks: [Object] },
    runtimeTemplate: RuntimeTemplate {
      compilation: [Circular],
      outputOptions: [Object],
      requestShortener: [RequestShortener],
      globalObject: 'self'
    },
    moduleTemplates: { javascript: [ModuleTemplate] },
    moduleMemCaches: undefined,
    moduleMemCaches2: undefined,
    moduleGraph: ModuleGraph {
      _dependencyMap: [WeakMap],
      _moduleMap: [Map],
      _metaMap: [WeakMap],
      _cache: undefined,
      _moduleMemCaches: undefined
    },
    chunkGraph: undefined,
    codeGenerationResults: undefined,
    processDependenciesQueue: AsyncQueue {
      _name: 'processDependencies',
      _parallelism: 103,
      _processor: [Function: bound _processModuleDependencies],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: [Array],
      _activeTasks: 4,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    addModuleQueue: AsyncQueue {
      _name: 'addModule',
      _parallelism: 1,
      _processor: [Function: bound _addModule],
      _getKey: [Function: getKey],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    factorizeQueue: AsyncQueue {
      _name: 'factorize',
      _parallelism: 1,
      _processor: [Function: bound _factorizeModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    buildQueue: AsyncQueue {
      _name: 'build',
      _parallelism: 1,
      _processor: [Function: bound _buildModule],
      _getKey: [Function],
      _entries: [Map],
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [AsyncQueue],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    rebuildQueue: AsyncQueue {
      _name: 'rebuild',
      _parallelism: 100,
      _processor: [Function: bound _rebuildModule],
      _getKey: [Function],
      _entries: Map {},
      _queued: [ArrayQueue],
      _children: undefined,
      _activeTasks: 0,
      _willEnsureProcessing: false,
      _needProcessing: false,
      _stopped: false,
      _root: [Circular],
      hooks: [Object],
      _ensureProcessing: [Function: bound _ensureProcessing]
    },
    creatingModuleDuringBuild: WeakMap { <items unknown> },
    entries: Map { 'script' => [Object] },
    globalEntry: {
      dependencies: [Array],
      includeDependencies: [],
      options: [Object]
    },
    entrypoints: Map {},
    asyncEntrypoints: [],
    chunks: Set {
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    chunkGroups: [],
    namedChunkGroups: Map {},
    namedChunks: Map {},
    modules: Set {
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      [NormalModule],
      concat: [Function],
      entry: [Function],
      filter: [Function],
      find: [Function],
      findIndex: [Function],
      includes: [Function],
      indexOf: [Function],
      join: [Function],
      lastIndexOf: [Function],
      map: [Function],
      reduce: [Function],
      reduceRight: [Function],
      slice: [Function],
      some: [Function],
      push: [Function],
      copyWithin: [Function],
      fill: [Function],
      pop: [Function],
      reverse: [Function],
      shift: [Function],
      splice: [Function],
      sort: [Function],
      unshift: [Function],
      [Symbol(Symbol.isConcatSpreadable)]: true
    },
    _modules: Map {
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/dev-server.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/index.js?protocol=ws%3A&hostname=0.0.0.0&port=8086&pathname=%2Fws&logging=info&reconnect=10' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/appson.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/log-apply-result.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/socket.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/overlay.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack/hot/emitter.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/parseURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/sendMessage.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/log.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/reloadApp.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/createSocketURL.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/strip-ansi/index.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use!/siteweb/AppVuejs/theme-builder/src/appson/header/header.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/utils/getCurrentScriptSource.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/clients/WebSocketClient.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/webpack-dev-server/client/modules/logger/index.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/ansi-html-community/index.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/html-entities/lib/index.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/events/events.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/mini-css-extract-plugin/dist/loader.js??ruleSet[1].rules[1].use[0]!/siteweb/AppVuejs/theme-builder/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!/siteweb/AppVuejs/theme-builder/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!/siteweb/AppVuejs/theme-builder/node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!/siteweb/AppVuejs/theme-builder/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/html-loader/dist/cjs.js??ruleSet[1].rules[3].use[0]!/siteweb/AppVuejs/theme-builder/src/appson/header/header.html' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/html-loader/dist/cjs.js??ruleSet[1].rules[3].use[0]!/siteweb/AppVuejs/theme-builder/src/appson/header/nav.html' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/html-loader/dist/cjs.js??ruleSet[1].rules[3].use[0]!/siteweb/AppVuejs/theme-builder/src/appson/header/topbar.html' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/html-entities/lib/named-references.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/html-entities/lib/numeric-unicode-map.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/html-entities/lib/surrogate-pairs.js' => [NormalModule],
      '/siteweb/AppVuejs/theme-builder/node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!/siteweb/AppVuejs/theme-builder/node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!/siteweb/AppVuejs/theme-builder/node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!/siteweb/AppVuejs/theme-builder/node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!/siteweb/AppVuejs/theme-builder/src/appson/header/header.scss' => [NormalModule]
    },
    records: {},
    additionalChunkAssets: [],
    assets: {},
    assetsInfo: Map {},
    _assetsRelatedIn: Map {},
    errors: [],
    warnings: [],
    children: [],
    logging: Map {},
    dependencyFactories: Map {
      [class CssDependency extends Dependency] => CssModuleFactory {},
      [Function] => [NormalModuleFactory],
      [class EntryDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [SelfModuleFactory],
      [Function] => [SelfModuleFactory],
      [class LoaderDependency extends ModuleDependency] => [NormalModuleFactory],
      [class LoaderImportDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [IgnoreErrorModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [class ContextElementDependency extends ModuleDependency] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [ContextModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory],
      [Function] => [NormalModuleFactory]
    },
    dependencyTemplates: DependencyTemplates {
      _map: [Map],
      _hash: '31d6cfe0d16ae931b73c59d7e0c089c0',
      _hashFunction: 'md4'
    },
    childrenCounters: {},
    usedChunkIds: null,
    usedModuleIds: null,
    needAdditionalPass: false,
    _restoredUnsafeCacheModuleEntries: Set {},
    _restoredUnsafeCacheEntries: Map {},
    builtModules: WeakSet { <items unknown> },
    codeGeneratedModules: WeakSet { <items unknown> },
    buildTimeExecutedModules: WeakSet { <items unknown> },
    _rebuildingModules: Map {},
    emittedAssets: Set {},
    comparedForEmitAssets: Set {},
    fileDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    contextDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    missingDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [Array],
      _needMerge: true,
      _deopt: false
    },
    buildDependencies: LazySet {
      _set: Set {},
      _toMerge: Set {},
      _toDeepMerge: [],
      _needMerge: false,
      _deopt: false
    },
    compilationDependencies: { add: [Function: deprecated] },
    _modulesCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/modules',
      _hashFunction: 'md4'
    },
    _assetsCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/assets',
      _hashFunction: 'md4'
    },
    _codeGenerationCache: CacheFacade {
      _cache: [Cache],
      _name: 'Compilation/codeGeneration',
      _hashFunction: 'md4'
    },
    _unsafeCache: true,
    _unsafeCachePredicate: [Function]
  },
  options: {
    amd: undefined,
    bail: undefined,
    cache: {
      type: 'memory',
      maxGenerations: Infinity,
      cacheUnaffected: false
    },
    context: '/siteweb/AppVuejs/theme-builder',
    dependencies: undefined,
    devServer: { hot: true, static: [Object] },
    devtool: 'inline-source-map',
    entry: { script: [Object] },
    experiments: {
      buildHttp: undefined,
      lazyCompilation: undefined,
      futureDefaults: false,
      backCompat: true,
      topLevelAwait: false,
      syncWebAssembly: false,
      asyncWebAssembly: false,
      outputModule: false,
      layers: false,
      cacheUnaffected: false
    },
    externals: undefined,
    externalsPresets: {
      web: true,
      node: false,
      nwjs: false,
      electron: false,
      electronMain: false,
      electronPreload: false,
      electronRenderer: false
    },
    externalsType: 'var',
    ignoreWarnings: undefined,
    infrastructureLogging: {
      stream: [WriteStream],
      level: 'info',
      debug: false,
      colors: true,
      appendOnly: false
    },
    loader: { target: 'web' },
    mode: 'development',
    module: {
      noParse: undefined,
      unsafeCache: [Function],
      parser: [Object],
      generator: {},
      defaultRules: [Array],
      rules: [Array]
    },
    name: undefined,
    node: { global: true, __filename: 'mock', __dirname: 'mock' },
    optimization: {
      minimizer: [Array],
      runtimeChunk: false,
      splitChunks: [Object],
      emitOnErrors: true,
      removeAvailableModules: false,
      removeEmptyChunks: true,
      mergeDuplicateChunks: true,
      flagIncludedChunks: false,
      moduleIds: 'named',
      chunkIds: 'named',
      sideEffects: 'flag',
      providedExports: true,
      usedExports: false,
      innerGraph: false,
      mangleExports: false,
      concatenateModules: false,
      checkWasmTypes: false,
      mangleWasmImports: false,
      portableRecords: false,
      realContentHash: false,
      minimize: false,
      nodeEnv: 'development'
    },
    output: {
      assetModuleFilename: 'images/[name][ext]',
      asyncChunks: true,
      charset: true,
      chunkFilename: 'js/[name].js',
      chunkFormat: 'array-push',
      chunkLoading: 'jsonp',
      chunkLoadingGlobal: 'webpackChunk_gugledas_theme_builder',
      chunkLoadTimeout: 120000,
      clean: undefined,
      compareBeforeEmit: true,
      crossOriginLoading: false,
      devtoolFallbackModuleFilenameTemplate: undefined,
      devtoolModuleFilenameTemplate: undefined,
      devtoolNamespace: '@gugledas/theme-builder',
      environment: [Object],
      enabledChunkLoadingTypes: [Array],
      enabledLibraryTypes: [],
      enabledWasmLoadingTypes: [Array],
      filename: 'js/[name].js',
      globalObject: 'self',
      hashDigest: 'hex',
      hashDigestLength: 20,
      hashFunction: 'md4',
      hashSalt: undefined,
      hotUpdateChunkFilename: '[id].[fullhash].hot-update.js',
      hotUpdateGlobal: 'webpackHotUpdate_gugledas_theme_builder',
      hotUpdateMainFilename: '[runtime].[fullhash].hot-update.json',
      iife: true,
      importFunctionName: 'import',
      importMetaName: 'import.meta',
      scriptType: false,
      library: undefined,
      module: false,
      path: '/siteweb/AppVuejs/theme-builder/dist/appson',
      pathinfo: true,
      publicPath: 'auto',
      sourceMapFilename: '[file].map[query]',
      sourcePrefix: undefined,
      strictModuleExceptionHandling: false,
      trustedTypes: undefined,
      uniqueName: '@gugledas/theme-builder',
      wasmLoading: 'fetch',
      webassemblyModuleFilename: '[hash].module.wasm',
      workerChunkLoading: 'import-scripts',
      workerWasmLoading: 'fetch',
      strictModuleErrorHandling: true
    },
    parallelism: 100,
    performance: false,
    plugins: [
      [CLIPlugin],
      [MiniCssExtractPlugin],
      [HtmlWebpackPlugin],
      OutputMonitor {},
      OutputMonitor {}
    ],
    profile: false,
    recordsInputPath: false,
    recordsOutputPath: false,
    resolve: {
      byDependency: [Object],
      cache: true,
      modules: [Array],
      conditionNames: [Array],
      mainFiles: [Array],
      extensions: [],
      aliasFields: [],
      exportsFields: [Array],
      roots: [Array],
      mainFields: [Array]
    },
    resolveLoader: {
      cache: true,
      conditionNames: [Array],
      exportsFields: [Array],
      mainFields: [Array],
      extensions: [Array],
      mainFiles: [Array]
    },
    snapshot: {
      resolveBuildDependencies: [Object],
      buildDependencies: [Object],
      resolve: [Object],
      module: [Object],
      immutablePaths: [],
      managedPaths: [Array]
    },
    stats: { preset: 'normal', colors: false },
    target: 'browserslist',
    watch: false,
    watchOptions: {}
  },
  lastHarmonyImportOrder: 1
}
reload HtmlWebpackPlugin
resource :  /siteweb/AppVuejs/theme-builder/src/appson/header/nav.html
resource :  /siteweb/AppVuejs/theme-builder/src/appson/header/topbar.html
resource :  /siteweb/AppVuejs/theme-builder/src/appson/header/header.html
asset js/script.js 613 KiB [emitted] (name: script)
asset index.html 4.91 KiB [emitted]
asset css/script.css 969 bytes [emitted] (name: script)
Entrypoint script 614 KiB = css/script.css 969 bytes js/script.js 613 KiB
runtime modules 43.1 KiB 22 modules
orphan modules 3.42 KiB [orphan] 3 modules
javascript modules 172 KiB
  modules by path ./node_modules/ 166 KiB
    modules by path ./node_modules/webpack-dev-server/client/ 56.8 KiB 12 modules
    modules by path ./node_modules/webpack/hot/*.js 4.3 KiB 4 modules
    modules by path ./node_modules/html-entities/lib/*.js 81.3 KiB 4 modules
    modules by path ./node_modules/mini-css-extract-plugin/dist/hmr/*.js 5.16 KiB 2 modules
    2 modules
  modules by path ./src/appson/ 5.66 KiB
    modules by path ./src/appson/header/*.html 5.2 KiB 3 modules
    ./src/appson/appson.js 28 bytes [built] [code generated]
    ./src/appson/header/header.js 92 bytes [built] [code generated]
    ./src/appson/header/header.scss 352 bytes [built] [code generated]
css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[1].use[2]!./node_modules/resolve-url-loader/index.js??ruleSet[1].rules[1].use[3]!./node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[1].use[4]!./src/appson/header/header.scss 0 bytes [built] [code generated]
webpack 5.65.0 compiled successfully in 1585 ms
